{
    "CSS-Advantages-010": "CSS kullanmanın avantajları nelerdir?",
    "CSS-Advantages-Customization-012": "Diğer bir avantaj da birden fazla sayfanın görünümünü ve hissini aynı anda özelleştirebilme yeteneğidir; bu da site genelindeki stilleri güncellerken zamandan ve emekten tasarruf sağlar.",
    "CSS-Advantages-Separation-011": "Avantajlardan biri, web sitelerinin sürdürülebilirliğini ve ölçeklenebilirliğini artıran içerik ve sunum arasındaki kaygıların ayrılmasıdır.",
    "CSS-Animations-Transitions-019": "CSS Animasyonları ve Geçişleri, JavaScript gerektirmeden akıcı görsel efektler sağlar.",
    "CSS-Def-002": "CSS (Basamaklı Stil Sayfaları), HTML veya XML ile yazılmış bir belgenin sunumunu tanımlamak için kullanılan bir stil sayfası dilidir.",
    "CSS-Disadvantages-013": "CSS'nin bazı dezavantajları nelerdir?",
    "CSS-Disadvantages-Browser-Compat-015": "Farklı tarayıcılar CSS kurallarını farklı şekilde yorumlayabileceğinden diğer bir sorun da tarayıcılar arası uyumluluktur. Bu, geliştiricilerin tarayıcılar arasında tutarlı işleme için satıcı öneklerini veya özellik algılama tekniklerini kullanmasını gerektirir.",
    "CSS-Disadvantages-Cascade-014": "Zorluklardan biri, bazen beklenmedik kalıtım ve özgüllük sorunlarına yol açabilen stillerin basamaklı doğasını yönetmektir.",
    "CSS-Evolution-006": "O zamandan bu yana, CSS2 (1998), CSS2.1 (2007), CSS3 (devam eden geliştirme) yoluyla gelişti ve seçiciler, animasyonlar, duyarlı tasarım ve daha fazlası gibi özellikler eklendi.",
    "CSS-Future-020": "CSS teknolojisinin geleceği ne olacak?",
    "CSS-Future-Houdini-022": "Örneğin Houdini, tarayıcının oluşturma sürecini özelleştirmek için düşük seviyeli API'ler sunmayı amaçlıyor ve geliştiricilere stil ve düzen üzerinde benzeri görülmemiş bir kontrol sağlıyor.",
    "CSS-Future-Progress-021": "CSS Çalışma Grubu, CSS Değişkenleri (Özel Özellikler), Houdini ve Konteyner Sorguları gibi yeni modüller üzerinde çalışmaya devam ediyor.",
    "CSS-Hist-Origin-005": "CSS ilk olarak Ekim 1994'te Håkon Wium Lie tarafından önerildi ve Aralık 1996'da CSS1 ile resmi bir W3C Tavsiyesi haline geldi.",
    "CSS-History-004": "CSS'nin tarihçesi nedir?",
    "CSS-History-W3C": "W3C CSS Önerileri Zaman Çizelgesi",
    "CSS-Key-Features-016": "CSS'deki bazı temel özellikler nelerdir?",
    "CSS-Layouts-018": "Flexbox ve Grid düzen sistemleri, duyarlı ve esnek sayfa düzenleri oluşturmak için güçlü araçlar sağlar.",
    "CSS-MDN-Animations": "CSS Animasyonları için MDN Kılavuzu",
    "CSS-MDN-Flexbox": "Flexbox'a MDN Kılavuzu",
    "CSS-MDN-Grid": "CSS Izgarasına MDN Kılavuzu",
    "CSS-MDN-Houdini": "MDN Houdini'ye Giriş",
    "CSS-Purpose-003": "Geliştiricilerin içeriği sunumdan ayırmasına, düzen, renkler ve yazı tipleri gibi stilleri tanımlamasına, web sayfalarını farklı cihazlar ve ekranlar arasında görsel olarak çekici ve tutarlı hale getirmesine olanak tanır.",
    "CSS-Selectors-017": "Seçiciler, türlerine, sınıflarına, kimliklerine, niteliklerine ve daha fazlasına göre belirli HTML öğelerinin hedeflenmesine olanak tanır.",
    "CSS-Tech-History-001": "CSS nedir?",
    "CSS-Usage-007": "Web projelerimde CSS'yi nasıl kullanırım?",
    "CSS-Usage-Basics-008": "CSS'yi kullanmak için stillerinizi içeren ayrı bir dosya (örneğin, style.css) oluşturursunuz, ardından bunu <head> bölümündeki <link> öğesini kullanarak HTML dosyanıza bağlarsınız.",
    "CSS-Usage-Inline-009": "Alternatif olarak, 'style' özelliğini kullanarak satır içi stilleri doğrudan HTML öğelerine ekleyebilir veya CSS'yi <head> bölümünün içindeki <style> etiketine gömebilirsiniz.",
    "CSS-Vendor-Prefixes": "Satıcı Öneklerine İlişkin MDN Kılavuzu",
    "CSS-W3C-Selectors": "W3C Seçiciler Seviye 4 Spesifikasyonu",
    "CSS-WG-Future-Modules": "W3C CSS Mevcut Çalışması"
}
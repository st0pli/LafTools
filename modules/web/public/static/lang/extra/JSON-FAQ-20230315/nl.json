{
    "JSON-Advantages-011": "JSON is over het algemeen kleiner en sneller te parseren dan XML, waardoor het ideaal is voor client-server-communicatie waarbij bandbreedte en snelheid cruciaal zijn.",
    "JSON-Basics-001": "Wat is JSON?",
    "JSON-Beautify-007": "Wat is JSON-verfraaiing?",
    "JSON-Beautify-Def-008": "JSON-verfraaiing verwijst naar het proces waarbij JSON-gegevens worden opgemaakt in een voor mensen leesbare vorm met de juiste inspringing en regeleinden, waardoor het gemakkelijker wordt om te analyseren en fouten op te sporen.",
    "JSON-Beautify-Example-009": "Voor: '{\\\"sleutel\\\":\\\"waarde\\\",\\\"array\\\":[1,2,3]}', Na: '{\\n \\\"sleutel\\\": \\\"waarde\\\", \\n \\\"matrix\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) is een lichtgewicht, op tekst gebaseerd formaat voor gegevensuitwisseling dat gemakkelijk door mensen kan worden gelezen en geschreven, en door machines gemakkelijk kan worden geparseerd en gegenereerd.",
    "JSON-JavaScript-Support-020": "JSON wordt standaard ondersteund door JavaScript via globale objecten `JSON.parse()` en `JSON.stringify()`. Elke geldige JSON is ook een geldig letterlijk JavaScript-object of -array, waardoor een naadloze conversie tussen de twee formaten mogelijk is.",
    "JSON-JavaScript-Usage-021": "Bij webontwikkeling wordt JSON vaak gebruikt voor AJAX-verzoeken, weergave op de server en gegevensopslag (bijvoorbeeld lokale opslag of IndexedDB).",
    "JSON-Linting-022": "Wat is JSON-linting en waarom is het belangrijk?",
    "JSON-Linting-Benefit-024": "Linters kunnen runtimefouten als gevolg van ongeldige JSON voorkomen, waardoor een soepele gegevensuitwisseling wordt gegarandeerd en tijd wordt bespaard bij het opsporen van mogelijke problemen.",
    "JSON-Linting-Explanation-023": "JSON-linting is het proces waarbij wordt gecontroleerd of een JSON-document voldoet aan de JSON-specificatie. Het helpt bij het identificeren van syntaxisfouten voordat wordt geprobeerd de gegevens te parseren.",
    "JSON-Path-013": "Wat is JSON-pad?",
    "JSON-Path-Example-015": "$.store.book[0].title selecteert de titel van het eerste boek in een JSON-object met een winkel die de boekenarray bevat.",
    "JSON-Path-Explanation-014": "JSON Path is een querytaal die lijkt op XPath voor XML, waarmee u gegevens uit JSON-documenten kunt extraheren met behulp van een padachtige notatie.",
    "JSON-Path-Guide": "JSONPath - XPath voor JSON",
    "JSON-Purpose-003": "Het wordt voornamelijk gebruikt om gegevens tussen een server en een webapplicatie te verzenden als alternatief voor XML, met native ondersteuning in JavaScript via de methoden `JSON.parse()` en `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "Hoe past JSON binnen JavaScript?",
    "JSON-Security-025": "Wat zijn enkele beveiligingsproblemen bij het werken met JSON?",
    "JSON-Security-Impact-026": "PotentiÃ«le beveiligingsrisico's zijn onder meer JSON-injectieaanvallen, waarbij kwaadaardige gegevens worden verzonden die onbedoeld gedrag kunnen veroorzaken wanneer ze worden geparseerd/uitgevoerd.",
    "JSON-Security-Prevention-027": "Om deze risico's te beperken, moet u altijd de gebruikersinvoer opschonen en bibliotheken gebruiken die JSON veilig parseren zonder de inhoud ervan uit te voeren (zoals de ingebouwde JSON.parse() van JavaScript). Vermijd ook het gebruik van eval() voor het parseren van JSON.",
    "JSON-Serialization-016": "Wat is JSON-serialisatie en deserialisatie?",
    "JSON-Serialization-Def-017": "JSON-serialisatie is het proces waarbij een JavaScript-object wordt omgezet in een JSON-string, terwijl deserialisatie het omgekeerde is: een JSON-string terugzetten in een JavaScript-object.",
    "JSON-Serialization-W3Schools": "JSON-serialisatie op W3Schools",
    "JSON-Syntax-004": "Wat is de basissyntaxis van JSON?",
    "JSON-Syntax-Reference": "MDN-webdocumenten op JSON",
    "JSON-Value-Types-006": "Waarden kunnen strings, getallen, booleans en arrays zijn (tussen vierkante haakjes).",
    "JSON-vs-XML-010": "Hoe verhoudt JSON zich tot XML?",
    "JSON-vs-XML-Article": "JSON en XML vergelijken",
    "MDN-JSON-in-JavaScript": "MDN Webdocs - Werken met JSON",
    "OWASP-JSON-Injection": "OWASP - JSON-injectie",
    "XML-Advantages-012": "XML biedt meer structuurflexibiliteit en ondersteunt naamruimten, wat gunstig kan zijn voor complexe documentstructuren en interoperabiliteit tussen systemen."
}
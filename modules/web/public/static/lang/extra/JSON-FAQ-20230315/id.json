{
    "JSON-Advantages-011": "JSON umumnya lebih kecil dan lebih cepat untuk diurai dibandingkan XML, sehingga ideal untuk komunikasi klien-server di mana bandwidth dan kecepatan sangat penting.",
    "JSON-Basics-001": "Apa itu JSON?",
    "JSON-Beautify-007": "Apa itu Kecantikan JSON?",
    "JSON-Beautify-Def-008": "Kecantikan JSON mengacu pada proses memformat data JSON menjadi bentuk yang lebih mudah dibaca manusia dengan lekukan dan jeda baris yang tepat, sehingga lebih mudah untuk dianalisis dan di-debug.",
    "JSON-Beautify-Example-009": "Sebelum: '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}', Setelah: '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"array\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) adalah format pertukaran data ringan berbasis teks yang mudah dibaca dan ditulis oleh manusia, serta mudah diurai dan dibuat oleh mesin.",
    "JSON-JavaScript-Support-020": "JSON secara asli didukung oleh JavaScript melalui objek global `JSON.parse()` dan `JSON.stringify()`. JSON apa pun yang valid juga merupakan objek atau larik literal JavaScript yang valid, yang memungkinkan konversi lancar antara kedua format tersebut.",
    "JSON-JavaScript-Usage-021": "Dalam pengembangan web, JSON biasanya digunakan untuk permintaan AJAX, rendering sisi server, dan penyimpanan data (misalnya penyimpanan lokal atau IndexedDB).",
    "JSON-Linting-022": "Apa itu linting JSON dan mengapa itu penting?",
    "JSON-Linting-Benefit-024": "Linter dapat mencegah kesalahan runtime karena JSON yang tidak valid, memastikan kelancaran pertukaran data dan menghemat waktu dalam men-debug potensi masalah.",
    "JSON-Linting-Explanation-023": "Linting JSON adalah proses memeriksa apakah dokumen JSON mematuhi spesifikasi JSON. Ini membantu mengidentifikasi kesalahan sintaksis sebelum mencoba mengurai data.",
    "JSON-Path-013": "Apa itu Jalur JSON?",
    "JSON-Path-Example-015": "$.store.book[0].title memilih judul buku pertama dalam objek JSON dengan toko yang berisi array buku.",
    "JSON-Path-Explanation-014": "JSON Path adalah bahasa kueri yang mirip dengan XPath untuk XML, memungkinkan Anda mengekstrak data dari dokumen JSON menggunakan notasi seperti jalur.",
    "JSON-Path-Guide": "JSONPath - XPath untuk JSON",
    "JSON-Purpose-003": "Ini terutama digunakan untuk mengirimkan data antara server dan aplikasi web sebagai alternatif XML, dengan dukungan asli dalam JavaScript melalui metode `JSON.parse()` dan `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "Bagaimana JSON cocok dengan JavaScript?",
    "JSON-Security-025": "Apa saja masalah keamanan saat bekerja dengan JSON?",
    "JSON-Security-Impact-026": "Potensi risiko keamanan mencakup serangan injeksi JSON, yaitu pengiriman data berbahaya yang dapat menyebabkan perilaku yang tidak diinginkan saat diurai/dieksekusi.",
    "JSON-Security-Prevention-027": "Untuk memitigasi risiko ini, selalu bersihkan input pengguna dan gunakan pustaka yang mengurai JSON dengan aman tanpa mengeksekusi kontennya (seperti JSON.parse() bawaan JavaScript). Selain itu, hindari penggunaan eval() untuk mengurai JSON.",
    "JSON-Serialization-016": "Apa itu serialisasi dan deserialisasi JSON?",
    "JSON-Serialization-Def-017": "Serialisasi JSON adalah proses mengubah objek JavaScript menjadi string JSON, sedangkan deserialisasi adalah kebalikannya â€“ mengubah string JSON kembali menjadi objek JavaScript.",
    "JSON-Serialization-W3Schools": "Serialisasi JSON di W3Schools",
    "JSON-Syntax-004": "Apa sintaks dasar JSON?",
    "JSON-Syntax-Reference": "Dokumen Web MDN di JSON",
    "JSON-Value-Types-006": "Nilai dapat berupa string, angka, boolean, array (diapit tanda kurung siku",
    "JSON-vs-XML-010": "Bagaimana JSON dibandingkan dengan XML?",
    "JSON-vs-XML-Article": "Membandingkan JSON dan XML",
    "MDN-JSON-in-JavaScript": "Dokumen Web MDN - Bekerja dengan JSON",
    "OWASP-JSON-Injection": "OWASP - Injeksi JSON",
    "XML-Advantages-012": "XML memberikan lebih banyak fleksibilitas struktur dan mendukung namespace, yang dapat bermanfaat untuk struktur dokumen yang kompleks dan interoperabilitas antar sistem."
}
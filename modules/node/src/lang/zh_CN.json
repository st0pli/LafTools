{
    "41ev7": "MD2",
    "5-S-B": "来自文件的 MD4",
    "6wtIW": "MD2（消息摘要算法 2）是一种加密哈希函数，它接受输入并生成 128 位（16 字节）哈希值。它由 Ronald Rivest 于 1989 年开发，作为 MD1 的后继者。 MD2 针对 8 位计算机进行了优化，与其他哈希函数相比相对简单。然而，MD2 已被证明容易受到碰撞攻击，并且不再被认为对于加密目的是安全的。 MD2 仍在某些应用程序中使用，但正在逐步淘汰，取而代之的是更安全的哈希函数，例如 SHA-256 和 SHA-3。",
    "70PnM": "MD4",
    "7gKzt": "MD4（消息摘要算法 4）是一种加密哈希函数，它接受输入并生成 128 位（16 字节）哈希值。它由 Ronald Rivest 于 1990 年开发，作为 MD2 和 MD3 的后继者。然而，MD4 已被证明容易受到碰撞攻击，并且不再被认为对于加密目的是安全的。 MD4 仍在某些应用程序中使用，但正在逐步淘汰，取而代之的是更安全的哈希函数，例如 SHA-256 和 SHA-3。",
    "AWqXD": "MD5",
    "E88Ej": "单击此处加密您的输入文本",
    "ECm8j": "单击此处加密您的输入文本",
    "IP8-V": "文本 MD2",
    "IPtV": "文本 MD4",
    "P56UK": "单击此处加密您的输入文本",
    "PJNze": "单击此处加密您的输入文本",
    "REFy8": "单击此处加密您的输入文本",
    "TtyeA": "SHA1",
    "TtyeA.sha224": "SHA224",
    "TtyeA.sha256": "SHA256",
    "TtyeA.sha384": "SHA3​​84",
    "TtyeA.sha512": "SHA512",
    "cPS6q": "所有工具",
    "eNNrM": "来自文件的 MD2",
    "g0QB9": "MD5 消息摘要算法是一种广泛使用的哈希函数，可生成 128 位哈希值。 MD5 由 Ronald Rivest 于 1991 年设计，用于取代早期的哈希函数 MD4，[3]，并于 1992 年指定为 RFC 1321。MD5 可以用作校验和来验证数据完整性，防止意外损坏。从历史上看，它被广泛用作加密哈希函数；然而，它被发现存在广泛的漏洞。它仍然适用于其他非加密目的，例如用于确定分区数据库中特定密钥的分区，并且由于比最新的安全哈希算法更低的计算要求，它可能是首选。 [4]",
    "gh9zA": "SHA-1 或安全哈希算法 1 是一种加密算法，它接受输入并生成 160 位（20 字节）哈希值。",
    "gh9zA.sha224": "SHA-224 是一种加密哈希函数，它接受输入并生成 224 位（28 字节）哈希值。它是 SHA-2 哈希函数系列的一部分，该系列还包括 SHA-256、SHA-384 和 SHA-512。 SHA-224 的设计比其前身 SHA-1 更安全，后者已被证明容易受到碰撞攻击。 SHA-224 广泛用于数字签名、消息身份验证代码和其他数据完整性至关重要的应用程序。",
    "gh9zA.sha256": "SHA-256 是一种加密哈希函数，它接受输入并生成 256 位（32 字节）哈希值。它是 SHA-2 哈希函数系列的一部分，该系列还包括 SHA-224、SHA-384 和 SHA-512。 SHA-256 的设计比其前身 SHA-1 更安全，后者已被证明容易受到碰撞攻击。 SHA-256 广泛用于数字签名、消息身份验证代码和其他数据完整性至关重要的应用程序。",
    "gh9zA.sha384": "SHA-384 是一种加密哈希函数，它接受输入并生成 384 位（48 字节）哈希值。它是 SHA-2 哈希函数系列的一部分，该系列还包括 SHA-224、SHA-256、SHA-512、SHA-512/224 和 SHA-512/256。 SHA-384 的设计比其前身 SHA-1 更安全，后者已被证明容易受到碰撞攻击。 SHA-384 广泛用于数字签名、消息身份验证代码和其他数据完整性至关重要的应用程序。",
    "gh9zA.sha512": "SHA-512 是一种加密哈希函数，它接受输入并生成 512 位（64 字节）哈希值。它是 SHA-2 哈希函数系列的一部分，该系列还包括 SHA-224、SHA-256、SHA-384、SHA-512/224 和 SHA-512/256。 SHA-512 的设计比其前身 SHA-1 更安全，后者已被证明容易受到碰撞攻击。 SHA-512 广泛用于数字签名、消息身份验证代码和其他数据完整性至关重要的应用程序。",
    "gwo79": "来自文件的 SHA1",
    "gwo79.sha224": "来自文件的 SHA224",
    "gwo79.sha256": "来自文件的 SHA256",
    "gwo79.sha384": "来自文件的 SHA384",
    "gwo79.sha512": "来自文件的 SHA512",
    "jjhid": "这是您好，世界",
    "m0105": "加密与解密",
    "m0106": "转换工具",
    "m0107": "生成工具",
    "m0108": "格式化工具",
    "m0109": "文档中心",
    "o3poi": "来自文本的 SHA1",
    "o3poi.sha224": "来自文本的 SHA224",
    "o3poi.sha256": "来自文本的 SHA256",
    "o3poi.sha384": "来自文本的 SHA384",
    "o3poi.sha512": "来自文本的 SHA512",
    "pl8S6": "单击此处加密您的输入文本",
    "qjQvD": "单击此处加密您的输入文本",
    "vQq9v": "文本 MD5",
    "vhgr3": "单击此处选择文件并直接加密。",
    "vu10K": "计算文件MD5",
    "wqp_4": "单击此处选择文件并直接加密。",
    "y_2Q1": "编码和解码",
    "y_2Q2": "对称加密算法",
    "y_2Q3": "非对称加密算法",
    "y_2Q4": "国密算法(SM)",
    "y_2Q5": "网络认证工具",
    "y_BN6": "摘要算法"
}
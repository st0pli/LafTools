{
    "JSON-Advantages-011": "JSON thường nhỏ hơn và phân tích cú pháp nhanh hơn XML, khiến nó trở nên lý tưởng cho giao tiếp giữa máy khách và máy chủ trong đó băng thông và tốc độ là rất quan trọng.",
    "JSON-Basics-001": "JSON là gì?",
    "JSON-Beautify-007": "Làm đẹp JSON là gì?",
    "JSON-Beautify-Def-008": "Làm đẹp JSON đề cập đến quá trình định dạng dữ liệu JSON thành dạng dễ đọc hơn với cách thụt lề và ngắt dòng thích hợp, giúp phân tích và gỡ lỗi dễ dàng hơn.",
    "JSON-Beautify-Example-009": "Trước: '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}', Sau: '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"mảng\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (Ký hiệu đối tượng JavaScript) là một định dạng trao đổi dữ liệu dựa trên văn bản, nhẹ, dễ đọc và viết, cũng như dễ dàng cho máy phân tích và tạo.",
    "JSON-JavaScript-Support-020": "JSON được JavaScript hỗ trợ nguyên bản thông qua các đối tượng chung `JSON.parse()` và `JSON.stringify()`. Bất kỳ JSON hợp lệ nào cũng là một đối tượng hoặc mảng bằng chữ JavaScript hợp lệ, cho phép chuyển đổi liền mạch giữa hai định dạng.",
    "JSON-JavaScript-Usage-021": "Trong phát triển web, JSON thường được sử dụng cho các yêu cầu AJAX, hiển thị phía máy chủ và lưu trữ dữ liệu (ví dụ: bộ nhớ cục bộ hoặc IndexedDB).",
    "JSON-Linting-022": "Linting JSON là gì và tại sao nó quan trọng?",
    "JSON-Linting-Benefit-024": "Linters có thể ngăn ngừa lỗi thời gian chạy do JSON không hợp lệ, đảm bảo trao đổi dữ liệu suôn sẻ và tiết kiệm thời gian gỡ lỗi các sự cố tiềm ẩn.",
    "JSON-Linting-Explanation-023": "Linting JSON là quá trình kiểm tra xem tài liệu JSON có tuân thủ đặc tả JSON hay không. Nó giúp xác định lỗi cú pháp trước khi cố gắng phân tích dữ liệu.",
    "JSON-Path-013": "Đường dẫn JSON là gì?",
    "JSON-Path-Example-015": "$.store.book[0].title chọn tiêu đề của cuốn sách đầu tiên trong đối tượng JSON có cửa hàng chứa mảng sách.",
    "JSON-Path-Explanation-014": "Đường dẫn JSON là ngôn ngữ truy vấn tương tự XPath cho XML, cho phép bạn trích xuất dữ liệu từ tài liệu JSON bằng cách sử dụng ký hiệu giống đường dẫn.",
    "JSON-Path-Guide": "JSONPath - XPath cho JSON",
    "JSON-Purpose-003": "Nó chủ yếu được sử dụng để truyền dữ liệu giữa máy chủ và ứng dụng web thay thế cho XML, với sự hỗ trợ gốc bằng JavaScript thông qua các phương thức `JSON.parse()` và `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "JSON phù hợp với JavaScript như thế nào?",
    "JSON-Security-025": "Một số mối lo ngại về bảo mật khi làm việc với JSON là gì?",
    "JSON-Security-Impact-026": "Rủi ro bảo mật tiềm ẩn bao gồm các cuộc tấn công chèn JSON, trong đó dữ liệu độc hại được gửi có thể gây ra hành vi ngoài ý muốn khi phân tích cú pháp/thực thi.",
    "JSON-Security-Prevention-027": "Để giảm thiểu những rủi ro này, hãy luôn vệ sinh đầu vào của người dùng và sử dụng các thư viện phân tích cú pháp JSON một cách an toàn mà không cần thực thi nội dung của nó (như JSON.parse() tích hợp sẵn của JavaScript). Ngoài ra, tránh sử dụng eval() để phân tích cú pháp JSON.",
    "JSON-Serialization-016": "Tuần tự hóa và giải tuần tự hóa JSON là gì?",
    "JSON-Serialization-Def-017": "Tuần tự hóa JSON là quá trình chuyển đổi một đối tượng JavaScript thành chuỗi JSON, trong khi quá trình giải tuần tự hóa thì ngược lại – biến chuỗi JSON trở lại thành đối tượng JavaScript.",
    "JSON-Serialization-W3Schools": "Tuần tự hóa JSON trên W3Schools",
    "JSON-Syntax-004": "Cú pháp cơ bản của JSON là gì?",
    "JSON-Syntax-Example-f005": "Đối tượng JSON bao gồm các cặp khóa-giá trị được đặt trong dấu ngoặc nhọn {0}. Mỗi khóa phải là một chuỗi được đặt trong dấu ngoặc kép, theo sau là dấu hai chấm và sau đó là giá trị của nó.",
    "JSON-Syntax-Reference": "Tài liệu web MDN trên JSON",
    "JSON-Value-Types-006": "Giá trị có thể là chuỗi, số, boolean, mảng (được đặt trong dấu ngoặc vuông",
    "JSON-vs-XML-010": "JSON so sánh với XML như thế nào?",
    "JSON-vs-XML-Article": "So sánh JSON và XML",
    "MDN-JSON-in-JavaScript": "Tài liệu web MDN - Làm việc với JSON",
    "OWASP-JSON-Injection": "OWASP - Chèn JSON",
    "XML-Advantages-012": "XML cung cấp nhiều tính linh hoạt hơn về cấu trúc và hỗ trợ các không gian tên, điều này có thể mang lại lợi ích cho các cấu trúc tài liệu phức tạp và khả năng tương tác giữa các hệ thống."
}
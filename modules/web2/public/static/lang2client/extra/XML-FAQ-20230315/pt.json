{
    "Diff-XML-JSON-Article": "Diferença entre XML e JSON",
    "MDN-XML-Syntax": "Documentos da Web MDN - Sintaxe XML",
    "W3Schools-XML-Validation": "W3Schools - Validação XML",
    "XML-Advantage-Readable-018": "Sua natureza legível permite fácil inspeção e depuração, e a capacidade de definir estruturas personalizadas o torna flexível para vários casos de uso.",
    "XML-Advantage-Standardized-017": "XML é um padrão amplamente adotado, tornando-o compatível com diversas plataformas e sistemas, promovendo interoperabilidade e troca de dados.",
    "XML-Advantages-016": "Quais são as vantagens de usar XML?",
    "XML-Attributes-006": "Os elementos podem ter atributos, que fornecem informações adicionais sobre o elemento na tag de abertura, como {0}",
    "XML-Basics-001": "O que é XML?",
    "XML-Def-002": "XML (eXtensible Markup Language) é uma linguagem de marcação que define um conjunto de regras para codificação de documentos em um formato legível por humanos e por máquina.",
    "XML-Disadvantage-Size-020": "O XML pode ser relativamente detalhado, resultando em tamanhos de arquivo maiores em comparação com alternativas como JSON, o que afeta a velocidade de transmissão e os requisitos de armazenamento.",
    "XML-Disadvantages-019": "Quais são algumas desvantagens de usar XML?",
    "XML-JSON-Diff-Structure-014": "XML usa tags hierárquicas e detalhadas para estrutura, enquanto JSON depende de pares de valores-chave e matrizes. Exemplo: XML {0} versus JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML tem uma sintaxe mais rígida com tags e atributos de fechamento, enquanto a sintaxe do JSON é mais leve e próxima da notação de objeto JavaScript. JSON é geralmente considerado mais fácil de analisar e transmitir pela web.",
    "XML-JSON-Difference-013": "Qual é a diferença entre XML e JSON?",
    "XML-Nesting-007": "Como funciona o aninhamento em XML?",
    "XML-Nesting-Example-009": "Por exemplo, `<book><title>Título do meu livro</title><author>John Doe</author></book>` representa um livro com seu título e autor como elementos aninhados.",
    "XML-Nesting-Explanation-008": "Em XML, os elementos podem ser aninhados uns dentro dos outros para representar relacionamentos hierárquicos. Os elementos filhos são colocados entre as tags de abertura e fechamento do elemento pai.",
    "XML-Processing-Speed-021": "A análise e a geração de XML podem ser mais lentas devido à sua sintaxe estrita e à necessidade de validação, especialmente ao lidar com documentos complexos.",
    "XML-Purpose-003": "Ele foi projetado para transportar dados, em vez de exibi-los como HTML, permitindo que seja usado como um formato comum para compartilhar informações estruturadas em diferentes plataformas e aplicativos.",
    "XML-Syntax-004": "Qual é a sintaxe básica do XML?",
    "XML-Syntax-Example-005": "Um documento XML simples consiste em elementos em uma estrutura semelhante a uma árvore. Cada elemento começa com uma tag entre colchetes angulares (<element>) e termina com uma tag de fechamento (</element>).",
    "XML-Validation-010": "O que é validação XML e como funciona?",
    "XML-Validation-Def-011": "A validação XML garante que um documento XML siga um conjunto específico de regras definidas em uma Definição de Tipo de Documento (DTD) ou um Esquema XML (XSD).",
    "XML-Validation-Process-012": "Os validadores verificam se todos os elementos e atributos necessários estão presentes, validam os tipos de dados e impõem quaisquer restrições especificadas no esquema antes de processar o documento."
}
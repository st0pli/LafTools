{
    "-8l11": "Скопировано",
    "-DqwwR": "Операция завершена.",
    "-GJ_72": "Переключился на выбранную рабочую область {0}",
    "-Jx4J": "Локальная учетная запись",
    "-Rj3y": "Темы",
    "-XZnW": "Назад",
    "-Yo129I": "Текстовые инструменты",
    "-nL_B5PoN": "Сжимает {0}",
    "01do0y": "Каннада",
    "04SSf": "Забыли пароль?",
    "07naT": "Ошибка: {0}",
    "0Ceqru": "Base64 — это нотация для кодирования произвольных байтовых данных с использованием ограниченного набора символов, которые могут быть удобно использованы людьми и обработаны компьютерами.",
    "0MO3jj": "MD5 (Message-Digest 5) — широко используемая хэш-функция. Он использовался в различных приложениях безопасности, а также широко используется для проверки целостности файлов. Однако MD5 не является устойчивым к коллизиям и не подходит для таких приложений, как сертификаты SSL/TLS или цифровые подписи, которые полагаются на это свойство.",
    "0PgZ_": "Перевод",
    "0YKce": "Преобразует строку двоично-десятичного числа (BCD) в десятичное число.",
    "0gvcN": "Добро пожаловать на страницу обзора, она все еще находится в разработке.",
    "0pfdz7": "Узбекский",
    "123e4567": "Что такое Base64?",
    "13pmE": "Поддерживать нас",
    "1507oa": "Бенгальский",
    "1JOFP": "Открыть мое рабочее пространство",
    "1NTgQ": "Открытая рабочая область",
    "1Npez": "Пожалуйста, укажите путь",
    "1Tuab": "Скопировано",
    "1X8x7": "Пример",
    "1Xe82x7": "{0} Свернуть",
    "1Xe8wx7": "Шестнадцатеричная строка",
    "1Xe8x7": "{0} Украсить",
    "1Xe8x7qe": "двоично-десятичный код",
    "1YmJc": "Выберите один из вариантов в качестве предпочтительного языка:",
    "1a2b3c4d": "Зачем использовать Base64?",
    "1bd": "Рабочий процесс",
    "1e3e5n": "Хауса",
    "1h6jH": "Внимание: выходные данные представляют собой пустое значение, длина которого равна нулю!",
    "1j62a": "Сделай это в другое время",
    "1k_44": "Эта операция декодирует данные из строки ASCII Base64 обратно в необработанный формат.",
    "1th2nw": "сингальский",
    "20nmcv": "латинский",
    "22XLF": "Еще не закончена",
    "23fgh456": "История Base64",
    "24vLI": "Созданный",
    "27j7sy": "Шона",
    "2D9a6": "Забыли пароль?",
    "2D9qdk6": "Достаточно ли это безопасно?",
    "2IF6A": "Похоже, с хранилищем Forge Save возникла какая-то проблема.",
    "2JyFN": "Скопировать результат в буфер обмена",
    "2Ocbey": "Версия",
    "2RhAT": "Похоже, в процессе извлечения подделки возникла какая-то проблема",
    "2Ruh6": "Создать новую локальную учетную запись",
    "2S5ap": "Переключить полноэкранный режим",
    "2bcde3fg": "Недостатки Base64",
    "2bqHk": "Загрузить из файла",
    "2e4fb7": "Игбо",
    "2giYv": "Тестовый пароль: {0}",
    "2khdsv": "пушту",
    "2qdin8": "Пожалуйста, введите проверочный код",
    "30eo2v": "Гуджарати",
    "32D9a6": "Завести аккаунт",
    "33RXi": "Запрос был отклонен из-за неудовлетворительных параметров.",
    "346qid": "Русский",
    "34wxyz56": "Как кодировать/декодировать Base64 в JavaScript?",
    "39dsCt": "Вы получите последнее уведомление от служб приложений, если таковое имеется.",
    "3ii2tt": "Шотландский гэльский",
    "3umnB": "Неизвестный токен",
    "441oja": "грузинский",
    "44Ntqw-": "Проведение операции.",
    "46bksi": "Литовский",
    "4K_vhq": "Дублировать эту вкладку",
    "4PIqD": "Обзор кода",
    "4UYIJ": "Еще не завершено.",
    "4cGA_": "Получение данных для системных настроек...",
    "4hijk5lm": "Увеличение размера: закодированные данные примерно на 33% больше исходных двоичных данных.",
    "4kKe4": "Ваш пароль",
    "4tqb4x": "Венгерский",
    "4vdfwf": "ХОРОШО",
    "4wlih": "Запрос был отклонен из-за неудовлетворительных параметров.",
    "52OiQ": "Скопировано {0} раз.",
    "54cwb": "Системный API Websocket обнаружил ошибку: {0}",
    "56ibcj": "вьетнамский",
    "58HQX": "Если вы не знаете его значение, обратитесь к своему администратору за более подробной информацией, которую можно найти в его настройках.",
    "5BOhl": "Код приглашения",
    "5Ih2u": "Инструменты Навигатор",
    "5NCPT": "Темный режим",
    "5NJeGsu1": "Электронная почта, вы можете легко систематизировать свой почтовый ящик, составлять и отправлять сообщения, а также оставаться в курсе своей корреспонденции. До сих пор он использовался только как инструмент связи между пользователями и нашей командой.",
    "5NJeddqGsu1": "В этот раздел входят компьютерные материалы, статьи вики, руководства по использованию и многое другое.",
    "5NJedqddqGsu1": "В этом разделе представлены компьютерные ресурсы, которые можно использовать для создания собственных проектов.",
    "5Perd": "К сожалению, функция «Использовать Smart Editor» пока недоступна. Мы все еще работаем над его реализацией. Спасибо за ваше терпение.",
    "5ZBYR": "Назад",
    "5dF7o": "Обновить",
    "5e6f7g8h": "Base64 используется, когда двоичные данные необходимо передавать через текстовые протоколы, такие как электронная почта или JSON, или встраивать в места, где разрешен только текст.",
    "5eXVS": "Содержание сценария",
    "5lW8qp": "Показать пример этого инструмента",
    "5q-Zxqa": "Менеджер скриптов",
    "5qPOJL": "Чтобы поддержать LafTools, рассмотрите возможность поставить звездочку нашему репозиторию на GitHub или перейти на нашу профессиональную версию с помощью ежемесячной подписки. Мы будем очень признательны за вашу помощь и обещаем, что LafTools станет еще лучше на собранные средства.",
    "5qV5Sf": "Удалить эту запись из списка",
    "5rg5mt": "малагасийский",
    "5srFq": "LafИнструменты",
    "5v8jl7": "Хмонг",
    "6AumW": "Действие по умолчанию",
    "6ClPV": "Создавать",
    "6MrfIfGc6": "Минимизировать код",
    "6UICxHzVR.name": "Украсить {0}",
    "6cOPZ": "Двоично-десятичное число (BCD) — это класс двоичного кодирования десятичных чисел, где каждая десятичная цифра представлена ​​фиксированным количеством бит, обычно четырьмя или восемью. Для знака иногда используются специальные битовые комбинации.",
    "6hsnqWe": "Хотя LafTools бесплатен и имеет открытый исходный код, его обслуживание по-прежнему требует значительного количества времени и энергии. В частности, нам нужны средства для оплаты некоторых облачных API. Если вы цените LafTools, пожалуйста, поддержите нас.",
    "6j13s3": "исландский",
    "6nopqrst": "Без шифрования. Base64 не является методом шифрования; он легко декодируется и не обеспечивает никакой безопасности.",
    "6qT9d-N": "Для записной книжки LafTools не только предоставляет диспетчер команд оболочки, но также в ближайшем будущем добавит в него мощные инструменты для заметок, такие как MarkDown, Latex, {0} и т. д.",
    "6ulj8i": "непальский",
    "6wdtJ4vmg.name.0912": "Минимизировать {0}",
    "6yOXx": "Неизвестное имя",
    "71x7x": "Исходный код на GitHub",
    "78abcdef": "JavaScript предлагает встроенные функции, такие как btoa() и atob() для кодирования и декодирования Base64 соответственно.",
    "78ijk9lm": "Base64 был впервые определен в RFC 1421 (1993 г.), а затем стандартизирован в RFC 4648 (2006 г.).",
    "7MOO1": "Войти",
    "7g5w22": "Норвежский",
    "7k56u3": "галисийский",
    "7q40W": "Невозможно инициализировать администратора",
    "7u4vzu": "словацкий",
    "7x3f6": "Вкладка - 1",
    "82r0C": "Управляйте своим списком TODO и делайте все более эффективно.",
    "8LdRj": "Обзор",
    "8LdRjq": "Вычислить",
    "8LdevRj": "Услуга",
    "8M1wY": "Местный терминал",
    "8OqB7hN1s": "На этой странице представлен стиль пользовательского интерфейса IDE для LafTools, более высокого уровня абстракции для LafTools.",
    "8eeL1Kk": "О",
    "8mn_qa": "Получение данных из терминальных служб...",
    "8qzWJu": "К сожалению, в настоящее время мы еще не поддерживаем устройства с маленьким экраном. Для посещения этой страницы используйте ПК.",
    "97um9v": "Гавайский",
    "98KcL": "Преобразует десятичное число в двоично-десятичное число (BCD).",
    "9_qaj": "Выйти из этой формы",
    "9e4fcl": "тамильский",
    "9eZHM": "Упс! Кажется, мы столкнулись с некоторыми предупреждениями или ошибками.",
    "9gqo8x": "Латышский",
    "9i0j1k2l": "Он также используется для встраивания небольших изображений непосредственно в HTML или CSS в качестве URL-адресов данных.",
    "9m85mf": "сесото",
    "9qy1xn": "португальский",
    "9zCSc": "Нет доступных рабочих мест",
    "A69UZ": "Переменные",
    "AVUvu": "Base62 — это нотация для кодирования произвольных байтовых данных с использованием ограниченного набора символов, которые могут быть удобно использованы людьми и обработаны компьютерами. Большая база счисления приводит к получению более коротких строк, чем при использовании десятичной или шестнадцатеричной системы.",
    "AfPC0": "Ваш текстовый пароль",
    "Ahrjc": "Каталог не существует, вы хотите его создать?",
    "AkXgF": "В процессе: {0} %",
    "Apx8D": "Как сбросить пароль вручную?",
    "B-GCloBBt": "Сжимает код расширяемого языка разметки (XML).",
    "B0s0z": "Цель этой страницы:",
    "BCySSDEKL": "Возможно, возникла проблема совместимости с вашей текущей версией программного обеспечения.",
    "BGd7P9": "Эта операция кодирует необработанные данные в строку ASCII Base64.",
    "BGd7dP9": "Эта операция кодирует необработанные данные в строку ASCII {0}.",
    "BGdd7dP9": "Эта операция кодирует необработанные данные в строку ASCII {0}.",
    "BLAKE2-021": "BLAKE2 — еще одна современная альтернатива, обеспечивающая более высокие скорости по сравнению с SHA-2 при сохранении высокого уровня безопасности. Он предлагает несколько вариантов, включая BLAKE2b и BLAKE2s.",
    "BLAKE2_Info-023": "Информация о BLAKE2",
    "BShq3M": "Проблемы",
    "BuihG": "Настройки системы",
    "C3L9MmdDU7": "Справочник",
    "CASef": "Хорошо, операция запущена.",
    "CEv8B": "Вы уверены, что удалите эту запись? Если да, то нажмите эту кнопку еще раз.",
    "CFg8B": "Размер должен быть от 0 до 512.",
    "CP-Advantage-Career-014": "Обучение программированию открывает возможности карьерного роста в различных отраслях и позволяет разрабатывать инновационные решения, автоматизировать задачи и понимать сложные системы.",
    "CP-Advantages-013": "Каковы преимущества изучения компьютерного программирования?",
    "CP-Basics-001": "Что такое компьютерное программирование?",
    "CP-Def-002": "Компьютерное программирование включает в себя написание инструкций или кода на языке программирования, чтобы инструктировать компьютеры о том, как выполнять определенные задачи.",
    "CP-History-004": "Какова история компьютерного программирования?",
    "CP-History-Origin-005": "Первые программируемые машины появились во времена работы Ады Лавлейс над аналитической машиной Чарльза Бэббиджа в 19 веке. Однако современное программирование стало развиваться с изобретением первого электронного компьютера общего назначения ENIAC в 1940-х годах.",
    "CP-Lang-Choice-009": "Выбор языка зависит от таких факторов, как требования проекта, поддержка сообщества, простота обучения и требования к производительности.",
    "CP-Language-Evolution-006": "С тех пор языки программирования эволюционировали от машинного кода к ассемблеру, затем к языкам высокого уровня, таким как FORTRAN, COBOL, C, а теперь и к современным языкам, таким как Python, JavaScript и Rust.",
    "CP-Languages-007": "Какие популярные языки программирования?",
    "CP-Languages-List-008": "Популярные языки программирования включают Java, Python, JavaScript, C++, C#, Swift, Go, PHP, Ruby и Kotlin. Каждый из них имеет свои сильные стороны и варианты использования, например, Python для анализа данных, JavaScript для веб-разработки и C++ для системного программирования.",
    "CP-Process-010": "Каков процесс компьютерного программирования?",
    "CP-Process-Explanation-011": "Программирование обычно включает в себя планирование (определение проблемы и разработку решения), кодирование (написание исходного кода на выбранном языке), тестирование (отладку и проверку функциональности) и обслуживание (обновление и улучшение программы с течением времени).",
    "CP-Purpose-003": "Программисты создают алгоритмы, решают проблемы и создают программные приложения, которые могут автоматизировать процессы, манипулировать данными и взаимодействовать с пользователями или другими системами.",
    "CP-SDLC-012": "Это часто структурировано в рамках жизненного цикла разработки программного обеспечения (SDLC), который включает в себя дополнительные этапы, такие как анализ требований, проектирование, развертывание и приемочное тестирование для пользователей.",
    "CP-Skillset-015": "Это также улучшает логическое мышление, навыки решения проблем и адаптируемость к новым технологиям, что делает человека более универсальным в эпоху цифровых технологий.",
    "CSS-Advantages-010": "Каковы преимущества использования CSS?",
    "CSS-Advantages-Customization-012": "Еще одним преимуществом является возможность настраивать внешний вид нескольких страниц одновременно, что экономит время и усилия при обновлении стилей всего сайта.",
    "CSS-Advantages-Separation-011": "Одним из преимуществ является разделение задач между содержанием и представлением, что улучшает удобство обслуживания и масштабируемость веб-сайтов.",
    "CSS-Animations-Transitions-019": "CSS-анимация и переходы обеспечивают плавные визуальные эффекты без использования JavaScript.",
    "CSS-Def-002": "CSS (каскадные таблицы стилей) — это язык таблиц стилей, используемый для описания представления документа, написанного на HTML или XML.",
    "CSS-Disadvantages-013": "Каковы некоторые недостатки CSS?",
    "CSS-Disadvantages-Browser-Compat-015": "Другая проблема — кроссбраузерная совместимость, поскольку разные браузеры могут по-разному интерпретировать правила CSS. Это требует от разработчиков использования префиксов поставщиков или методов обнаружения функций для единообразного рендеринга в браузерах.",
    "CSS-Disadvantages-Cascade-014": "Одной из проблем является управление каскадной природой стилей, которая иногда может привести к неожиданным проблемам с наследованием и специфичностью.",
    "CSS-Evolution-006": "С тех пор он развивался через CSS2 (1998 г.), CSS2.1 (2007 г.), CSS3 (постоянная разработка), вводя такие функции, как селекторы, анимацию, адаптивный дизайн и многое другое.",
    "CSS-Future-020": "Каково будущее технологии CSS?",
    "CSS-Future-Houdini-022": "Houdini, например, стремится предоставить низкоуровневые API для настройки процесса рендеринга браузера, предоставляя разработчикам беспрецедентный контроль над стилем и макетом.",
    "CSS-Future-Progress-021": "Рабочая группа CSS продолжает работать над новыми модулями, такими как CSS-переменные (пользовательские свойства), Houdini и контейнерные запросы.",
    "CSS-Hist-Origin-005": "CSS был впервые предложен Хоконом Виумом Ли в октябре 1994 года и стал официальной рекомендацией W3C в декабре 1996 года с CSS1.",
    "CSS-History-004": "Какова история CSS?",
    "CSS-History-W3C": "График рекомендаций W3C CSS",
    "CSS-Key-Features-016": "Каковы некоторые ключевые особенности CSS?",
    "CSS-Layouts-018": "Системы макетов Flexbox и Grid предоставляют мощные инструменты для создания адаптивных и гибких макетов страниц.",
    "CSS-MDN-Animations": "Руководство MDN по CSS-анимации",
    "CSS-MDN-Flexbox": "Руководство MDN по Flexbox",
    "CSS-MDN-Grid": "Руководство MDN по CSS Grid",
    "CSS-MDN-Houdini": "MDN Введение в Houdini",
    "CSS-Purpose-003": "Он позволяет разработчикам отделять контент от представления, определяя такие стили, как макет, цвета и шрифты, делая веб-страницы визуально привлекательными и единообразными на разных устройствах и экранах.",
    "CSS-Selectors-017": "Селекторы позволяют ориентироваться на определенные элементы HTML на основе их типа, класса, идентификатора, атрибутов и т. д.",
    "CSS-Tech-History-001": "Что такое CSS?",
    "CSS-Usage-007": "Как мне использовать CSS в своих веб-проектах?",
    "CSS-Usage-Basics-008": "Чтобы использовать CSS, вы создаете отдельный файл (например, style.css), содержащий ваши стили, а затем связываете его с вашим HTML-файлом с помощью элемента <link> в разделе <head>.",
    "CSS-Usage-Inline-009": "Альтернативно вы можете включить встроенные стили непосредственно в элементы HTML, используя атрибут style, или встроить CSS в тег <style> внутри раздела <head>.",
    "CSS-Vendor-Prefixes": "Руководство MDN по префиксам поставщиков",
    "CSS-W3C-Selectors": "Спецификация селекторов W3C уровня 4",
    "CSS-WG-Future-Modules": "Текущая работа W3C CSS",
    "CSSNano": "cssnano — GitHub",
    "CVUl0": "LafИнструменты",
    "CfZAX": "Файл {0} выбран, мы загружаем его в основной сервис.",
    "CidOqAZ": "Как создатель LafTools, я очень тронут тем, что вы готовы нас поддержать. В нашей команде есть хорошие люди, которые усердно работают над постоянным улучшением LafTools.",
    "Cide2w": "Чтобы увидеть, есть ли какие-либо проблемы при выполнении вашего действия.",
    "DIQFq": "Пожалуйста, проверьте, правильно ли указан параметр URL. Похоже, у вас нет разрешения на заполнение этой формы. По умолчанию вы сможете увидеть приведенное ниже сообщение в выходных данных службы при ее запуске.",
    "DIweGq": "Защитите свои инструменты LafTools",
    "DSEtLTxUU": "Время – это валюта вашей жизни, тратьте его с умом.",
    "DTTPW": "Сбросить статус",
    "DVoKw": "Выйти из этой системы",
    "Diff-XML-JSON-Article": "Разница между XML и JSON",
    "DqFI5": "Уровни должны быть больше 0",
    "DrXAq": "Добро пожаловать в LafTools!",
    "DrbEr": "Указанный вами пароль пуст. Проверьте и повторите попытку.",
    "DtlAc": "Загрузка системных ресурсов",
    "Dxlw0": "Полный",
    "E62ej": "Фильтрация команд оболочки",
    "E6F9B": "Добавьте его в рабочий процесс",
    "EEQkeW": "Алгоритм MD6 (Message-Digest 6) представляет собой криптографическую хэш-функцию. Он использует древовидную структуру Меркла, позволяющую выполнять огромные параллельные вычисления хэшей для очень длинных входных данных.",
    "EO6Qv5dCA": "Минимизирует код JSON, уменьшает размер пакета вашего кода JSON.",
    "ERK7E": "Если у вас возникнут какие-либо проблемы или у вас есть какие-либо предложения при использовании LafTools, пожалуйста, свяжитесь с нами по электронной почте или GitHub в любое время, мы готовы срочно улучшить его.",
    "EgBXL": "Выберите или укажите теги.",
    "Ewvgo": "Еще не началось.",
    "ExqvX": "Список горячих клавиш",
    "Eyq856": "Мы еще не закончили — мы стремимся предоставлять новейшие и лучшие функции и будем продолжать выпускать обновления, чтобы обеспечить вам максимальное удобство.",
    "F-OUm": "Быстрая настройка LafTools",
    "F0CCF": "Список горячих клавиш",
    "F4uS2": "Новый файл",
    "FBVyc": "Пожалуйста, повторно введите код подтверждения",
    "FDlRI": "Назовите эту новую вкладку и нажмите, чтобы подтвердить ее.",
    "FLsbFsOZq": "IDE",
    "FOyHW": "Искать везде",
    "FQzhg": "Игнорировать пустой ввод",
    "FYRoL": "Делает отступы и настраивает код каскадных таблиц стилей (CSS).",
    "FhVWl": "Зашифруйте свой пароль",
    "FjYbR": "Выход",
    "Fv-zz": "Копировать результат",
    "Fy217": "Настройте этот инструмент",
    "Fzp3t": "Пожалуйста, укажите значение в этом поле",
    "G3MJN": "Показать панель вывода",
    "G9QVo": "Управление вкладками",
    "GR7jK": "Тип",
    "Ggob_": "Отмена",
    "H-Ae75": "Пожалуйста, подтвердите свой локальный пароль.",
    "H-qA75": "Пожалуйста, укажите локальный пароль.",
    "H8fQ4": "Переключиться в светлый или темный режим",
    "HEAhr": "После перевода результат появится здесь.",
    "HIc3c": "Завершенный",
    "HNDat": "Чтобы внести изменения, нажмите кнопку «{0}». В противном случае нажмите «{1}», чтобы применить изменения. Желаю вам хорошо провести время с этим набором инструментов!",
    "HTMLMinifier": "HTMLMinifier — GitHub",
    "HistOfProg-Wikipedia": "История языков программирования — Википедия",
    "HjvV3": "Мы не будем удалять его файлы на диске, просто удалим эту запись из списка.",
    "HyIC_": "Косая клавиша (/)",
    "HyIC_d": "Косая клавиша (/)",
    "I8FLi": "Теперь пришло время настроить администратора. Установите как можно более сложный пароль, чтобы вы могли сбить с толку этих невежливых злоумышленников.",
    "IAC0A": "Инструменты поиска",
    "ICefi": "Отменено",
    "IKqqATS": "Обновить данные текущей страницы",
    "IWUH5": "Показать пример",
    "IaSyO": "Отмена",
    "IfsdGO": "Избранное",
    "ImUmf": "Новый",
    "IxAJswoSh": "Анализирует и печатает действительный код JavaScript. Также работает с нотацией объектов JavaScript (JSON).",
    "J-3KA": "Укажите имя этого сценария, это будет более полезно.",
    "J164i": "например Копирование файлов на удаленный сервер",
    "J2xoL": "См. ошибку: {0}",
    "JA_Bp": "Сначала укажите имя нового тега.",
    "JQEVK": "Код",
    "JQLmS": "Скорректировал размер",
    "JQLmSq": "Завершенный.",
    "JS-Basics-001": "Что такое JavaScript?",
    "JS-DOM-API-007": "Как JavaScript взаимодействует с DOM?",
    "JS-DOM-API-Explanation-008": "JavaScript предоставляет API объектной модели документа (DOM) для управления HTML и CSS, что позволяет разработчикам динамически изменять содержимое, стиль и прослушиватели событий.",
    "JS-DOM-Example-009": "Например, вы можете выбрать элемент и изменить его текстовое содержимое: `document.getElementById('myElement').textContent = 'New Text';`",
    "JS-Data-Types-010": "Какие типы данных существуют в JavaScript?",
    "JS-Data-Types-List-011": "JavaScript поддерживает различные типы данных, включая примитивные, такие как строка, число, логическое значение, значение NULL, неопределенное значение и символ, а также сложные типы, такие как объект и массив.",
    "JS-Def-002": "JavaScript (JS) — это интерпретируемый язык программирования высокого уровня, который широко используется для создания веб-приложений, улучшения пользовательских интерфейсов и построения серверной логики с помощью Node.js.",
    "JS-Event-Loop-013": "Что такое цикл событий в JavaScript?",
    "JS-Event-Loop-Explanation-014": "Цикл событий — это основная часть модели параллелизма JavaScript, которая обеспечивает асинхронное выполнение посредством обратных вызовов, обещаний и async/await.",
    "JS-Event-Loop-Process-015": "Сначала он запускает основной сценарий, затем выполняет любые функции обратного вызова при возникновении связанных с ними событий (например, ввода пользователя или ответов сети), управляя ими через систему очередей.",
    "JS-Function-Syntax-006": "Функции определяются с помощью ключевого слова function, за которым следуют имя функции и параметры, заключенные в круглые скобки. Тело функции заключено в фигурные скобки: `function Greeting(name) { console.log(`Hello, ${name}!`); }`",
    "JS-Purpose-003": "Первоначально он был разработан Бренданом Эйхом из Netscape в 1995 году и с тех пор превратился в один из самых популярных языков, поддерживаемый всеми основными веб-браузерами и платформами, такими как Electron и React Native.",
    "JS-Syntax-004": "Каков основной синтаксис JavaScript?",
    "JS-Type-Checking-012": "Проверка типа может выполняться с помощью конструкторов («typeof value === 'string'») или оператора «instanceof» для объектов, наследуемых от встроенных конструкторов (например, «value instanceof Array»).",
    "JSON-Advantages-011": "JSON, как правило, меньше по размеру и быстрее анализируется, чем XML, что делает его идеальным для связи клиент-сервер, где пропускная способность и скорость имеют решающее значение.",
    "JSON-Basics-001": "Что такое JSON?",
    "JSON-Beautify-007": "Что такое украшение JSON?",
    "JSON-Beautify-Def-008": "Украшение JSON — это процесс форматирования данных JSON в более удобочитаемую форму с правильными отступами и разрывами строк, что упрощает анализ и отладку.",
    "JSON-Beautify-Example-009": "До: '{\\\"ключ\\\":\\\"значение\\\",\\\"массив\\\":[1,2,3]}', После: '{\\n \\\"ключ\\\": \\\"значение\\\", \\n \\\"массив\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (нотация объектов JavaScript) — это легкий текстовый формат обмена данными, который легко читать и писать людям, а машинам легко анализировать и генерировать.",
    "JSON-JavaScript-Support-020": "JSON изначально поддерживается JavaScript через глобальные объекты JSON.parse() и JSON.stringify(). Любой действительный JSON также является допустимым литеральным объектом или массивом JavaScript, что обеспечивает плавное преобразование между двумя форматами.",
    "JSON-JavaScript-Usage-021": "В веб-разработке JSON обычно используется для запросов AJAX, рендеринга на стороне сервера и хранения данных (например, локальное хранилище или IndexedDB).",
    "JSON-Linting-022": "Что такое JSON-линтинг и почему это важно?",
    "JSON-Linting-Benefit-024": "Линтеры могут предотвратить ошибки во время выполнения из-за недопустимого JSON, обеспечивая плавный обмен данными и экономя время на отладку потенциальных проблем.",
    "JSON-Linting-Explanation-023": "Линтинг JSON — это процесс проверки соответствия документа JSON спецификации JSON. Это помогает выявить синтаксические ошибки перед попыткой анализа данных.",
    "JSON-Path-013": "Что такое путь JSON?",
    "JSON-Path-Example-015": "$.store.book[0].title выбирает название первой книги в объекте JSON с магазином, содержащим массив книг.",
    "JSON-Path-Explanation-014": "JSON Path — это язык запросов, аналогичный XPath для XML, позволяющий извлекать данные из документов JSON, используя нотацию, подобную пути.",
    "JSON-Path-Guide": "JSONPath — XPath для JSON.",
    "JSON-Purpose-003": "Он в основном используется для передачи данных между сервером и веб-приложением в качестве альтернативы XML со встроенной поддержкой JavaScript через методы JSON.parse() и JSON.stringify().",
    "JSON-Scope-in-JavaScript-019": "Как JSON вписывается в JavaScript?",
    "JSON-Security-025": "Какие проблемы безопасности возникают при работе с JSON?",
    "JSON-Security-Impact-026": "Потенциальные угрозы безопасности включают атаки с использованием JSON-инъекций, при которых отправляются вредоносные данные, которые могут вызвать непреднамеренное поведение при анализе/выполнении.",
    "JSON-Security-Prevention-027": "Чтобы снизить эти риски, всегда очищайте вводимые пользователем данные и используйте библиотеки, которые безопасно анализируют JSON, не выполняя его содержимое (например, встроенный в JavaScript JSON.parse()). Кроме того, избегайте использования eval() для анализа JSON.",
    "JSON-Serialization-016": "Что такое сериализация и десериализация JSON?",
    "JSON-Serialization-Def-017": "Сериализация JSON — это процесс преобразования объекта JavaScript в строку JSON, а десериализация — это обратный процесс — превращение строки JSON обратно в объект JavaScript.",
    "JSON-Serialization-W3Schools": "Сериализация JSON в W3Schools",
    "JSON-Syntax-004": "Каков основной синтаксис JSON?",
    "JSON-Syntax-Example-f005": "Объект JSON состоит из пар ключ-значение, заключенных в фигурные скобки {0}. Каждый ключ должен представлять собой строку, заключенную в двойные кавычки, за которой следует двоеточие, а затем его значение.",
    "JSON-Syntax-Reference": "Веб-документы MDN в формате JSON",
    "JSON-Value-Types-006": "Значениями могут быть строки, числа, логические значения, массивы (заключенные в квадратные скобки []), другие объекты или значение NULL.",
    "JSON-vs-XML-010": "Чем JSON отличается от XML?",
    "JSON-vs-XML-Article": "Сравнение JSON и XML",
    "JYqxz2": "Добро пожаловать в LafTools, это инсайдерская версия.",
    "JdqiUE8": "Эта операция декодирует данные из строки ASCII (с выбранным вами алфавитом и предустановленными настройками) обратно в необработанную форму.",
    "JdqidUE8": "Эта операция декодирует данные из строки ASCII (с выбранным вами алфавитом и предустановленными настройками) обратно в необработанную форму.",
    "JiUE8": "Эта операция декодирует данные из строки ASCII {0} обратно в необработанный формат.",
    "K1qJZI": "Добро пожаловать в LafTools, Ваше Превосходительство.",
    "KYh1N": "Все заметки",
    "KcqrRr": "Ссылка",
    "KcrRr": "Получение данных о реализации кода",
    "KmEUF": "Предоставьте краткий обзор текущих системных инструментов.",
    "Kw4OJr": "Терминал",
    "Kyd9H": "Исходный код на GitHub",
    "L-p-Y": "Скопируйте содержимое текущей команды оболочки в буфер обмена.",
    "L42mxa": "Пожалуйста, введите исходный текст в это поле.",
    "L49kCq": "Пожалуйста, укажите и подтвердите пароль блокировки в этой форме, чтобы защитить ваш LafTools.",
    "L71q_N": "Указанный вами пароль пуст. Проверьте и повторите попытку.",
    "L9bQku": "Декодировать {0}",
    "L9qbQku": "Декодировать {0}",
    "LFdvM": "Не вошел",
    "LM715": "Получение конфигурации i18n из API локального сервера",
    "LNvUuKmHR": "В приложении отсутствуют важные зависимости или библиотеки.",
    "LSohY6eZW": "Шестнадцатеричная строка — это строка шестнадцатеричных байтов, разделенных разделителем, который может быть пробелом, запятой, точкой с запятой или двоеточием.",
    "LU9Jj": "Base85 (также называемый Ascii85) — это обозначение для кодирования произвольных байтовых данных. Обычно это более эффективно, чем Base64. Эта операция декодирует данные из строки ASCII (с выбранным вами алфавитом и предустановленными настройками). Base85 обычно используется в форматах файлов Adobe PostScript и PDF.",
    "LWaeFqd": "Переключитесь на предпочитаемый язык",
    "Le71_N-": "Предоставленный вами пароль не совпадает с подтвержденным, проверьте и повторите попытку.",
    "LnJ4H": "Обратите внимание, что локальная учетная запись совершенно не совпадает с учетной записью зарегистрированного пользователя на нашем веб-сайте: первая определяется только на вашем компьютере, а вторая может использоваться для синхронизации с облаком.",
    "LqWaFd": "Настройки системы",
    "LxaEFHbfa": "Минимизирует код SQL, уменьшает размер пакета вашего кода SQL.",
    "M3qytc": "Закодировать {0}",
    "M3ytc": "Закодировать {0}",
    "M4ywN1": "Калькулятор, календарь, часы, погода и многое другое.",
    "M7jct": "Войдите в полноэкранный режим",
    "MD2-Advantages-011": "Каковы преимущества использования MD2?",
    "MD2-AlgorithmDetails-010": "Подробности алгоритма MD2",
    "MD2-Applications-018": "Какие приложения использовали или до сих пор используют MD2?",
    "MD2-Breakdown-016": "Со временем в MD2 были обнаружены криптографические уязвимости, и теперь для всех приложений, требующих безопасного хеширования, рекомендуются более сильные альтернативы, такие как SHA-256 и SHA-3.",
    "MD2-CollisionSecurity-015": "MD2 считается слабым против современных криптографических атак. Размер его хеша (128 бит) невелик по сегодняшним стандартам, что делает его уязвимым для атак на основе коллизий.",
    "MD2-Def-002": "MD2 (алгоритм дайджеста сообщений 2) — это криптографическая хеш-функция, разработанная Рональдом Ривестом в 1989 году. Она создает 128-битное хеш-значение для любого заданного входного сообщения.",
    "MD2-DigitalSignature-Risks-021": "Риски использования MD2 для цифровых подписей",
    "MD2-Disadvantages-014": "Каковы недостатки и проблемы безопасности MD2?",
    "MD2-FAQ-001": "Что такое МД2?",
    "MD2-HistoricalUse-020": "Исторически MD2 находил применение при проверке целостности файлов и обновлении программного обеспечения, хотя эти приложения в значительной степени перешли на более безопасные хэш-функции, такие как SHA-256 и SHA-512.)",
    "MD2-History-004": "Как был разработан MD2 и какова его история?",
    "MD2-Implementation-013": "Он широко реализован и стандартизирован на различных платформах и языках, а это означает, что интеграция MD2 в существующие системы может быть относительно простой.",
    "MD2-InsecurityExamples-017": "Примеры нарушения безопасности MD2",
    "MD2-Operation-007": "Как работает операция MD2?",
    "MD2-Origin-005": "MD2 изначально был создан как улучшение по сравнению с MD1, устраняющее некоторые недостатки, обнаруженные в более раннем алгоритме. В то время он приобрел популярность благодаря своей относительной простоте и скорости.",
    "MD2-PKI-019": "MD2 когда-то использовался в инфраструктуре открытых ключей (PKI) для цифровых подписей, но с тех пор устарел из-за его уязвимости к атакам. Сертификаты, подписанные с помощью MD2, больше не пользуются доверием большинства систем.",
    "MD2-Process-008": "MD2 работает путем заполнения входного сообщения кратным 16 байтам, а затем обрабатывает его с помощью серии операций «исключающее ИЛИ», ротации битов и сложений. Конечным результатом является 128-битное хеш-значение.",
    "MD2-Purpose-003": "Цель MD2 — обеспечить целостность данных путем создания уникального цифрового отпечатка пальца, который можно использовать для проверки оригинальности и подлинности данных.",
    "MD2-Rounds-009": "Алгоритм использует четырехраундовый процесс, в котором определенные операции выполняются над 128-битной переменной состояния. Каждый раунд принимает блоки дополненного сообщения и обновляет состояние до тех пор, пока не будет обработано все сообщение.",
    "MD2-Speed-012": "MD2 считался быстрым для своего времени и по-прежнему имеет приемлемую производительность в некоторых сценариях, что делает его подходящим для сред с ограниченными вычислительными ресурсами.",
    "MD2-Successors-006": "Однако на смену ему пришли более сильные алгоритмы, такие как MD5 и SHA-1, которые являются частью того же семейства хеш-функций, но предлагают улучшенные функции безопасности.",
    "MD4-Advantages-011": "Каковы преимущества использования MD4?",
    "MD4-AlgorithmDetails-010": "Подробности алгоритма MD4",
    "MD4-Applications-018": "Какие приложения использовали или до сих пор используют MD4?",
    "MD4-Breakdown-016": "Недостатки конструкции алгоритма привели к практическим атакам, допускающим легкие коллизии хэшей и даже частичные атаки прообразов, что делает MD4 непригодным для любого безопасного криптографического использования сегодня.",
    "MD4-CollisionSecurity-015": "MD4 имеет несколько криптографических недостатков, в том числе подверженность атакам с коллизиями. Это означает, что два разных входа могут выдавать один и тот же результат хэширования, что делает его небезопасным для приложений, требующих устойчивости к коллизиям или строгой целостности сообщений.",
    "MD4-Def-002": "MD4 (алгоритм дайджеста сообщений 4) — это криптографическая хеш-функция, разработанная Рональдом Ривестом в 1990 году. Она создает 128-битное хэш-значение для любого заданного входного сообщения.",
    "MD4-DigitalSignature-Risks-021": "Риски использования MD4 для цифровых подписей",
    "MD4-Disadvantages-014": "Каковы недостатки и проблемы безопасности MD4?",
    "MD4-FAQ-001": "Что такое МД4?",
    "MD4-HistoricalUse-019": "Исторически MD4 использовался для цифровых подписей, проверки целостности файлов и обновлений программного обеспечения. Однако из-за своих уязвимостей эти приложения в значительной степени перешли на более безопасные альтернативы, такие как SHA-256 и SHA-3.",
    "MD4-History-004": "Как был разработан MD4 и каково его историческое значение?",
    "MD4-Implementation-013": "Он широко реализован и стандартизирован на различных платформах и языках, обеспечивая простоту интеграции в существующие системы, хотя в современных контекстах это преимущество перевешивается проблемами безопасности.",
    "MD4-InsecurityExamples-017": "Примеры нарушения безопасности MD4",
    "MD4-LegacySystems-020": "MD4 может все еще существовать в устаревших системах, но его использование не рекомендуется во всех контекстах, где безопасность является проблемой. Современные стандарты больше не рекомендуют MD4 для каких-либо криптографических целей.",
    "MD4-Operation-007": "Как работает операция MD4?",
    "MD4-Origin-005": "MD4 был развитием MD2 и MD3, предназначенным для обеспечения более высокой производительности при сохранении свойств безопасности. Однако стало очевидно, что MD4 имеет несколько слабых мест в безопасности.",
    "MD4-Process-008": "MD4 обрабатывает входное сообщение, дополняя его до кратного 512 битам и разделяя на блоки по 16 слов. Затем алгоритм работает с этими блоками, используя четыре раунда обработки, включающие побитовые операции, модульные сложения и нелинейные функции.",
    "MD4-Purpose-003": "Цель MD4 — обеспечить целостность данных путем создания цифрового отпечатка пальца фиксированного размера, который можно использовать для проверки подлинности и целостности исходных данных.",
    "MD4-Rounds-009": "После обработки всех блоков полученное внутреннее состояние преобразуется в окончательное 128-битное значение хеш-функции.",
    "MD4-Speed-012": "Изначально MD4 разрабатывался как более быстрый, чем его предшественники, что сделало его популярным для приложений, требующих быстрого хеширования на момент его появления.",
    "MD4-Successors-006": "Несмотря на свои недостатки, MD4 заложил основу для последующих хэш-функций, таких как MD5 и SHA-1, которые улучшили его конструкцию, но также со временем унаследовали некоторые его уязвимости.",
    "MD5-Advantages-012": "Каковы преимущества использования MD5?",
    "MD5-AlgorithmDetails-011": "Подробности алгоритма MD5",
    "MD5-Alternatives-019": "Каковы альтернативы MD5 для безопасного хеширования?",
    "MD5-Applications-024": "Какие еще приложения используют или использовали MD5?",
    "MD5-Breakdown-017": "Со временем в MD5 было обнаружено несколько криптографических уязвимостей, и исследователи продемонстрировали практические примеры создания коллизий, еще больше ставящих под угрозу его целостность и безопасность.",
    "MD5-Collision-016": "MD5 уязвим для атак коллизий, а это означает, что два разных входа могут выдавать один и тот же результат хеширования. Это делает его небезопасным для таких приложений, как цифровые подписи или хранилище паролей.",
    "MD5-CollisionExample-007": "Пример коллизии MD5",
    "MD5-DataIntegrity-026": "Он также широко использовался для проверки целостности данных во время передачи и хранения, например, при использовании rsync для синхронизации файлов или контрольной суммы больших наборов данных.",
    "MD5-Def-002": "MD5 (алгоритм дайджеста сообщения 5) — это широко используемая криптографическая хэш-функция, которая принимает входное сообщение и создает 128-битное хэш-значение фиксированного размера.",
    "MD5-DigitalSignature-Risks-027": "Риски использования MD5 для цифровых подписей",
    "MD5-Disadvantages-015": "Каковы недостатки и проблемы безопасности MD5?",
    "MD5-FAQ-001": "Что такое МД5?",
    "MD5-FileChecksum-005": "MD5 часто используется для проверки целостности файлов при загрузке программного обеспечения или больших файлов. Он генерирует контрольную сумму, которую можно сравнить с суммой, предоставленной источником, чтобы убедиться, что загруженный файл не был подделан.",
    "MD5-Future-028": "Актуален ли MD5 сегодня?",
    "MD5-InsecurityExamples-018": "Примеры нарушения безопасности MD5",
    "MD5-Operation-008": "Как работает операция MD5?",
    "MD5-PKI-025": "MD5 использовался в инфраструктуре открытых ключей (PKI) для создания цифровых подписей, хотя его использование в значительной степени устарело из соображений безопасности. Сертификатам, подписанным с помощью MD5, больше не доверяют большинство современных систем.",
    "MD5-PasswordHashing-006": "Исторически он также использовался для хеширования паролей, но теперь считается небезопасным из-за его уязвимости к коллизиям и простоты взлома. Современные системы перешли к более сильным альтернативам, таким как bcrypt или Argon2.",
    "MD5-Process-009": "MD5 разбивает входное сообщение на фрагменты и пропускает каждый фрагмент через несколько раундов обработки с использованием логических функций, модульной арифметики и побитовых операций. Результат объединяется для получения окончательного 128-битного хеш-значения.",
    "MD5-Purpose-003": "Его цель — обеспечить целостность данных путем создания уникального цифрового отпечатка для любых данных. Если хотя бы один бит в исходных данных изменится, хэш MD5 будет совершенно другим.",
    "MD5-Relevance-029": "MD5 больше не считается безопасным для криптографических целей, особенно для новых приложений, которым требуется устойчивость к коллизиям или надежная целостность сообщений. Однако его все еще можно встретить в устаревших системах или некриптографических приложениях, где скорость является приоритетом над безопасностью.",
    "MD5-Rounds-010": "Алгоритм состоит из четырех основных этапов, выполняемых с 128-битным внутренним состоянием, которое инициализируется константами. Всего существует 64 раунда обработки, каждый из которых преобразует внутреннее состояние на основе блоков входных сообщений.",
    "MD5-Speed-013": "MD5 относительно быстр, что сделало его популярным для приложений, где важно быстрое хеширование.",
    "MD5-Standardization-014": "Он широко стандартизирован и реализован на различных языках программирования и платформах, что упрощает интеграцию в существующие системы и инструменты.",
    "MD5-Summary-031": "Подводя итог, какие ключевые моменты мне следует помнить о MD5?",
    "MD5-Summary-Point1-032": "MD5 — это быстрая, но небезопасная криптографическая хэш-функция, подверженная коллизионным атакам.",
    "MD5-Summary-Point2-033": "Его основное использование заключалось в обеспечении целостности данных и некоторых криптографических операциях, но в значительной степени оно было заменено более сильными альтернативами, такими как SHA-256 и BLAKE2.",
    "MD5-Summary-Point3-034": "Хотя вы можете столкнуться с MD5 в устаревших системах или в сценариях, не чувствительных к безопасности, крайне важно избегать его использования в любых новых проектах, требующих криптографической безопасности.",
    "MD5-Transition-030": "Поскольку новые, более безопасные алгоритмы, такие как SHA-256 и BLAKE2, становятся широко доступными и понятными, рекомендуется отказаться от MD5 во всех контекстах, где безопасность является проблемой.",
    "MD5-Usage-004": "Как MD5 используется на практике?",
    "MD6-AlgorithmDetails-010": "Подробности алгоритма MD6",
    "MD6-ComparisonSHA3-020": "Чем MD6 отличается от SHA-3 (Keccak)?",
    "MD6-Def-002": "MD6 (алгоритм дайджеста сообщений 6) — это криптографическая хэш-функция, разработанная Рональдом Ривестом в 2008 году. Это развитие семейства MD, предлагающее переменные выходные размеры в диапазоне от 128 до 512 бит.",
    "MD6-FAQ-001": "Что такое МД6?",
    "MD6-FutureDevelopments-028": "Планируются ли какие-либо будущие разработки или улучшения для MD6?",
    "MD6-FutureUnknown-029": "На данный момент нет общедоступной информации о продолжающейся разработке или планах по улучшению алгоритма MD6. Криптографические исследования продолжают развиваться, и могут появиться новые алгоритмы для устранения возникающих угроз или требований.",
    "MD6-History-004": "Как разрабатывался MD6 и что привело к его созданию?",
    "MD6-Operation-007": "Как работает операция MD6?",
    "MD6-Origin-005": "MD6 был создан как ответ на уязвимости, обнаруженные в широко используемых в то время MD5 и SHA-1. Его целью было предоставить более безопасную альтернативу с повышенной гибкостью в отношении размера вывода.",
    "MD6-PKI-Alternatives-027": "Вместо этого для приложений PKI и цифровых подписей обычно используются такие стандарты, как RSA/SHA-256 или ECDSA с вариантами SHA-2 или SHA-3. Они прошли тщательный анализ и завоевали доверие криптографического сообщества.",
    "MD6-PKI-Considerations-026": "Хотя MD6 был предназначен для обеспечения более высокой безопасности, чем более ранние хэш-функции, такие как MD5, он не получил широкого распространения для PKI или схем цифровой подписи из-за его относительной новизны и отсутствия широкого признания криптографического сообщества.",
    "MD6-Process-008": "MD6 обрабатывает входные сообщения с помощью ряда функций сжатия, которые применяются в древовидной структуре. Алгоритм может работать параллельно, что повышает его производительность при обработке больших входных данных.",
    "MD6-Purpose-003": "Целью MD6 является обеспечение надежных функций безопасности и улучшенной производительности по сравнению со своими предшественниками, что делает его пригодным для различных приложений, требующих устойчивого к коллизиям хеширования и проверки целостности сообщений.",
    "MD6-Rounds-009": "Каждый узел в дереве MD6 подвергается нескольким раундам операций смешивания, включая модульное сложение, побитовое исключающее ИЛИ и нелинейные перестановки. Конечное значение корневого узла представляет собой хеш-дайджест входного сообщения.",
    "MD6-SecurityUpgrade-006": "Конструкция MD6 построена на концепции древовидного хеширования, что позволяет ему обеспечивать лучшую защиту от атак на прообразы и коллизии, чем предыдущие алгоритмы MD, а также обеспечивает более высокую пропускную способность для больших наборов данных.",
    "MD6-StayingCurrent-030": "Очень важно быть в курсе последних результатов исследований и рекомендаций экспертов по криптографии при выборе хеш-функции для любого приложения, особенно с учетом того, что ландшафт криптографической безопасности со временем меняется.",
    "MD6-UseInPKI-025": "Можно ли использовать MD6 для инфраструктуры открытых ключей (PKI) или цифровых подписей?",
    "MD6-vs-SHA3-Adoption-023": "SHA-3 был принят в качестве официального стандарта NIST и получил широкое распространение благодаря своей надежной безопасности и производительности. MD6, несмотря на свою теоретическую безопасность, не получил такого же уровня принятия или стандартизации.",
    "MD6-vs-SHA3-DiffDesign-021": "MD6 и SHA-3 разработаны с учетом требований безопасности, но в них используются разные методы хеширования. MD6 использует древовидную структуру для улучшения параллелизма, а SHA-3 основан на губчатой ​​конструкции.",
    "MD6-vs-SHA3-Flexibility-022": "MD6 предлагает переменную длину выходных данных, что может быть полезно для приложений, требующих нестандартных размеров хеша. SHA-3 также поддерживает выходные данные переменной длины, хотя его наиболее распространенный вариант, SHAKE, обеспечивает еще большую гибкость при выводе произвольной длины.",
    "MDN-DOM-API": "Веб-документы MDN — работа с документами",
    "MDN-Event-Loop": "Веб-документы MDN — цикл событий",
    "MDN-JS-Guide": "Веб-документы MDN — Руководство по JavaScript",
    "MDN-JS-Types": "Веб-документы MDN — типы данных и структуры данных",
    "MDN-JSON-in-JavaScript": "Веб-документы MDN — Работа с JSON",
    "MDN-Minification": "Веб-документы MDN — Минификация",
    "MDN-XML-Syntax": "Веб-документы MDN — синтаксис XML",
    "MN2lT": "Длина пароля не может быть менее 6.",
    "Ma5mv": "Переключить видимость вкладок панели инструментов",
    "Minify-Basics-001": "В чем смысл минимизации кода или файлов?",
    "Minify-CLI-Usage-009": "Большинство этих инструментов имеют как интерфейсы командной строки (CLI), так и API, которые позволяют разработчикам автоматизировать процесс минимизации во время разработки и развертывания.",
    "Minify-Def-002": "Минификация — это процесс уменьшения размера кода (HTML, CSS, JavaScript и т. д.) путем удаления ненужных символов, таких как пробелы, комментарии и разрывы строк, без ущерба для его функциональности.",
    "Minify-Example-007k": "Например, {0} может стать {1} после минификации.",
    "Minify-How-Works-004": "Как работает минимизация кода?",
    "Minify-Process-005": "Минификаторы используют алгоритмы для анализа структуры исходного кода, удаления лишних элементов и сокращения имен переменных, где это возможно. Это приводит к уменьшению размера файла при сохранении исходного поведения кода.",
    "Minify-Purpose-003": "Основная цель минификации — повысить производительность веб-сайта и сократить время загрузки страницы за счет уменьшения объема данных, которые необходимо передавать между сервером и клиентом.",
    "Minify-Tools-007": "Какие популярные инструменты для минимизации кода существуют?",
    "Minify-Tools-List-008": "Популярные инструменты для минимизации кода включают UglifyJS для JavaScript, Terser, который является развитием UglifyJS, HTMLMinifier для HTML и CSSNano для CSS. Эти инструменты часто можно интегрировать в процессы сборки с помощью средств запуска задач, таких как Gulp или Webpack.",
    "Mq9pdpT": "Перечислите все соответствующие ресурсы для выбранного вами функционального меню.",
    "Mq9ppT": "Быстрый просмотр статуса ваших услуг",
    "Mqq9pdpT": "Помогите вам начать работу с LafTools.",
    "MrgmU": "Подтверждать",
    "MySQL-Performance-Tuning": "Советы по настройке производительности MySQL",
    "NMLOn": "Копировать путь к файлу",
    "NMLOn1": "Открытая рабочая область",
    "NNfJo": "Загрузить данные из файла",
    "Nqc0LqwX": "Если вы считаете, что в этом процессе есть уязвимость, пожалуйста, свяжитесь с нами по электронной почте или GitHub в любое время, мы хотели бы срочно улучшить его.",
    "NrQc8OJfZ": "Сжимает код нотации объектов JavaScript (JSON).",
    "NvOqE3B9Vxd": "Ниже приведены возможные решения, к которым вы могли бы обратиться.",
    "O94Yx": "на",
    "OO0qPN": "Пример загружен",
    "OQWm4": "Сообщить об ошибке",
    "OSHOI": "Приветственная страница",
    "OSqZQM": "Локальный пароль",
    "OWASP-JSON-Injection": "OWASP — внедрение JSON",
    "OWASP-SQL-Injection": "Руководство по внедрению SQL-кода OWASP",
    "OeO0PeN": "Хорошо, пример отображается в редакторе ввода.",
    "OeOQY": "ДЕЛАТЬ",
    "Ol1ZcWomT": "{0} Украсить",
    "OpPFe": "Если вам нравится LafTools, поделитесь им с друзьями и поставьте нам звезду, спасибо!",
    "Opcty": "Файлы",
    "OqqGx2qg": "Идет загрузка статических ресурсов, подождите...",
    "OrCt5": "Перенаправление на рабочий стол...",
    "Ot6EP": "Польские инструменты",
    "PM_N5": "Сеанс – {0}",
    "PUxuU": "Получение данных для языковых пакетов...",
    "PpCHA": "Ключ вопроса(?)",
    "QLKzF": "Он оснащен функциями, которые удовлетворяют потребности как новичков, так и опытных разработчиков, что делает его обязательным инструментом в арсенале любого программиста.",
    "QM2Ob": "Последние инструменты",
    "QM2Oq": "Недавние заметки",
    "QRAdA": "с английского на китайский",
    "QZK58Gemi": "Сжимает код языка структурированных запросов (SQL).",
    "QhdpH": "Общественная версия",
    "QkJ-TOduip6z_": "LafTools IDE",
    "QzlA3": "Произошла ошибка",
    "R12bq": "Список вкладок, которые не отображаются",
    "RNBze0": "Инструменты",
    "RNeBze0": "Открытые вкладки",
    "RNewBze0": "Конфигурация инструмента",
    "RO4ZP": "Произошла ошибка",
    "RPVRl": "Похоже, это расширение несовместимо с текущей версией LafTools. Пожалуйста, рассмотрите возможность установки последней версии для поддержки этого расширения или свяжитесь с нами, подняв проблему на GitHub.",
    "R_S7_CLAo": "Пример. Чтобы закодировать «TEST12345» в Base32, вы можете использовать такие библиотеки, как base32-encode в Node.js, или встроенные функции в других языках, например base64.b32encode Python.",
    "RhqzcdD": "Настройки системы",
    "RjCO3": "Список рабочих пространств",
    "S4MMV": "Упс! Мы обнаружили некоторые проблемы при загрузке файла.",
    "SAnnQ": "Загрузка файла {0}",
    "SBsDz": "Настройка вашей учетной записи администратора.",
    "SDLC-Wikipedia": "Жизненный цикл разработки программного обеспечения — Википедия",
    "SETxuObyB": "Поднимите проблему на GitHub для этой ошибки, чтобы позволить команде LafTools изучить ее дальше.",
    "SGs7B": "Быстрая настройка LafTools",
    "SHA-256-020": "SHA-256 (алгоритм безопасного хеширования) — широко используемая альтернатива, обеспечивающая более высокий уровень безопасности, чем MD5. Он генерирует большее 256-битное хэш-значение и является частью семейства SHA-2.",
    "SHA-2_Info-022": "Информация о SHA-2",
    "SHA3-NISTStandard-024": "Стандартизация SHA-3",
    "SMqD13": "Введите, чтобы отфильтровать",
    "SPem9": "Это поле еще не готово.",
    "SQAw7": "Исходный язык",
    "SQL-Basics-001": "Что такое SQL?",
    "SQL-Beautifier-Example": "Онлайн-форматировщик SQL",
    "SQL-Beautify-006": "Что такое улучшение SQL?",
    "SQL-Beautify-Def-007": "Украшение SQL — это процесс форматирования кода SQL для улучшения читаемости путем применения согласованных соглашений об отступах, интервалах и регистре.",
    "SQL-Beautify-Purpose-008": "Подобно общим средствам улучшения кода, он помогает разработчикам легче понимать сложные запросы и поддерживать согласованность в своих SQL-скриптах или проектах.",
    "SQL-Commands-005": "SQL включает в себя несколько типов команд: DDL (язык определения данных — CREATE, ALTER, DROP), DML (язык манипулирования данными — SELECT, INSERT, UPDATE, DELETE) и DCL (язык управления данными — GRANT, REVOKE).",
    "SQL-Components-004": "Каковы основные компоненты SQL?",
    "SQL-Components-Wikipedia": "Компоненты SQL в Википедии",
    "SQL-Def-002": "SQL (язык структурированных запросов) — это стандартный язык программирования для управления реляционными базами данных и выполнения запросов.",
    "SQL-Indexing-016": "Что такое индексы в SQL и почему они важны?",
    "SQL-Indexing-Benefit-018": "Создание индекса по часто используемым столбцам для условий предложения WHERE значительно ускоряет запросы SELECT, но может замедлить операции INSERT, UPDATE и DELETE из-за необходимости поддерживать структуру индекса.",
    "SQL-Indexing-Explanation-017": "Индексы — это структуры данных (например, B-деревья), которые повышают скорость операций поиска данных в таблице, позволяя ядру базы данных быстро находить строки на основе значений определенных столбцов.",
    "SQL-Indexing-MDN": "Веб-документы MDN по индексам",
    "SQL-Injection-019": "Что такое SQL-инъекция и как ее предотвратить?",
    "SQL-Injection-Def-020": "SQL-инъекция — это уязвимость безопасности, позволяющая злоумышленнику вставить вредоносный код SQL в поля ввода для манипулирования данными из базы данных или их извлечения.",
    "SQL-Injection-Prevention-021": "Методы предотвращения включают использование параметризованных запросов, подготовленных операторов или библиотек ORM, которые автоматически исключают ввод пользователя, а также ограничение разрешений базы данных и применение принципов наименьших привилегий.",
    "SQL-Joins-011": "Что такое JOIN в SQL?",
    "SQL-Joins-Explanation-012": "JOIN используются для объединения строк из двух или более таблиц на основе связанного между ними столбца. Например, INNER JOIN, LEFT JOIN, RIGHT JOIN и FULL JOIN.",
    "SQL-Joins-Tutorial": "Учебное пособие по SQL-соединениям",
    "SQL-Perf-Tuning-Methods-024": "Другие методы включают секционирование больших таблиц, использование соответствующих типов данных и кэширование результатов, когда это возможно.",
    "SQL-Perf-Tuning-Overview-023": "Оптимизация производительности SQL-запросов включает в себя анализ планов выполнения, соответствующую индексацию, минимизацию ненужных соединений и подзапросов и написание эффективных предложений WHERE.",
    "SQL-Performance-Tuning-022": "Как оптимизировать производительность SQL-запросов?",
    "SQL-Purpose-003": "Он используется для создания, чтения, обновления, удаления и запроса данных в таблицах, а также для управления структурой базы данных и разрешениями.",
    "SQL-Select-009": "Как написать базовый оператор SELECT?",
    "SQL-Select-Example-0210": "Простой оператор SELECT извлекает данные из таблицы. Например: {0}', 'ВЫБРАТЬ столбец1, столбец2 FROM my_table;",
    "SQL-Transactions-013": "Что такое транзакции в SQL?",
    "SQL-Transactions-Def-014": "Транзакция — это логическая единица работы, содержащая один или несколько операторов SQL. Он гарантирует, что все операции внутри него будут завершены успешно (атомарность), изолированы от других транзакций и долговечны даже в случае сбоя системы.",
    "SQL-Transactions-Example-015": "Чтобы начать транзакцию, используйте команду START TRANSACTION; зафиксируйте изменения с помощью COMMIT или откатитесь к предыдущему состоянию с помощью ROLLBACK.",
    "SQL-Transactions-W3Schools": "SQL-транзакции в W3Schools",
    "SYSq1": "Пример",
    "SZgXb": "Настройка локального пароля",
    "SdGcT": "Другая часть",
    "Sm9tq": "Пожалуйста, укажите пароль учетной записи здесь",
    "Sm9tqq": "Пожалуйста, укажите пароль, чтобы разблокировать LafTools.",
    "Spcfdee": "Светлый или темный режим",
    "TBPqy7": "Язык",
    "TD7DA": "Языки",
    "TIOBE-Index": "Индекс TIOBE - Компания по обеспечению качества программного обеспечения",
    "TNoePE": "Облако LafTools",
    "Terser": "Терсер — GitHub",
    "Ttrqqet": "Пишите и сохраняйте свои мысли здесь!",
    "TwFcr": "Язык перевода",
    "TyqvWY3": "Локальный файл",
    "U2ZNl": "Узнайте больше в Википедии",
    "U4qqq9": "Удалить эту вкладку из списка",
    "U5Eiy7ZRZ": "Отправьте электронное письмо команде LafTools({0}), чтобы сообщить об этой ошибке, если она связана с конфиденциальной информацией.",
    "U7zP2": "Пожалуйста, укажите имя пользователя учетной записи здесь",
    "UF_Dp": "Произошла ошибка: {0}, время отклонения: {1}.",
    "UVvJp-vtF": "{0} Свернуть",
    "UZ2Ig": "Новая локальная учетная запись",
    "UglifyJS": "UglifyJS — GitHub",
    "V6U_f": "Условия использования",
    "V6XEO": "Введите имя пользователя или адрес электронной почты",
    "VAZq8r": "Он позволяет разработчикам выполнять различные команды, такие как запуск сценариев, установка пакетов и навигация по файловой системе, и все это из редактора.",
    "VEfeqZG": "Примечания",
    "VI6VT": "История",
    "VOsZc": "Сообщить о проблеме",
    "VSZ": "Нажмите, чтобы повторить запуск",
    "VZtqg6": "Создать новую форму сценария",
    "Vaf2y": "Название вкладки не может быть пустым.",
    "VeY9K": "Условия эксплуатации",
    "Vvt09V2Qo": "Общий код",
    "W3Schools-XML-Validation": "W3Schools — проверка XML",
    "WFUWzv_px": "Анализирует и печатает действительный код JavaScript. Также работает с нотацией объектов JavaScript (JSON).",
    "WPrTW": "Официальный веб-сайт",
    "WXo6D": "Обновленный",
    "WYCVL": "Быстрая установка",
    "X6Fq4j": "После многих лет самоотверженной разработки и совершенствования мы уверены, что LafTools может значительно улучшить ваш опыт программирования, сделав ваш рабочий процесс более удобным и эффективным.",
    "XLWoR": "Выберите предпочитаемый вариант и продолжайте",
    "XML-Advantage-Readable-018": "Его удобочитаемый характер позволяет легко проверять и отлаживать, а возможность определять собственные структуры делает его гибким для различных вариантов использования.",
    "XML-Advantage-Standardized-017": "XML является широко распространенным стандартом, что делает его совместимым с различными платформами и системами, обеспечивая совместимость и обмен данными.",
    "XML-Advantages-012": "XML обеспечивает большую гибкость структуры и поддерживает пространства имен, что может быть полезно для сложных структур документов и обеспечения совместимости между системами.",
    "XML-Advantages-016": "Каковы преимущества использования XML?",
    "XML-Attributes-006": "Элементы могут иметь атрибуты, которые предоставляют дополнительную информацию об элементе в открывающем теге, например {0}.",
    "XML-Basics-001": "Что такое XML?",
    "XML-Def-002": "XML (расширяемый язык разметки) — это язык разметки, который определяет набор правил для кодирования документов в формате, который является одновременно читаемым человеком и машиной.",
    "XML-Disadvantage-Size-020": "XML может быть относительно многословным, что приводит к увеличению размера файлов по сравнению с такими альтернативами, как JSON, что влияет на скорость передачи и требования к объему хранилища.",
    "XML-Disadvantages-019": "Каковы некоторые недостатки использования XML?",
    "XML-JSON-Diff-Structure-014": "XML использует подробные иерархические теги для структуры, тогда как JSON полагается на пары ключ-значение и массивы. Пример: XML {0} и JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML имеет более строгий синтаксис с закрывающими тегами и атрибутами, тогда как синтаксис JSON проще и ближе к нотации объектов JavaScript. JSON обычно считается более простым для анализа и передачи через Интернет.",
    "XML-JSON-Difference-013": "В чем разница между XML и JSON?",
    "XML-Nesting-007": "Как работает вложение в XML?",
    "XML-Nesting-Example-009": "Например, `<book><title>Название моей книги</title><author>Джон Доу</author></book>` представляет книгу с ее названием и автором в виде вложенных элементов.",
    "XML-Nesting-Explanation-008": "В XML элементы могут быть вложены друг в друга для представления иерархических отношений. Дочерние элементы размещаются между открывающим и закрывающим тегами родительского элемента.",
    "XML-Processing-Speed-021": "Анализ и генерация XML могут выполняться медленнее из-за его строгого синтаксиса и необходимости проверки, особенно при работе со сложными документами.",
    "XML-Purpose-003": "Он предназначен для переноса данных, а не для отображения данных, таких как HTML, что позволяет использовать его в качестве общего формата для обмена структурированной информацией между различными платформами и приложениями.",
    "XML-Syntax-004": "Каков основной синтаксис XML?",
    "XML-Syntax-Example-005": "Простой XML-документ состоит из элементов древовидной структуры. Каждый элемент начинается с тега в угловых скобках (<element>) и заканчивается закрывающим тегом (</element>).",
    "XML-Validation-010": "Что такое проверка XML и как она работает?",
    "XML-Validation-Def-011": "Проверка XML гарантирует, что документ XML соответствует определенному набору правил, определенных в определении типа документа (DTD) или схеме XML (XSD).",
    "XML-Validation-Process-012": "Валидаторы проверяют наличие всех необходимых элементов и атрибутов, проверяют типы данных и применяют все ограничения, указанные в схеме, перед обработкой документа.",
    "XQxJB": "Мои рабочие места",
    "X_HGx": "LafTools — это универсальный набор инструментов, предназначенный для удовлетворения различных потребностей. Это полностью открытый исходный код, обеспечивающий прозрачность и безопасность. Несмотря на легкость среды выполнения, он предлагает полную поддержку платформ, включая ARMv8, а также встроенную поддержку искусственного интеллекта, аналогичную ChatGPT. LafTools тесно интегрирован с продуктивным пользовательским интерфейсом и постоянно обновляется новыми инструментами. Его можно использовать через Интернет и с Docker, а также он предоставляет дополнительные ресурсы, такие как заметки и руководства.",
    "XeXF77": "Настройки",
    "Y5GAC": "Ваш логин",
    "Y9mQ2": "Пожалуйста, укажите имя пользователя учетной записи здесь",
    "YAAU3q": "Локальный пароль",
    "YHCjT": "LafTools поддерживает глобальную светлую и темную тему, это особенно полезно для программистов в ночную смену.",
    "YNwKz": "Неподдерживаемый язык: {0}, по умолчанию будет использоваться английский.",
    "YOYTp": "Быстрая установка",
    "YPPPL": "Переключить видимость вкладок панелей инструментов",
    "YQN9u": "Произошла ошибка при загрузке {0}, проверьте подробности ниже.",
    "Y__Zb1_4Q": "Минимизирует код каскадных таблиц стилей (CSS), удаляя все ненужные символы.",
    "Y_k0z": "Забыли пароль?",
    "Ye3TXses": "Чтобы настроить, будет ли преобразование выполняться автоматически при изменении входного текста.",
    "Ylq2X": "Исправление ошибки",
    "YquQqTXq": "Автозапуск?",
    "YrTdq": "Все",
    "YrVq683": "Почта",
    "YrVqdd683": "Руководства",
    "Z2QTU": "О",
    "Z3rhY": "Сообщение",
    "Z7ALO": "Переключился на выбранную рабочую область",
    "Z7OTt": "Выбранный вами файл слишком велик. Выберите файл размером менее 30 МБ.",
    "ZAGva": "Вы уверены, что удалите это рабочее пространство?",
    "ZAKaFq": "Моя облачная учетная запись",
    "ZXRGC": "См. ошибку: {0}",
    "ZbD3F": "{0}, созданный командой LafTools.",
    "Zk7JI": "Это еще не поддерживается",
    "ZrbduC": "Закрыть все вкладки",
    "ZrbuC": "Закрыть вкладку",
    "_-JigU2Fg": "Непредвиденный формат ввода или данных вызвал исключение.",
    "_5OqeG": "Снимите отметку",
    "_LFF3": "Если у вас возникнут какие-либо проблемы или у вас возникнут какие-либо предложения при использовании LafTools, пожалуйста, не стесняйтесь обращаться к нам по электронной почте или GitHub в любое время, мы готовы улучшить его.",
    "_trqL": "Получение данных о системных ресурсах...",
    "_z3lR": "Обновить код",
    "a3yqoz": "персидский",
    "a3z-3k12": "Инструменты IP-адреса",
    "a4r9t": "Может ли Base45 декодировать любую строку в кодировке Base45 независимо от ее происхождения?",
    "a4s6x": "Как работает Base32?",
    "a8b7z": "Таким образом, заполнение необходимо только в том случае, если последняя группа кодируемых битов не делится на 40 бит (поскольку 8 символов Base32 представляют 40 бит). Заполнение будет состоять из нуля до шести символов «=» в конце закодированной строки.",
    "aCkOP": "Выход",
    "aHAfR": "Получение данных для {0}...",
    "aSOpr": "Генератор моделей данных",
    "ab9c0d1e": "Основные операции включают кодирование (преобразование двоичного кода в Base64) и декодирование (преобразование Base64 обратно в двоичный формат).",
    "abc12345": "Base64 — это схема кодирования, которая представляет двоичные данные как последовательность символов ASCII.",
    "abcdef12": "Как работает Base64?",
    "about_LafTools_toolbox": "О LafTools",
    "adpgq": "Создать новое рабочее пространство",
    "ah-C4": "Новая заметка",
    "aked6": "Рекомендации",
    "aked61": "Введение",
    "asElV": "Удалять",
    "az4uS2": "Вы уверены, что хотите выйти из этой системы? Обратите внимание, что вы будете перенаправлены на страницу входа.",
    "azpNX": "Завершенный.",
    "b6sx9b": "Филиппинский",
    "b8g2k": "Сценарии использования Base32",
    "bP_6qG": "Советы, если вы забыли свой пароль",
    "bT4R6": "Новая вкладка",
    "bVlBN": "с китайского на английский",
    "bcdef01a": "Base64 работает путем разделения двоичных данных на группы по 6 бит и сопоставления каждой группы определенному символу из алфавита из 64 символов (A-Za-z0-9+/).",
    "bhojei1": "Традиционный китайский",
    "bjZyW": "Переводить",
    "bors14": "турецкий",
    "bp_-b": "Чтобы полностью управлять LafTools, вам необходимо настроить администратора в начале процесса установки. Мы подтвердили вашу идентификацию по токену параметра URL-адреса. Будьте уверены, что никто другой не сможет настроить ваше root-право, пока он или она не получит токен установки.",
    "bqqrij": "суахили",
    "bsWpBA73s": "Сжимает код JavaScript.",
    "c0eCw": "Переведите ваш текст на любой язык, который вы хотите.",
    "c0v2p": "Общие операции с Base32",
    "c1p3b": "После интеграции скопируйте предоставленный шаблон в свою программу на C++ и замените заполнитель фактическим закодированным значением перед запуском программы.",
    "c1p4b": "Каждое десятичное число затем преобразуется в уникальную последовательность из пяти символов Base85. Если в конце осталось менее четырех байтов, может быть применено заполнение.",
    "c2tpr": "Библиотека кодеков Apache Commons обеспечивает функции кодирования и декодирования Base32 на Java.",
    "c2vw9k": "Хотя Base45 не так широко реализован, как Base64 или Base32, существуют библиотеки с открытым исходным кодом для нескольких языков.",
    "c5m1b": "Другой вариант, Base58Flickr, немного отличается набором символов. Он заменяет «+» на «,» и «/» на «-», адаптируясь к потребностям URL-адреса Flickr.",
    "c5meku": "суданский",
    "c5p1b": "Заполнение не используется; длина закодированного вывода напрямую зависит от размера входных данных.",
    "c6p4n": "В предоставленном шаблоне замените заполнитель в части декодирования фактическими байтами в кодировке Base85 (с префиксом «b»), а затем выполните сценарий.",
    "c6p9b": "Если длина входных данных не делится на 8, заполнение не используется; вместо этого каждая неполная группа рассматривается независимо.",
    "c7Uoqqe": "Перед использованием LafTools укажите и подтвердите свой локальный пароль, как показано ниже.",
    "c8me6b": "Пользовательские схемы, подобные Base62, могут быть адаптированы для конкретных приложений, но обычно они придерживаются того же принципа использования большего набора символов, чем Base64 или Base32.",
    "c9j5k": "Загрузите и включите заголовок «base32.h» и его соответствующую реализацию в свой проект.",
    "c9j5v": "Установите его через Composer, добавив в свой проект «composer require christian-riesen/base32».",
    "c9q7w": "Почему был создан Base45?",
    "cMBqyyFae": "Делает отступы и предварительно настраивает код языка структурированных запросов (SQL).",
    "cNQp_": "Ресурсы",
    "cOYuMrncv": "Неизвестно Ошибка перевода",
    "cPS6q": "Все инструменты",
    "cQqwI8r": "Загрузка статуса службы терминалов",
    "cU0YAMbxU": "Показать текст на боковой панели",
    "cbaq54321": "Нет, Base64 не является методом сжатия, он меняет только представление данных, а не их размер.",
    "cdefg234": "В конце добавляются символы заполнения (=), чтобы гарантировать, что длина закодированных данных кратна 4 символам.",
    "ciZV2": "Base32 — это нотация для кодирования произвольных байтовых данных с использованием ограниченного набора символов, которые могут быть удобно использованы людьми и обработаны компьютерами. Он использует меньший набор символов, чем Base64, обычно это прописные буквы и цифры от 2 до 7.",
    "ciZV21": "Base45 — это нотация для кодирования произвольных байтовых данных с использованием ограниченного набора символов, которые могут быть удобно использованы людьми и обработаны компьютерами. Большая база счисления приводит к получению более коротких строк, чем при использовании десятичной или шестнадцатеричной системы. Base45 оптимизирован для использования с QR-кодами.",
    "ciZV2deq1": "Base58 (аналогично Base64) — это обозначение для кодирования произвольных байтовых данных. Он отличается от Base64 тем, что удаляет легко читаемые символы (например, l, I, 0 и O) для улучшения читаемости человеком. Base58 обычно используется в криптовалютах (биткойн, Ripple и т. д.).",
    "cj1pd": "Обновить операцию",
    "cjzqj9": "Боснийский",
    "cmxzpg": "малаялам",
    "coM2I": "Используйте умный редактор",
    "crD7I": "Чтобы настроить, должно ли преобразование игнорировать пустой входной текст, длина которого равна нулю.",
    "cuRCqb": "Категория не существует",
    "cxqhqa": "Мьянма (бирманский)",
    "d-l2l": "Подтверждать",
    "d-qPr": "Неизвестный макет: {0}",
    "d1x7v": "Другой пример — Git, где хешированные объекты иногда сохраняются в формате Base32, чтобы избежать проблем с окончаниями строк и ограничениями имен файлов. Кроме того, HashiCorp Vault использует Base32 для получения ключей.",
    "d2w4e": "Подобно другим системам преобразования баз, Base62 преобразует входные байты в большое целое число, а затем представляет его как комбинацию символов из своего 62-значного набора.",
    "d2w6e": "Загрузите исходный код и включите заголовочный файл base62.h в свой проект. Скомпилируйте/свяжите исходные файлы в соответствии с инструкциями проекта.",
    "d3w2e": "Base58 работает путем преобразования входных байтов в большое целое число, а затем выражает это целое число как комбинацию символов из набора из 58 символов (A-Z, a-z, 1-9).",
    "d5KZH": "Спасибо за использование LafTools!",
    "d5LAU": "Лицензия AGPLv3.",
    "d5fmq2": "итальянский",
    "d5hit": "Сеанс – {0}",
    "d6g0w": "Этот фрагмент можно выполнить в любой среде Python, включая сценарии, интерактивные сеансы или в более крупном приложении.",
    "d6y9k": "Если для заполнения последней группы недостаточно байтов, заполнение не используется; вместо этого оставшиеся биты обрабатываются и сопоставляются с соответствующими символами.",
    "d7w2e": "Base85 работает путем разделения входных данных на группы по четыре байта и преобразования каждой группы в десятичное число от 0 до 2^32-1.",
    "d8w1b": "Никакой дополнительной установки не требуется, поскольку она является частью стандартной библиотеки. Убедитесь, что ваша версия Python достаточно свежа, чтобы включать эту функцию.",
    "d9w7m": "Более того, поскольку он использует только прописные буквы, он не может использовать все возможные комбинации чувствительности к регистру в качестве дополнительной меры безопасности, как это иногда делает Base64 со свертыванием регистра во время декодирования.",
    "dCFIC": "Код красивее",
    "dCFIwC": "Генератор кода",
    "dGKMx": "Выход",
    "dGVUB": "Сетевые инструменты",
    "dQwjNbi0y": "Узнайте больше о документации",
    "dV5Eq": "Обновить список рабочих пространств",
    "dWbBm": "C# включает класс System.Convert со встроенными методами ToBase64String и FromBase64String, которые позволяют кодировать и декодировать данные Base64. Входная строка сначала преобразуется в массив байтов с использованием кодировки UTF-8, а затем соответствующим образом кодируется и декодируется.",
    "dk122q": "Управляйте своими рабочими процессами, объединяя несколько инструментов вместе.",
    "dkarh": "Хорошо, панель инструментов открыла каталог. Если всплывающее окно не появляется, проверьте, поддерживает ли ваша платформа эту функцию или каталог находится на сервере.",
    "dkkq12": "Настройте свой инструмент на этой вкладке.",
    "dl4kr": "Забыли пароль?",
    "dpRY4": "Словарь",
    "dqTqyvWY": "Меню ящика",
    "dsdpA_eJ": "Отрегулировать размер",
    "dtjdt4": "казахский",
    "dxLQq": "Корневое разрешение",
    "dzjTo": "Пожалуйста, укажите пароль учетной записи здесь",
    "e3WgQaZlb": "Сжимает {0}",
    "e4Cd8t": "База85",
    "e5c7r": "Base32 — это схема кодирования двоичного текста в текст, которая представляет данные в строке ASCII, используя подмножество из 32 символов. Он разработан так, чтобы быть удобочитаемым и безопасным для URL-адресов.",
    "e5rycw": "киргизский",
    "e8Crq": "Пожалуйста, заполните поле имени пользователя и пароля ниже, чтобы продолжить.",
    "e8x2v": "Base45 работает путем разделения входных данных на группы по 5 байтов каждая. Затем он преобразует каждую группу в десятичное число и сопоставляет ее с соответствующим символом из набора из 45 символов.",
    "eN4fM": "В Rust вы можете использовать крейт base64 для кодирования и декодирования Base64. Добавьте «base64 = \\\"1.x\\\"» в файл Cargo.toml в разделе [зависимости], запустите «cargo build» и включите в свой код необходимые импорты для использования этих функций.",
    "eTmq": "История CodeGen ToolBox",
    "e_8pZ": "Универсальный набор инструментов для разработчиков, позволяющий повысить производительность.",
    "efg45678": "Сравнение с Base32",
    "efghi678": "Этот вариант часто используется для имен файлов, URL-адресов или ситуаций, когда следует избегать использования специальных символов.",
    "egkqC8t": "База58",
    "egkqCd8t": "База62",
    "eifoni": "каталанский",
    "eqkqd4W": "Укажите название нового тега",
    "etV-l": "Копирование файлов в SIT2",
    "eu5mh0": "белорусский",
    "euaI8": "Создать новую локальную учетную запись",
    "euhy9v": "эстонский",
    "f0q4w": "Одним из популярных сценариев использования является создание секретных ключей для двухфакторной аутентификации (2FA), когда такие службы, как Google Authenticator и Yubikey, используют секреты в кодировке Base32.",
    "f1t2z": "Base62 был разработан как более короткая и безопасная для URL-адресов альтернатива Base64, особенно для уникальных идентификаторов и коротких URL-адресов.",
    "f3ttw8": "маори",
    "f4t7z": "Base58 изначально был разработан для Биткойна, чтобы без двусмысленности представлять публичные адреса и закрытые ключи.",
    "f5a0s": "Кроме того, Base32 выдает более длинные выходные данные, но может быть более подходящим для конкретных приложений, таких как имена файлов, из-за отсутствия специальных символов, которые могут противоречить правилам файловой системы.",
    "f5bLC": "Документация",
    "f7t1z": "Добавьте библиотеку в свой проект Xcode вручную или через менеджер пакетов, например Swift Package Manager (SPM).",
    "f8n4m": "Его компактность позволяет более эффективно использовать пространство QR-кодов, сохраняя при этом читаемость стандартными сканерами штрих-кодов.",
    "f8wne": "Включите пакет, запустив «Install-Package BouncyCastle» в консоли диспетчера пакетов или добавив его в файл .csproj.",
    "f9t1z": "Изначально Base85 был разработан для эффективного представления двоичных данных в документах PostScript и повышения степени сжатия.",
    "f9t2z": "Добавьте зависимость в свой проект Maven, включив `<dependent> <groupId>commons-codec</groupId> <artifactId>commons-codec</artifactId> <version>...</version> </dependent>` в свой pom.xml с номером последней версии.",
    "fBP5h": "Имя пользователя",
    "fEr5j": "Создать новый сценарий",
    "fTt2N": "Perl требует наличия модуля MIME::Base64 для кодирования и декодирования Base64. Установите его, запустив «cpan install MIME::Base64», если он еще не установлен.",
    "fV_1P": "Войти",
    "fdxluz": "румынский",
    "ff02c": "Отменено",
    "fghi6789": "Он используется для передачи или хранения двоичных файлов в текстовых форматах, обеспечивая совместимость с различными системами.",
    "fgj880": "телугу",
    "fqV_1P": "Разблокируйте свои инструменты LafTools",
    "g1h5n": "Как работает Base45?",
    "g2_aX": "Скопировать зашифрованный пароль в файл",
    "g3h5s": "Как работает Base85?",
    "g4h7s": "Для C++ вы можете использовать библиотеку cpp-base62, которая обеспечивает функциональность Base62.",
    "g5SK9": "Открыть недавние",
    "g5ybh": "Добавьте зависимость в свой проект (Maven: 'org.apache.commons:commons-codec').",
    "g6f0r": "Для основных библиотек Ruby дополнительная установка не требуется. Просто замените «TEST12345» на желаемое значение.",
    "g6f0t": "Запустите go get github.com/mitchellh/go-base32, чтобы добавить зависимость в ваш проект.",
    "g6v3b": "Однако больший набор символов Base45 может увеличить вероятность ошибок при работе с небуквенно-цифровыми символами, что может стать проблемой в некоторых средах или каналах передачи.",
    "g7h5k": "Как работает Base58?",
    "g8h7s": "Как работает Base62?",
    "g8r3e": "Основным недостатком Base32 является его относительно низкая эффективность использования пространства; он расширяет входные данные примерно на 25% больше, чем Base64. Это означает, что для того же объема закодированных данных требуется больше места или пропускной способности.",
    "gDjbs": "Исторические данные",
    "gK3dNQ": "Копировать",
    "gQhfS": "Файловые инструменты",
    "gT6re": "C++ не имеет собственной реализации Base64. В этом примере используется библиотека OpenSSL для кодирования и декодирования Base64. Чтобы использовать OpenSSL, установите его в своей системе и свяжите его с соответствующими библиотеками при компиляции программы.",
    "gU1O2": "Сработало",
    "generic-NI-UFPTe0": "Украсить общий код",
    "generic-code-beautify.desc.2b3c": "Эта операция форматирует код на различных языках программирования, чтобы улучшить читаемость за счет применения одинаковых отступов, разрывов строк и соблюдения рекомендаций по стилю для конкретного языка.",
    "gkC8t": "База64",
    "gkdqqC8t": "База45",
    "gkqC8t": "База32",
    "gms7_9n5v": "Преобразует шестнадцатеричную строку байтов обратно в ее необработанное значение.",
    "gnKMZ": "Обновлён.",
    "h4e1b": "Это также полезно в ситуациях, когда буквенно-цифровые строки с учетом регистра легче обрабатывать, чем шестнадцатеричные или base64, которые могут содержать небуквенно-цифровые символы, которые могут вызвать проблемы в определенных контекстах (например, URL-адреса или имена файлов).",
    "h6AeI": "Соединение через веб-сокет закрыто в {0}",
    "h7rUq": "В Node.js встроенный класс Buffer может обрабатывать кодирование и декодирование Base64 без необходимости использования каких-либо внешних библиотек. Этот фрагмент кода кодирует строку «TEST12345» в Base64, а затем декодирует ее обратно в исходную строку.",
    "h9j3m": "Заполнение в Base32",
    "hAH_IjzGN": "Это инсайдерская версия, эта часть еще в разработке.",
    "hGA96yTG4": "Некоторые функции не поддерживаются этой платформой.",
    "hJUMN": "Язык перевода",
    "hMvh1": "Резервное копирование базы данных",
    "hRFxV": "Для получения более подробной информации, пожалуйста, посетите наш веб-сайт",
    "hX1CWGAhl": "Делает отступы и предварительно настраивает код расширяемого языка разметки (XML).",
    "hcnt1k": "македонский",
    "hhOT3": "Поиск по имени",
    "hij90klm": "Base32 использует меньший алфавит (A-Z2-7), в результате чего строки становятся более длинными, но более удобочитаемыми.",
    "htTmvWjsS": "Сжимает код каскадных таблиц стилей (CSS).",
    "htt1d2": "эсперанто",
    "hu-iz": "Таймер",
    "huE6U": "Переменная",
    "hyV-d": "Сделанный",
    "hyirc0": "Шведский",
    "i27qmr": "фризский",
    "i6hMN": "Код подтверждения изображения",
    "i7w2m": "Существуют ли встроенные библиотеки Base45 в популярных языках программирования?",
    "i88tb": "Экспортировать результат в файл",
    "i8q8tb": "Настройка рабочего процесса для ввода",
    "i9o7k": "Преимущества Base32 перед Base64",
    "iNqF1T": "Управление облачной учетной записью",
    "iOEjZ": "Нет доступного кода",
    "i_lang_": "Языковые пакеты",
    "iknTS": "Менеджер паролей",
    "init_env": "Загрузка системных ресурсов",
    "ip2g1": "Скопировано",
    "ipOSQE": "Профессиональная версия",
    "it8ths": "индонезийский",
    "ixyP0": "Автоматическая обработка действия в реальном времени",
    "j1b5k": "Наиболее распространенные операции с использованием Base32 включают кодирование двоичных данных в строку Base32 и декодирование строки Base32 обратно в исходный двоичный формат.",
    "j4s6r": "Как мне кодировать/декодировать с помощью Base62 в JavaScript?",
    "j5s7r": "Как мне кодировать/декодировать с помощью Base85 в JavaScript?",
    "j6s3r": "Как мне кодировать/декодировать с помощью Base58 в JavaScript?",
    "j7k2t": "Для кодирования данных с помощью Base45 вам нужна библиотека или функция, реализующая алгоритм Base45.",
    "j8s6r": "Для Kotlin вы можете использовать библиотеку barcode-core, которая включает в себя функциональность Base45.",
    "j9s5r": "Для C# используйте библиотеку WarrenStranger.Base62 для обработки кодирования и декодирования Base62.",
    "jJuNz": "Исходный язык",
    "jO5eP": "ХОРОШО",
    "jPNCb": "Повторная попытка.",
    "jQXdi": "Светлый режим",
    "jR1zX": "Лаборатория искусственного интеллекта",
    "jRzgS": "Платформа Swift Foundation включает встроенные методы кодирования и декодирования Base64. Никаких внешних библиотек не требуется; просто импортируйте «Foundation», чтобы использовать эти функции.",
    "jZvLJ": "PHP поставляется со встроенными функциями base64_encode() и base64_decode() для обработки операций Base64. Эти функции легко доступны и не требуют дополнительной настройки или установки.",
    "jb392": "Имя",
    "jfpqt": "Навигатор заметок",
    "jgDoEq": "Нет данных часто задаваемых вопросов",
    "jhDoE": "Получение данных часто задаваемых вопросов",
    "jlxvpk": "Корейский",
    "json-beautify.desc.0912": "Эта операция форматирует данные JSON для улучшения читаемости путем последовательного добавления правильных отступов, разрывов строк и ключей сортировки.",
    "json-beautify.name.0912": "Форматировать SQL",
    "json-beautify.text.93kq": "Украсьте данные JSON",
    "k17PG": "Соединение через веб-сокет закрыто.",
    "k1m4e": "Однако он не обеспечивает такую ​​же эффективность использования пространства, как Base64 или Base32, поскольку в своем алфавите используется меньше символов.",
    "k2SVY": "выключенный",
    "k2em5e": "Это приводит к получению более коротких выходных строк для того же объема входных данных, что может быть полезно в сценариях, где минимизация размера имеет решающее значение.",
    "k2ku5p": "Чешский",
    "k3m2e": "Скопируйте предоставленный шаблон в новый файл Go, замените заполнитель фактическим закодированным значением, затем запустите файл, используя `go run yourfile.go`",
    "k41a5": "LafИнструменты",
    "k4s5rx": "словенский",
    "k7d9f": "Встроенная библиотека Ruby base32 предоставляет методы кодирования и декодирования Base32.",
    "k7d9r": "Пакет go-base32 предоставляет возможности кодирования и декодирования Base32 в Go.",
    "k7g0n": "В Base32 каждые 5 бит входных данных сопоставляются с одним из 32 символов из набора «ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=».",
    "k9em5e": "Это делает его идеальным для сценариев, где требуется краткий, удобный для URL-адресов идентификатор без ущерба для читабельности.",
    "k9jtr": "Пакет npm «base32-encoding» используется для кодирования и декодирования Base32 в Node.js.",
    "kLH79": "Электронная почта",
    "kOi5A": "Распечатать страницу",
    "kPD22": "Словарь",
    "kPJ-A4": "Обновить",
    "kZd9G": "Ruby имеет встроенную библиотеку base64, которая предоставляет методы кодирования и декодирования Base64. Включите библиотеку с параметром «require \\\"base64\\\"» в свой скрипт.",
    "kcHxr": "Пожалуйста, укажите здесь имя пользователя учетной записи администратора.",
    "kjks1": "Получение конфигурации i18n из API локального сервера",
    "kqv5ht": "идиш",
    "krxSK": "ИИ-помощник",
    "ks12d": "Информационная безопасность",
    "kv4wag": "Голландский",
    "l1p9z": "Что такое Base32?",
    "l3akoa": "амхарский",
    "l6Djb": "Выберите один из вариантов в качестве предпочтительной темы:",
    "lIn3_": "Имя пользователя администратора",
    "lQFII": "Повторно запустить инициализацию",
    "lRHDQ": "Выход из полноэкранного режима",
    "lUh5c": "Генератор",
    "lkuulh": "Французский",
    "lp0qmd0": "Отметить как избранное",
    "lpKAz": "Настройки",
    "lpzg83": "Самоанец",
    "m0106": "Конвертер",
    "m0107": "Генератор",
    "m0108": "форматтер",
    "m6d8b": "Каждое 5-битное значение представлено одним символом, что позволяет эффективно кодировать и декодировать системы, предпочитающие работать с октетами (8-битными единицами).",
    "m6t1b": "Библиотека «base32» Дэниела Р. Коллинза обеспечивает функции кодирования и декодирования Base32 на C++.",
    "m7WZw": "Системный веб-сокет сломан",
    "m8rTc1": "После реализации диспетчера сценариев оболочки вы можете использовать его для управления командами оболочки.",
    "m9k1z": "Однако если декодируемые данные содержат определенную семантику приложения (например, определенные форматы QR-кода), после декодирования может потребоваться дополнительная обработка.",
    "mBgF1": "Действие мыши",
    "mSFei": "Исходный код на GitHub",
    "mWXeh": "Идентификатор рабочей области: {0}",
    "mabHq": "Найти старые файлы",
    "mbzCv": "Произошла ошибка: {0}, время отклонения: {1}.",
    "md2.desc.1039": "Эта операция хэширует данные в хеш {0}.",
    "md2.text.192d3": "Создать хэш {0}",
    "md2aO2NaJITm": "Делает отступы и улучшает код каскадных таблиц стилей (CSS), что упрощает его чтение и понимание.",
    "md4.desc.1039": "Эта операция хэширует данные в хеш {0}.",
    "md4.text.192d3": "Создать хэш {0}",
    "md5-cpp-install-openssl-0002": "Установите OpenSSL в своей системе и свяжите его с библиотеками libssl и libcrypto при создании приложения на C++.",
    "md5-cpp-openssl-0001": "C++ использует библиотеку OpenSSL для генерации хешей MD5. Вам необходимо установить OpenSSL и связать его с ним в своем проекте.",
    "md5-cpp-use-openssl-0003": "Фрагмент создает функцию getMD5, которая принимает входную строку, вычисляет ее хэш MD5 с помощью API MD5 OpenSSL и возвращает хэш в виде шестнадцатеричной строки. Вставьте этот код в свою программу на C++ и вызовите функцию getMD5 с нужным вводом.",
    "md5-csharp-built-in-0001": "В C# класс System.Security.Cryptography.MD5 используется для генерации хешей MD5.",
    "md5-csharp-no-install-0002": "Установка внешней библиотеки не требуется, поскольку она является частью .NET Framework/Core.",
    "md5-csharp-use-0003": "Этот фрагмент создает экземпляр MD5, преобразует входную строку в байты, вычисляет хеш и, наконец, кодирует хэш в формате Base64. Поместите этот код в точку входа вашего приложения C# и запустите его, чтобы получить хэш MD5 в кодировке Base64.",
    "md5-java-built-in-0001": "Java использует класс java.security.MessageDigest для генерации хешей MD5.",
    "md5-java-imports-0002": "Вам необходимо импортировать «java.security.MessageDigest» и «java.util.Base64» для хеширования и кодирования результата.",
    "md5-java-use-0003": "Фрагмент получает экземпляр алгоритма дайджеста MD5, обновляет его байтами входной строки, а затем кодирует полученный хэш в строку Base64. Скопируйте этот код в класс Java и выполните его основной метод, чтобы получить хэш MD5 в кодировке Base64.",
    "md5-nodejs-built-in-0001": "В Node.js встроенный модуль «crypto» используется для генерации хешей MD5.",
    "md5-nodejs-no-install-0002": "Установка внешней библиотеки не требуется, поскольку «crypto» предустановлено в Node.js.",
    "md5-nodejs-use-0003": "Фрагмент создает хэш-объект с помощью createHash('md5')`, обновляет его входной строкой, а затем преобразует дайджест в шестнадцатеричный формат с помощью `.digest('hex')`. Вставьте этот код в свой скрипт Node.js и выполните его, чтобы получить хэш MD5 входного значения.",
    "md5-php-built-in-0001": "PHP имеет встроенную функцию md5() для генерации хэшей MD5.",
    "md5-php-no-install-0002": "Никакой установки внешней библиотеки не требуется, поскольку md5() предустановлен в PHP.",
    "md5-php-use-0003": "В этом простом примере определяется функция getMD5, которая вызывает функцию PHP md5() для предоставленной входной строки. Скопируйте этот код в файл PHP, сохраните его с расширением .php и запустите на веб-сервере или через командную строку, чтобы увидеть MD5-хеш входного значения.",
    "md5-python-built-in-0001": "Python использует встроенную библиотеку hashlib для генерации хэшей MD5.",
    "md5-python-no-install-0002": "Никакой дополнительной установки не требуется, поскольку hashlib входит в стандартную комплектацию Python.",
    "md5-python-use-0003": "Предоставленный шаблон кодирует входную строку в байты перед созданием хеш-объекта MD5. Затем к хэш-объекту вызывается метод .hexdigest() для получения хеша MD5 в шестнадцатеричной форме. Скопируйте этот код в скрипт Python и запустите его, чтобы получить хэш MD5.",
    "md5.desc.rxsHq": "Эта операция хэширует данные в хеш {0}.",
    "md5.textiDjMIo": "Создать хэш {0}",
    "md6.desc.1039": "Эта операция хэширует данные в хеш {0}.",
    "md6.text.192d3": "Создать хэш {0}",
    "meeMC1Uk7.text.93kq": "Минимизировать {0}",
    "mihc3": "Завершил эту операцию",
    "mjHoR": "Кроме того, технически никто не может прочитать этот токен, иначе он/она атакует и контролирует ваш компьютер.",
    "mnb19i": "Немецкий",
    "mno34567": "Преимущества Base64",
    "mnoijklm": "Существуют ли другие кодировки BaseXX?",
    "mslw4o": "Греческий",
    "mwn7iv": "Зулу",
    "myxedr": "Монгольский",
    "n0pqrstu": "Пример использования Base64",
    "n1jA9": "Подтверждать",
    "n3e7r": "История Base32",
    "nSeIq8-": "Самое главное, это бесплатно и с открытым исходным кодом. Вы можете использовать его в личных или коммерческих целях.",
    "nTvw4": "Чтобы защитить и отдельно сохранить ваши данные и настройки, вы можете использовать для этого свою локальную учетную запись. Кроме того, в будущем LafTools будет поддерживать виджеты мгновенных сообщений среди пользователей.",
    "nmb1wx": "Йоруба",
    "nodBw": "Эта операция кодирует необработанные данные в строку ASCII {0}.",
    "nopqrs01": "В то время как Base64 оптимизируется для компактности, Base32 выбирается, когда минимизация ошибок ввода, например, ручного ввода, имеет решающее значение.",
    "nrix6l": "Чичева",
    "nxJC7": "Действие по умолчанию, которое будет выполняться при выполнении преобразователя.",
    "o52xW": "Экспорт",
    "o8xyzu": "Люксембургский",
    "oBz8D": "Загрузка",
    "oNLxH": "Имя пользователя",
    "oNg3f": "Официальный веб-сайт",
    "ocxsw3": "ирландский",
    "of_ox": "В общем, LafTools — это универсальное решение для всех ваших потребностей.",
    "oj23X": "Восстановить базу данных",
    "ojCWEFdVe": "Сжимает код JavaScript, удаляя все ненужные символы.",
    "ooiFU": "Перезапустите службу Java.",
    "oqHqVq": "Сортировать по",
    "oqHqqV": "Всего: {0} команд",
    "oqHqqVq": "Время копирования",
    "oqjbcj": "Лаосский",
    "os8h6u": "датский",
    "p5e9n": "Добавьте библиотеку в качестве зависимости в сценарий сборки Gradle. Например, в файле build.gradle уровня приложения добавьте `implementation 'com.bottlerocketstudios:barcode-core:...'` с номером последней версии.",
    "p6e3n": "Установите пакет через NuGet, запустив «Install-Package WarrenStranger.Base62» в консоли диспетчера пакетов, или добавьте его через диспетчер пакетов NuGet.",
    "p8Exxc1s": "Существуют различные инструменты, которые используют технологии искусственного интеллекта для более эффективного выполнения задач в лаборатории искусственного интеллекта.",
    "p8eq9n": "Вы можете использовать такие библиотеки, как «base85» или «ascii85», для кодирования и декодирования Base85 в JavaScript.",
    "p9e1n": "Вы можете использовать такие библиотеки, как «base-x» или «base62», для кодирования и декодирования Base62 в JavaScript.",
    "p9s5t": "Base32 был разработан Дугласом Крокфордом, известным своим вкладом в JavaScript, в 2001 году. Он был создан как более надежная альтернатива существующим кодировкам, таким как Base64, особенно для ситуаций, требующих текстового представления двоичных данных.",
    "pANmj": "Теги можно определить на основе типов серверов, использования сценариев или любых других критериев, которые вы предпочитаете.",
    "pA_deJ": "Экспорт в буфер обмена",
    "pA_feeJ": "Переподключить терминал",
    "pA_qweJ": "Очистить буфер",
    "pDBSWq": "нет доступного контента для правой панели",
    "pEk1kk": "LafTools представляет здесь полезные функции.",
    "pEk1qkk": "Список всех открытых вкладок",
    "pJoOz": "Открыть файл",
    "pKHRT": "Перейти в Инструменты",
    "pKqHRq": "Поиск заметок",
    "pL6qH": "Завершенный.",
    "pZ4d616m-": "Украсить {0}",
    "ph5jH": "Обработка этой части",
    "piih4x": "таджикский",
    "pmnp4b": "украинец",
    "ppmz8e": "гаитянский креольский",
    "pq5e9n": "Вы можете использовать такие библиотеки, как «bs58», для кодирования и декодирования Base58 в JavaScript.",
    "pqrs890t": "Универсальная совместимость: Base64 широко признан и поддерживается на всех основных языках программирования.",
    "pqs7y3": "Пожалуйста, рассмотрите возможность регистрации этой веб-страницы как PWA, чтобы иметь полную поддержку раскладки клавиатуры.",
    "psA_eJ": "Экспортировать как файл",
    "psZoP": "Перетащите сюда файлы, чтобы обработать их.",
    "psqqpq_o": "Хорошо, результат копируется в буфер обмена {0} раз.",
    "pzn2IpkDo": "Отступы и красивая печать кода JavaScript Object Notation (JSON).<br><br>Теги: просмотрщик json, украшение, подсветка синтаксиса",
    "q12beqwR": "Нет доступных инструментов",
    "q29t31": "Польский",
    "q2n3r": "Сегодня он используется в различных приложениях, где эффективность использования пространства и читаемость имеют решающее значение, например, PDF-документы и некоторые сетевые протоколы.",
    "q2n9r": "После добавления скопируйте предоставленный шаблон в файл Swift. Обратите внимание, что в этом примере мы используем гипотетический сценарий, в котором у вас есть представление строки Base45 в base64; замените его фактическим закодированным значением перед запуском кода.",
    "q2w5m": "Цель использования Base32?",
    "q2x8k": "Его использование распространилось на другие криптовалюты и сценарии, где желательны удобочитаемые, устойчивые к ошибкам строки.",
    "q5h8n": "Основным преимуществом является уменьшенная длина строки для того же объема закодированных данных, что делает его пригодным для приложений, где эффективность использования пространства имеет решающее значение.",
    "q6n1r": "После установки библиотеки скопируйте код шаблона в класс Java и замените заполнитель фактическим значением в кодировке Base85 перед запуском кода.",
    "q7n3r": "Он также избегает двусмысленных символов, таких как «O» и «0», «I» и «l», которые могут привести к человеческим ошибкам транскрипции.",
    "q9iuti": "валлийский",
    "qDrbEr": "Указанное вами имя пользователя пусто. Проверьте и повторите попытку.",
    "qF4uS2": "Создать рабочую область",
    "qF4uS23": "Новое окно",
    "qHoktx": "Спасибо!",
    "qN1LdZ2": "Последнее изменение",
    "qQmBr": "Перевод текста",
    "qTqyvWdY": "Еще не закончена",
    "qWemXE4": "1 января 2024 г.",
    "qWw3eTH": "Эта часть помогает сохранять файлы на локальном или облачном диске.",
    "qdeFXx": "В настоящее время эта страница, которую вы ищете, еще не полностью реализована.",
    "qpDBSW": "нет доступной панели",
    "qpDBSWe1": "нет доступной панели",
    "qqK_x_": "Войти",
    "qqqwYoz": "Помощь",
    "qqwYoz": "Вкладки",
    "qqwYqwe": "Рабочие пространства",
    "qrstuvwx": "Да, помимо Base64 и Base32, существуют также Base16 (шестнадцатеричный), Base58 и Base85, каждый из которых предназначен для разных сценариев.",
    "qtpmvP": "Подтвердите локальный пароль",
    "qv1p5n": "Например, в Java вы можете использовать библиотеку org.iso.base45 для кодирования данных.",
    "qzshys": "урду",
    "r1GLS": "Теги",
    "r2n7v": "Основное преимущество — повышенная читаемость за счет исключения похожих символов, что снижает количество ошибок при ручном вводе.",
    "r4n6v": "Добавьте зависимость в свой проект, запустив go get github.com/xyproto/base62. Это позволит загрузить и установить пакет.",
    "r6nq2v": "Основным преимуществом Base62 является повышенная эффективность использования пространства благодаря большему набору символов, чем у Base32, но без буквенно-цифровых символов, имеющихся в Base64.",
    "r8c6z": "Замените «TEST12345» своей собственной строкой и запустите этот класс как программу Java, чтобы увидеть результаты.",
    "r8y2w": "Здесь для кодирования и декодирования Base32 используется PHP-библиотека Base32.",
    "r9a3t": "Base45 — это схема кодирования текста, которая кодирует двоичные данные в символы ASCII.",
    "r9qn8v": "Основным преимуществом Base85 является повышенная эффективность использования пространства благодаря большему набору символов (85 против 64 в Base64 или 32 в Base32).",
    "rE6fUsSGl": "Делает отступы и предварительно настраивает код языка структурированных запросов (SQL).",
    "rK6cx": "{0}, разработанный командой LafTools.",
    "rLXJN": "В Kotlin встроенный класс Android android.util.Base64 можно использовать для кодирования и декодирования Base64. В этом примере предполагается среда Android; для проектов Kotlin, отличных от Android, рассмотрите возможность использования java.util.Base64.",
    "rQkas": "Добро пожаловать в LafTools",
    "rT34qnO": "Введите текст для обработки. Результат отобразится в редакторе вывода.",
    "rVqlu": "Декодировать {0}",
    "rYSpwq": "Алгоритм MD2 (Message-Digest 2) — это криптографическая хеш-функция, разработанная Рональдом Ривестом в 1989 году. Алгоритм оптимизирован для 8-битных компьютеров. Хотя MD2 больше не считается безопасным, даже по состоянию на 2014 год он продолжает использоваться публично. ключевые инфраструктуры как часть сертификатов, созданных с помощью MD2 и RSA. Алгоритм дайджеста сообщения по умолчанию состоит из 18 раундов.",
    "r_n6h": "Светлый или темный режим",
    "rf0mql3": "Светлая или темная тема",
    "rub76Z8zx": "Попытки красиво напечатать языки в стиле C, такие как C, C++, C#, Java, PHP, JavaScript и т. д. Это не даст идеального результата, и полученный код может больше не работать. Эта операция предназначена исключительно для того, чтобы сделать запутанный или минифицированный код более простым для чтения и понимания. Что не будет работать должным образом: форматирование цикла, форматирование цикла Do-While, отступы Switch/Case, некоторые операторы сдвига битов.",
    "run_text": "Прежде чем войти в вашу рабочую среду, мы хотели бы сначала предварительно загрузить необходимые системные ресурсы. Пожалуйста, подождите некоторое время, оно скоро будет завершено, детали которого можно просмотреть, как показано ниже.",
    "rycJy": "LafTools — это универсальный набор инструментов, специально разработанный для программистов. Он представляет собой вторую версию CodeGen Toolbox, теперь с более облегченной средой выполнения, написанной на Golang и JavaScript.",
    "ryhkqb": "болгарский",
    "s-fxP80Dd": "LafTools IDE",
    "s0vrf9": "иврит",
    "s1b3m": "В отличие от Base64 или Base32, он исключает легко путающиеся символы «0», «O», «I» и «l», что делает его подходящим для URL-адресов и QR-кодов.",
    "s3e6r": "Как мне закодировать данные с помощью Base45?",
    "s4OeX": "Авторизуйтесь в системе успешно",
    "s5b8m": "Замените «TEST12345» своими собственными данными и запустите этот скрипт в среде PHP для выполнения операций Base32.",
    "s5e8r": "Замените «TEST12345» своими фактическими данными и запустите этот фрагмент в контексте приложения Swift для выполнения операций Base32.",
    "s5t0n": "Заполнение в Base32 включает добавление символов «=\", чтобы гарантировать, что окончательный фрагмент закодированных данных по-прежнему будет содержать бит, кратный 8. Однако, в отличие от Base64, заполнение Base32 минимально, поскольку каждый символ Base32 уже кодирует 5 бит.",
    "s7e9r": "Никаких внешних библиотек не требуется. Просто замените 'b'TEST12345'' фактическим байтовым объектом для кодирования/декодирования.",
    "sBxHr": "Scala использует встроенный в Java класс java.util.Base64 для операций Base64. Убедитесь, что вы работаете на платформе JVM с Java 8 или выше.",
    "sHoxxW": "История",
    "sKx5t": "Встроенный в Java класс java.util.Base64, доступный начиная с Java 8, предоставляет методы кодирования и декодирования Base64. Входная строка преобразуется в байты с использованием кодировки UTF-8, затем кодируется и декодируется по мере необходимости.",
    "sO0MOe": "Каждый раз, когда вы остаетесь в окне более 5 секунд, это будет показано здесь.",
    "sR8yc": "Закрывать",
    "sc49my": "Синдхи",
    "sdfk1": "Прокручивать вкладки влево",
    "sdfk13": "Прокрутить вкладки вправо",
    "sglMS": "Создать время",
    "sk123": "Еще не закончен",
    "slqcWD": "Эта логическая часть еще не поддерживается, следите за обновлениями.",
    "spCqEa": "ДЕЛАТЬ",
    "ssDaOq": "Впервые в LafTools?",
    "ssm80i": "Баскский",
    "svqh06": "азербайджанский",
    "sys_updates": "Последние обновления системы",
    "t6wczq": "коса",
    "t7m4g": "Крейт base32 используется для кодирования и декодирования Base32 в Rust.",
    "t84q1z": "Армянский",
    "t8c6xc": "Сомали",
    "t8z1v": "Если в конце осталось недостаточно битов для заполнения полной 5-битной группы, добавляются символы заполнения «=». Например, для байта требуется два символа Base32, а для 3-байтовой последовательности потребуется четыре символа Base32.",
    "t9m3g": "CryptoSwift — это популярный пакет Swift, включающий функции кодирования и декодирования Base32.",
    "tBIX-d": "Окна",
    "tEiv_": "Получение сведений о расширении",
    "tIy3Q": "Обнаружена ошибка",
    "tIyq3Q": "Обнаружена ошибка",
    "tR8pY": "Go предоставляет стандартный пакет библиотеки encoding/base64 с функциями кодирования и декодирования Base64. Никаких внешних зависимостей не требуется; просто импортируйте этот пакет в свою программу Go и вызовите соответствующие функции.",
    "tWe1yF": "Нет доступной команды оболочки.",
    "tY3p1": "Больше информации",
    "tiaiB": "Отмена",
    "tn7duf": "хорватский",
    "trywithclassicalwebui": "Попробуйте классический веб-интерфейс",
    "ttAre": "Введите здесь свой пароль в виде открытого текста",
    "tuv23456": "Безопасный вариант URL-адреса Base64",
    "twamg": "AI Assistant, расширяющий возможности вашего творчества",
    "tyhgpr": "яванский",
    "u1i2b": "Каковы преимущества использования Base85 перед Base64 или Base32?",
    "u2l8s": "Что такое Base45?",
    "u3i8b": "Каковы преимущества использования Base62 перед Base64 или Base32?",
    "u3j9p": "Base32 часто используется, когда вам нужно компактное текстовое представление двоичных данных, которое можно напечатать или распечатать без потери информации, например, при проверке целостности файлов, геокэшинге и генерации безопасных паролей.",
    "u7i9b": "Для Go используйте пакет base62, доступный на GitHub.",
    "u7vwx8yz": "Общие операции Base64",
    "u8i5b": "Каковы преимущества использования Base58 перед Base64 или Base32?",
    "u9g6t": "Для JavaScript вам необходимо установить пакет base85 для кодирования и декодирования Base85.",
    "uVseB": "Нажмите {0}, чтобы отобразить список горячих клавиш.",
    "uW7eZ": "В C нет встроенной реализации Base64. В этом примере используется библиотека OpenSSL для кодирования и декодирования Base64. Чтобы использовать этот фрагмент кода, установите OpenSSL в своей системе и свяжите его с соответствующими библиотеками при компиляции программы с помощью команды, похожей на «gcc -o base64_example base64_example.c -lssl -lcrypto».",
    "ucDLv": "Вы скопировали эту запись {0} раз.",
    "ui5pZ": "Анализатор команд",
    "ulah0q": "Японский",
    "unc9E": "Случайный текст",
    "usr_defined": "Системные настройки",
    "uvwxyza1": "Отсутствие потери данных. Поскольку это обратимый процесс, кодирование Base64 не приводит к потере информации.",
    "uwqGE": "Перейти в Инструменты",
    "v3k5r": "Набор символов включает в себя все прописные и строчные буквы (A-Z, a-z) и цифры (0-9), что обеспечивает более компактное представление по сравнению с Base64 или Base32.",
    "v4k6r": "Он кодирует данные в более компактную форму по сравнению с Base64 или Base32, используя больший набор символов.",
    "v4n9t": "Base58 — это схема кодирования, которая представляет двоичные данные в виде последовательности буквенно-цифровых символов.",
    "v5k3r": "После установки замените заполнитель в разделе декодирования фактической строкой в ​​кодировке Base85 и запустите сценарий. Библиотека выполняет преобразование между строками Buffers и Base85.",
    "v6qkl": "Пакет BouncyCastle NuGet обеспечивает кодирование и декодирование Base32 на C#.",
    "v7q3db": "тайский",
    "v9b7t": "Замените «TEST12345» своей собственной строкой и запустите это консольное приложение для выполнения операций кодирования и декодирования Base32.",
    "vOjNC": "Введите пароль или безопасный ключ",
    "vTsQU": "Пожалуйста, предоставьте код приглашения от вашего администратора",
    "vU17B": "Не удалось отправить запрос",
    "vWqac": "Прежде чем войти в вашу рабочую среду, мы хотели бы сначала предварительно загрузить необходимые системные ресурсы. Пожалуйста, подождите некоторое время, оно скоро будет завершено, детали которого можно просмотреть, как показано ниже.",
    "vaP0vq": "Успешно установите локальный пароль.",
    "vh9j4": "Вход",
    "vo1prl": "испанский",
    "vr93oi": "финский",
    "vwx1yza2": "Примером является кодирование файла изображения для встраивания его в HTML-тег <img>:",
    "w1ANqKoBf": "Скрыть текст на боковой панели",
    "w1x4k": "Да, существует несколько вариантов, включая Ascii85 (используется в PostScript и PDF), Z85 (ZeroMQ) и UUencode (более старый формат). У каждого немного разный набор символов и правила.",
    "w2x9qk": "Хотя сам Base62 не имеет существенных вариантов, некоторые реализации могут немного отличаться в выборе набора символов, например, исключая «+» или «/», обычно используемые в Base64.",
    "w3x7k": "Да, некоторые популярные варианты включают Base58Check, который добавляет контрольную сумму для обнаружения ошибок, обычно используемую в Биткойне.",
    "w6otqn": "корсиканец",
    "w9qudj": "панджаби",
    "wAxtg": "Первоначально мы сгенерировали UUID в качестве авторизованного токена, чтобы вы могли выполнить эту настройку. Судя по полученным LafTools, предоставленный вами токен — {0}, он успешно проверен LafTools, и, следовательно, вы можете продолжить настройку этой формы.",
    "wI1eh": "Следующий",
    "wQYoz": "Файл",
    "wQdYoz": "Редактировать",
    "wQdqwYoz": "Вид",
    "wcl1K": "Применение",
    "wgkk6y": "мальтийский",
    "wj3VS": "Эта операция декодирует данные из строки ASCII {0} обратно в необработанный формат.",
    "wsWcXd": "Уведомления",
    "wxyzabcd": "Существует версия Base64, безопасная для URL-адресов, в которой «+» заменяется на «-» и «/» на «_», а заполнение «=» отсутствует, что делает ее подходящей для веб-URL-адресов.",
    "x009": "Чтобы получить доступ к нашей документации по использованию",
    "x2c5e": "Python имеет встроенный модуль base85, который поддерживает кодирование и декодирование Base85.",
    "x2z6r": "Что такое Base58?",
    "x5alzu": "Курдский (Курманджи)",
    "x5tHV": "Системный Обзор",
    "x5z1b": "Base45 был разработан в первую очередь для использования QR-кода в контексте цифровых сертификатов COVID.",
    "x6v2w": "В C нет стандартной библиотеки Base32, поэтому здесь мы используем гипотетическую библиотеку libbase32.",
    "x7n1m": "Base62 — это схема кодирования, которая представляет двоичные данные как последовательность из 62 буквенно-цифровых символов.",
    "x8mdg": "Встроенный модуль Python base64 обеспечивает кодирование и декодирование Base32 с помощью функций b32encode и b32decode.",
    "x9g7e": "Загрузите исходный код с GitHub (https://github.com/dankamongmen/libbase32) или установите его в виде пакета, если он доступен для вашей платформы.",
    "x9n1b": "Base85 — это схема кодирования, которая представляет двоичные данные с помощью набора из 85 печатных символов ASCII.",
    "xMBv0": "Загрузка связанных ресурсов...",
    "xOJqG1": "Часто задаваемые вопросы",
    "xPHqP": "Описание еще не определено.",
    "xQ_ls": "Резервное копирование Redis",
    "xbz0B": "Закрыть все вкладки",
    "xbz0B2": "Закрыть вкладку",
    "xdqwe": "Добро пожаловать в LafTools!",
    "xeP4zV": "Быстрый просмотр элементов TODO",
    "xeP4zVd": "Быстро найдите английский словарь.",
    "xml-bdeautify.desc.2a5f9": "Минимизация XML-кода",
    "xml-beautify.desc.2a5f9": "Эта операция форматирует данные XML для улучшения читаемости за счет добавления правильных отступов, разрывов строк и обеспечения правильности структуры.",
    "xs22XLF": "Для этого идентификатора товара нет доступных данных, рассмотрите возможность выбора других товаров.",
    "y3b6n": "Да, если закодированная строка была сгенерирована в соответствии со спецификацией Base45, любой совместимый декодер сможет ее декодировать.",
    "y3m7k": "Для Java используйте библиотеку commons-codec, которая включает поддержку кодирования и декодирования Base85.",
    "y3m9k": "Почему был создан Base62?",
    "y3qjdd": "Ваш локальный пароль успешно подтвержден.",
    "y5nne": "Этот код можно запустить непосредственно в среде Node.js или как часть более крупного проекта, где вам нужна функциональность Base32.",
    "y6m8k": "Почему был создан Base85?",
    "y6t1n": "Недостатки Base32",
    "y8Ir5": "Эта часть используется для инициализации вашей учетной записи администратора, однако на данный момент здесь нет ничего, что нужно создавать или настраивать, поскольку это было ранее настроено вашим администратором, пожалуйста, пренебрегайте этой частью и продолжайте выполнять оставшиеся шаги.",
    "y8b1m": "Замените «TEST12345» своими собственными данными и убедитесь, что функции библиотеки правильно реализованы и связаны для компиляции и выполнения этой программы для операций Base32.",
    "y9m1n": "Почему был создан Base58?",
    "y9m3k": "Для Swift вы можете использовать библиотеку Base45, доступную на GitHub.",
    "y9z2e": "Замените «TEST12345» фактическим фрагментом байта и запустите эту программу Go для кодирования и декодирования с использованием стандартной кодировки Base32.",
    "y9z2t": "Выполните этот сценарий в среде Ruby, например IRB, или сохраните его как файл .rb и запустите с именем «ruby filename.rb».",
    "yMZW-GEgf": "Формат XML",
    "ySVf-": "Повторите этот запрос",
    "yTsqFO": "Алгоритм MD4 (Message-Digest 4) — это криптографическая хеш-функция, разработанная Рональдом Ривестом в 1990 году. Длина дайджеста составляет 128 бит. Алгоритм повлиял на более поздние разработки, такие как алгоритмы MD5, SHA-1 и RIPEMD. Безопасность MD4 была серьезно нарушена.",
    "yVprb": "Эта часть еще находится в разработке.",
    "y_2Q1": "Кодирование и декодирование",
    "y_2Q2": "Симметричная Крипто",
    "y_2Q3": "Асимметричная криптография",
    "y_2Q4": "Китайские национальные алгоритмы",
    "y_2Q5": "Веб-аутентификация",
    "y_2Q5dqw": "Сопоставитель текста",
    "y_9YM": "Здесь будет отображаться вывод.",
    "y_9YqM": "Загрузка статических ресурсов...",
    "y_BN6": "Алгоритм дайджеста",
    "ya0cwu": "малайский",
    "yc7dqiu": "Упрощенный китайский",
    "yfYeg": "Текстовый шаблон",
    "yiRso": "Облачные заметки",
    "yqiRso": "Местные заметки",
    "yqrxl4": "сербский",
    "yt7kX2fPQ": "Обнаружено неожиданное исключение",
    "yznU9": "Пустые данные дерева",
    "z-o28we": "Панель процесса",
    "z0j2nf": "хинди",
    "z1m2t": "Пример использования: `const encoded = bs58.encode('ваши-данные'); const decoded = bs58.decode(encoded);`",
    "z1n5qr": "Примеры включают пакет npm base45 для JavaScript и dotnet-base45 для .NET.",
    "z1oFn": "Побег и побег",
    "z2jzej": "Маратхи",
    "z2m7t": "Пример использования: `const base62 = require('base62'); const encoded = base62.encode('ваши данные'); const decoded = base62.decode(encoded);`",
    "z2t7m": "Что такое Base85?",
    "z2x8c": "В Base32 меньше визуальных двусмысленностей, поскольку в нем используются только заглавные буквы и цифры, что упрощает чтение и расшифровку вручную или по телефону по сравнению с Base64, который включает буквы «+», «/» и строчные буквы.",
    "z3m1t": "После добавления зависимости и синхронизации проекта скопируйте предоставленный шаблон в класс Kotlin, заменив заполнитель фактическим закодированным значением перед запуском кода.",
    "z4t9b": "Что такое Base62?",
    "z5b7m": "Он использует более крупный алфавит (0–9, A–Z, a–z, -, ., $, /, +, % и *) по сравнению с Base64 или Base32, что приводит к более коротким закодированным строкам для тех же входных данных.",
    "z5bvb": "Установите его, запустив «npm install base32-encoding». Замените «TEST12345» желаемыми входными данными во фрагменте кода.",
    "z5m6t": "Пример использования: `const base85 = require('base85'); const encoded = base85.encode('ваши данные'); const decoded = base85.decode(encoded);`",
    "z6m1c": "Более поздние варианты, такие как z-base-32, были введены для повышения удобства использования, заменяя некоторые менее запоминающиеся символы другими, но исходная спецификация Крокфорда широко используется и сегодня.",
    "z79b1a": "арабский",
    "z7n1m": "Установите его с помощью npm, запустив «npm install base85» или «yarn add base85».",
    "z7t1p": "Существуют ли какие-либо конкретные варианты Base62?",
    "z8em2t": "После установки скопируйте предоставленный шаблон в консольное приложение C# и замените заполнитель фактическим закодированным значением перед запуском программы.",
    "z8m2t": "Каковы преимущества использования Base45 перед Base64 или Base32?",
    "z8n6k": "Замените «TEST12345» на желаемую строку, скомпилируйте и запустите эту программу, чтобы увидеть результаты кодирования и декодирования Base32.",
    "z8qm2t": "Библиотека предоставляет классы кодировщика и декодера для операций Base45. Скопируйте код шаблона в консольное приложение C# и запустите его после установки пакета.",
    "z8qqm2t": "После установки скопируйте предоставленный шаблон в консольное приложение C# и замените заполнитель фактическим закодированным значением перед запуском программы.",
    "z9b6n": "Добавьте зависимость в свой проект Xcode через диспетчер пакетов Swift ('https://github.com/krzyzanowskim/CryptoSwift').",
    "z9kVv": "Python имеет встроенный модуль base64, который предоставляет методы кодирования и декодирования Base64. Входная строка сначала преобразуется в байты с использованием кодировки UTF-8, а затем кодируется в Base64, а затем декодируется обратно в исходную форму.",
    "z9t2p": "Существуют ли какие-либо конкретные варианты Base58?",
    "z9t7p": "Существуют ли какие-либо конкретные варианты Base85?",
    "zN2ES": "Рабочие пространства",
    "zc3Hf": "Пароль",
    "zjDJk": "Укажите путь к каталогу рабочей области",
    "zkqUFa": "{0} еще не настроен",
    "zkv375": "кхмерский",
    "zmDWx": "Связаться с нами",
    "znVRwq": "Файлы",
    "zpyd34": "Английский",
    "zqiIoqXw": "Выполнение вычислений...",
    "zyx98765": "Можно ли использовать Base64 для сжатия?",
    "zzcepr": "кебуано"
}
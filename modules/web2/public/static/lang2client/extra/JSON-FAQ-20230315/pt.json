{
    "JSON-Advantages-011": "JSON é geralmente menor e mais rápido de analisar que XML, tornando-o ideal para comunicação cliente-servidor onde largura de banda e velocidade são cruciais.",
    "JSON-Basics-001": "O que é JSON?",
    "JSON-Beautify-007": "O que é embelezamento JSON?",
    "JSON-Beautify-Def-008": "O embelezamento JSON refere-se ao processo de formatação de dados JSON em um formato mais legível por humanos, com recuo e quebras de linha adequados, facilitando a análise e a depuração.",
    "JSON-Beautify-Example-009": "Antes: '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}', Depois: '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"matriz\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) é um formato leve de intercâmbio de dados baseado em texto, fácil de ser lido e escrito por humanos e fácil de ser analisado e gerado por máquinas.",
    "JSON-JavaScript-Support-020": "JSON é nativamente suportado por JavaScript através dos objetos globais `JSON.parse()` e `JSON.stringify()`. Qualquer JSON válido também é um objeto ou array literal JavaScript válido, que permite uma conversão perfeita entre os dois formatos.",
    "JSON-JavaScript-Usage-021": "No desenvolvimento web, JSON é comumente usado para solicitações AJAX, renderização no servidor e armazenamento de dados (por exemplo, armazenamento local ou IndexedDB).",
    "JSON-Linting-022": "O que é linting JSON e por que ele é importante?",
    "JSON-Linting-Benefit-024": "Linters podem evitar erros de tempo de execução devido a JSON inválido, garantindo uma troca de dados tranquila e economizando tempo na depuração de possíveis problemas.",
    "JSON-Linting-Explanation-023": "Linting JSON é o processo de verificar se um documento JSON está de acordo com a especificação JSON. Ajuda a identificar erros de sintaxe antes de tentar analisar os dados.",
    "JSON-Path-013": "O que é caminho JSON?",
    "JSON-Path-Example-015": "$.store.book[0].title seleciona o título do primeiro livro em um objeto JSON com uma loja que contém a matriz books.",
    "JSON-Path-Explanation-014": "JSON Path é uma linguagem de consulta semelhante ao XPath para XML, permitindo extrair dados de documentos JSON usando uma notação semelhante a um caminho.",
    "JSON-Path-Guide": "JSONPath - XPath para JSON",
    "JSON-Purpose-003": "É usado principalmente para transmitir dados entre um servidor e uma aplicação web como uma alternativa ao XML, com suporte nativo em JavaScript através dos métodos `JSON.parse()` e `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "Como o JSON se encaixa no JavaScript?",
    "JSON-Security-025": "Quais são algumas preocupações de segurança ao trabalhar com JSON?",
    "JSON-Security-Impact-026": "Os riscos potenciais de segurança incluem ataques de injeção JSON, onde são enviados dados maliciosos que podem causar comportamento não intencional quando analisados/executados.",
    "JSON-Security-Prevention-027": "Para mitigar esses riscos, sempre limpe a entrada do usuário e use bibliotecas que analisam JSON com segurança sem executar seu conteúdo (como JSON.parse() integrado do JavaScript). Além disso, evite usar eval() para analisar JSON.",
    "JSON-Serialization-016": "O que é serialização e desserialização JSON?",
    "JSON-Serialization-Def-017": "A serialização JSON é o processo de conversão de um objeto JavaScript em uma string JSON, enquanto a desserialização é o inverso – transformando uma string JSON novamente em um objeto JavaScript.",
    "JSON-Serialization-W3Schools": "Serialização JSON em W3Schools",
    "JSON-Syntax-004": "Qual é a sintaxe básica do JSON?",
    "JSON-Syntax-Example-f005": "Um objeto JSON consiste em pares de valores-chave entre chaves {0}. Cada chave deve ser uma string entre aspas duplas, seguida por dois pontos e, em seguida, seu valor.",
    "JSON-Syntax-Reference": "Documentos da Web MDN em JSON",
    "JSON-Value-Types-006": "Os valores podem ser strings, números, booleanos, matrizes (entre colchetes",
    "JSON-vs-XML-010": "Como o JSON se compara ao XML?",
    "JSON-vs-XML-Article": "Comparando JSON e XML",
    "MDN-JSON-in-JavaScript": "Documentos Web MDN - Trabalhando com JSON",
    "OWASP-JSON-Injection": "OWASP - Injeção JSON",
    "XML-Advantages-012": "XML fornece mais flexibilidade de estrutura e suporta namespaces, o que pode ser benéfico para estruturas de documentos complexas e interoperabilidade entre sistemas."
}
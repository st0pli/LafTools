{
    "Diff-XML-JSON-Article": "XML 和 JSON 之间的区别",
    "MDN-XML-Syntax": "MDN 网络文档 - XML 语法",
    "W3Schools-XML-Validation": "W3Schools - XML 验证",
    "XML-Advantage-Readable-018": "其人类可读的特性允许轻松检查和调试，并且定义自定义结构的能力使其能够灵活地适应多种用例。",
    "XML-Advantage-Standardized-017": "XML 是一种广泛采用的标准，使其与各种平台和系统兼容，促进互操作性和数据交换。",
    "XML-Advantages-016": "使用 XML 有哪些优点？",
    "XML-Attributes-006": "元素可以具有属性，这些属性提供有关开始标记内的元素的附加信息，例如 {0}",
    "XML-Basics-001": "什么是XML？",
    "XML-Def-002": "XML（可扩展标记语言）是一种标记语言，它定义了一组用于以人类可读和机器可读的格式对文档进行编码的规则。",
    "XML-Disadvantage-Size-020": "XML 可能相对冗长，与 JSON 等替代方案相比，会导致文件大小更大，从而影响传输速度和存储要求。",
    "XML-Disadvantages-019": "使用 XML 有哪些缺点？",
    "XML-JSON-Diff-Structure-014": "XML 使用详细的分层标签来构建结构，而 JSON 则依赖于键值对和数组。示例：XML {0} 与 JSON {1}。",
    "XML-JSON-Diff-Syntax-015": "XML 具有更严格的语法（包含结束标记和属性），而 JSON 的语法更轻，更接近 JavaScript 对象表示法。 JSON 通常被认为更容易在网络上解析和传输。",
    "XML-JSON-Difference-013": "XML 和 JSON 有什么区别？",
    "XML-Nesting-007": "XML 中的嵌套如何工作？",
    "XML-Nesting-Example-009": "例如，“<book><title>My Book Title</title><author>John Doe</author></book>”表示一本书，其标题和作者为嵌套元素。",
    "XML-Nesting-Explanation-008": "在 XML 中，元素可以相互嵌套以表示层次关系。子元素放置在其父元素的开始标签和结束标签之间。",
    "XML-Processing-Speed-021": "由于严格的语法和验证需要，解析和生成 XML 可能会比较慢，尤其是在处理复杂文档时。",
    "XML-Purpose-003": "它旨在承载数据，而不是像 HTML 那样显示数据，使其能够用作跨不同平台和应用程序共享结构化信息的通用格式。",
    "XML-Syntax-004": "XML 的基本语法是什么？",
    "XML-Syntax-Example-005": "简单的 XML 文档由树状结构中的元素组成。每个元素都以尖括号 (<element>) 中的标记开始，并以结束标记 (</element>) 结束。",
    "XML-Validation-010": "什么是 XML 验证？它是如何工作的？",
    "XML-Validation-Def-011": "XML 验证可确保 XML 文档遵守文档类型定义 (DTD) 或 XML 架构 (XSD) 中定义的一组特定规则。",
    "XML-Validation-Process-012": "验证器检查是否存在所有必需的元素和属性，验证数据类型，并在处理文档之前强制执行架构中指定的任何约束。"
}
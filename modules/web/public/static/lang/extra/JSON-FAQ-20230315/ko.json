{
    "JSON-Advantages-011": "JSON은 일반적으로 XML보다 더 작고 분석 속도가 빠르므로 대역폭과 속도가 중요한 클라이언트-서버 통신에 이상적입니다.",
    "JSON-Basics-001": "JSON이란 무엇입니까?",
    "JSON-Beautifier-Online": "온라인 JSON 포맷터 및 유효성 검사기",
    "JSON-Beautify-007": "JSON 미화란 무엇입니까?",
    "JSON-Beautify-Def-008": "JSON 미화는 JSON 데이터를 적절한 들여쓰기 및 줄 바꿈을 사용하여 사람이 더 쉽게 읽을 수 있는 형식으로 지정하여 분석 및 디버깅을 더 쉽게 만드는 프로세스를 말합니다.",
    "JSON-Beautify-Example-009": "이전: '{\\\"키\\\":\\\"값\\\",\\\"배열\\\":[1,2,3]}', 이후: '{\\n \\\"키\\\": \\\"값\\\", \\n \\\"배열\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON(JavaScript Object Notation)은 사람이 쉽게 읽고 쓸 수 있고 기계가 쉽게 구문 분석하고 생성할 수 있는 경량의 텍스트 기반 데이터 교환 형식입니다.",
    "JSON-Path-013": "JSON 경로란 무엇입니까?",
    "JSON-Path-Example-015": "$.store.book[0].title은 books 배열이 포함된 상점이 있는 JSON 객체의 첫 번째 책 제목을 선택합니다.",
    "JSON-Path-Explanation-014": "JSON Path는 XML용 XPath와 유사한 쿼리 언어로, 경로와 같은 표기법을 사용하여 JSON 문서에서 데이터를 추출할 수 있습니다.",
    "JSON-Path-Guide": "JSONPath - JSON용 XPath",
    "JSON-Purpose-003": "이는 XML 대신 서버와 웹 애플리케이션 간에 데이터를 전송하는 데 주로 사용되며 `JSON.parse()` 및 `JSON.stringify()` 메소드를 통해 JavaScript에서 기본 지원됩니다.",
    "JSON-Syntax-004": "JSON의 기본 구문은 무엇입니까?",
    "JSON-Syntax-Reference": "JSON 기반 MDN 웹 문서",
    "JSON-Value-Types-006": "값은 문자열, 숫자, 부울, 배열(대괄호로 묶음)일 수 있습니다.",
    "JSON-vs-XML-010": "JSON은 XML과 어떻게 비교됩니까?",
    "JSON-vs-XML-Article": "JSON과 XML 비교",
    "XML-Advantages-012": "XML은 더 많은 구조 유연성을 제공하고 네임스페이스를 지원하므로 복잡한 문서 구조와 시스템 간 상호 운용성에 도움이 될 수 있습니다."
}
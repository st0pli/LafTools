{
    "c1p4b": "然后，每个十进制数都会转换为由五个 Base85 字符组成的唯一序列。如果末尾剩余的字节少于四个字节，则可能会应用填充。",
    "d7w2e": "Base85 的工作原理是将输入数据分为四个字节的组，并将每个组转换为 0 到 2^32-1 之间的十进制数。",
    "f9t1z": "Base85 最初开发的目的是为了有效地表示 PostScript 文档中的二进制数据，以获得更好的压缩率。",
    "g3h5s": "Base85 是如何工作的？",
    "j5s7r": "如何在 JavaScript 中使用 Base85 进行编码/解码？",
    "k2em5e": "这会导致相同数量的输入数据的输出字符串更短，这在最小化大小至关重要的场景中非常有用。",
    "p8eq9n": "您可以使用“base85”或“ascii85”等库在 JavaScript 中进行 Base85 编码和解码。",
    "q2n3r": "如今，它被用于空间效率和可读性至关重要的各种应用中，例如 PDF 文档和某些网络协议。",
    "r9qn8v": "Base85 的主要优点是由于更大的字符集（85 vs. Base64 中的 64 或 Base32 中的 32）而提高了空间效率。",
    "u1i2b": "与 Base64 或 Base32 相比，使用 Base85 有何优点？",
    "v4k6r": "与 Base64 或 Base32 相比，它通过使用更大的字符集将数据编码为更紧凑的形式。",
    "w1x4k": "是的，存在多种变体，包括 Ascii85（用于 PostScript 和 PDF）、Z85 (ZeroMQ) 和 UUencode（较旧的格式）。每个都有稍微不同的字符集和规则。",
    "x9n1b": "Base85 是一种使用一组 85 个可打印 ASCII 字符表示二进制数据的编码方案。",
    "y6m8k": "为什么要创建 Base85？",
    "z2t7m": "什么是Base85？",
    "z5m6t": "用法示例：`const base85 = require('base85'); const 编码 = base85.encode('your-data'); const 解码 = base85.decode(编码);`",
    "z9t7p": "Base85 有特定的变体吗？"
}
{
    "CP-Advantage-Career-014": "Leren programmeren opent carrièremogelijkheden in verschillende sectoren en stelt je in staat innovatieve oplossingen te ontwikkelen, taken te automatiseren en complexe systemen te begrijpen.",
    "CP-Advantages-013": "Wat zijn de voordelen van het leren programmeren van computers?",
    "CP-Basics-001": "Wat is computerprogrammering?",
    "CP-Def-002": "Computerprogrammering omvat het schrijven van instructies, of code, in een programmeertaal om computers te instrueren hoe ze specifieke taken moeten uitvoeren.",
    "CP-History-004": "Wat is de geschiedenis van computerprogrammering?",
    "CP-History-Origin-005": "De eerste programmeerbare machines dateren uit het werk van Ada Lovelace aan de Analytical Engine van Charles Babbage in de 19e eeuw. Het moderne programmeren kwam echter van de grond met de uitvinding van de eerste elektronische computer voor algemeen gebruik, ENIAC, in de jaren veertig.",
    "CP-Lang-Choice-009": "De taalkeuze hangt af van factoren zoals projectvereisten, steun van de gemeenschap, leergemak en prestatiebehoeften.",
    "CP-Language-Evolution-006": "Sindsdien zijn de programmeertalen geëvolueerd van machinecode naar assembler, vervolgens naar talen op hoog niveau zoals FORTRAN, COBOL, C, en nu naar moderne talen zoals Python, JavaScript en Rust.",
    "CP-Languages-007": "Wat zijn enkele populaire programmeertalen?",
    "CP-Languages-List-008": "Populaire programmeertalen zijn onder meer Java, Python, JavaScript, C++, C#, Swift, Go, PHP, Ruby en Kotlin. Elk heeft zijn eigen sterke punten en gebruiksscenario's, bijvoorbeeld Python voor datawetenschap, JavaScript voor webontwikkeling en C++ voor systeemprogrammering.",
    "CP-Process-010": "Wat is het proces van computerprogrammering?",
    "CP-Process-Explanation-011": "Programmeren omvat doorgaans planning (het probleem definiëren en de oplossing ontwerpen), coderen (broncode schrijven in een gekozen taal), testen (debuggen en functionaliteit verifiëren) en onderhoud (het programma in de loop van de tijd bijwerken en verbeteren).",
    "CP-Purpose-003": "Programmeurs creëren algoritmen, lossen problemen op en bouwen softwareapplicaties die processen kunnen automatiseren, gegevens kunnen manipuleren en kunnen communiceren met gebruikers of andere systemen.",
    "CP-SDLC-012": "Dit is vaak gestructureerd binnen een Software Development Life Cycle (SDLC), die extra fasen omvat, zoals analyse van vereisten, ontwerp, implementatie en testen van gebruikersacceptatie.",
    "CP-Skillset-015": "Het verbetert ook het logisch denken, de probleemoplossende vaardigheden en het aanpassingsvermogen aan nieuwe technologieën, waardoor iemand veelzijdiger wordt in het digitale tijdperk.",
    "HistOfProg-Wikipedia": "Geschiedenis van programmeertalen - Wikipedia",
    "SDLC-Wikipedia": "Levenscyclus van softwareontwikkeling - Wikipedia",
    "TIOBE-Index": "TIOBE Index - Het softwarekwaliteitsbedrijf"
}
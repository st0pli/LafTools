{
    "Diff-XML-JSON-Article": "Unterschied zwischen XML und JSON",
    "MDN-XML-Syntax": "MDN-Webdokumente – XML-Syntax",
    "W3Schools-XML-Validation": "W3Schools – XML-Validierung",
    "XML-Advantage-Readable-018": "Seine für Menschen lesbare Natur ermöglicht eine einfache Inspektion und Fehlerbehebung, und die Möglichkeit, benutzerdefinierte Strukturen zu definieren, macht es flexibel für mehrere Anwendungsfälle.",
    "XML-Advantage-Standardized-017": "XML ist ein weit verbreiteter Standard, der es mit verschiedenen Plattformen und Systemen kompatibel macht und die Interoperabilität und den Datenaustausch fördert.",
    "XML-Advantages-016": "Welche Vorteile bietet die Verwendung von XML?",
    "XML-Attributes-006": "Elemente können Attribute haben, die zusätzliche Informationen über das Element innerhalb des öffnenden Tags bereitstellen, z. B. {0}",
    "XML-Basics-001": "Was ist XML?",
    "XML-Def-002": "XML (eXtensible Markup Language) ist eine Auszeichnungssprache, die eine Reihe von Regeln zum Kodieren von Dokumenten in einem Format definiert, das sowohl für Menschen als auch für Maschinen lesbar ist.",
    "XML-Disadvantage-Size-020": "XML kann relativ ausführlich sein, was im Vergleich zu Alternativen wie JSON zu größeren Dateigrößen führt, was sich auf die Übertragungsgeschwindigkeit und den Speicherbedarf auswirkt.",
    "XML-Disadvantages-019": "Welche Nachteile hat die Verwendung von XML?",
    "XML-JSON-Diff-Structure-014": "XML verwendet ausführliche, hierarchische Tags für die Struktur, während JSON auf Schlüssel-Wert-Paaren und Arrays basiert. Beispiel: XML {0} vs. JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML hat eine strengere Syntax mit schließenden Tags und Attributen, während die Syntax von JSON einfacher ist und näher an der JavaScript-Objektnotation liegt. JSON gilt im Allgemeinen als einfacher zu analysieren und über das Web zu übertragen.",
    "XML-JSON-Difference-013": "Was ist der Unterschied zwischen XML und JSON?",
    "XML-Nesting-007": "Wie funktioniert die Verschachtelung in XML?",
    "XML-Nesting-Example-009": "Beispielsweise stellt „<book><title>My Book Title</title><author>John Doe</author></book>“ ein Buch dar, dessen Titel und Autor als verschachtelte Elemente vorliegen.",
    "XML-Nesting-Explanation-008": "In XML können Elemente ineinander verschachtelt werden, um hierarchische Beziehungen darzustellen. Die untergeordneten Elemente werden zwischen den öffnenden und schließenden Tags ihres übergeordneten Elements platziert.",
    "XML-Processing-Speed-021": "Das Parsen und Generieren von XML kann aufgrund der strengen Syntax und der Notwendigkeit einer Validierung langsamer sein, insbesondere beim Umgang mit komplexen Dokumenten.",
    "XML-Purpose-003": "Es ist für die Übertragung von Daten konzipiert und nicht für die Anzeige von Daten wie HTML, sodass es als gemeinsames Format für den Austausch strukturierter Informationen über verschiedene Plattformen und Anwendungen hinweg verwendet werden kann.",
    "XML-Syntax-004": "Was ist die grundlegende Syntax von XML?",
    "XML-Syntax-Example-005": "Ein einfaches XML-Dokument besteht aus Elementen in einer baumartigen Struktur. Jedes Element beginnt mit einem Tag in spitzen Klammern (<element>) und endet mit einem schließenden Tag (</element>).",
    "XML-Validation-010": "Was ist XML-Validierung und wie funktioniert sie?",
    "XML-Validation-Def-011": "Durch die XML-Validierung wird sichergestellt, dass ein XML-Dokument einem bestimmten Regelsatz entspricht, der in einer Dokumenttypdefinition (DTD) oder einem XML-Schema (XSD) definiert ist.",
    "XML-Validation-Process-012": "Validatoren prüfen, ob alle erforderlichen Elemente und Attribute vorhanden sind, validieren die Datentypen und erzwingen alle im Schema angegebenen Einschränkungen, bevor sie das Dokument verarbeiten."
}
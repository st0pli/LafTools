// LafTools - The Leading All-In-One ToolBox for Programmers.
//
// Date: Sun, 14 Jan 2024
// Second Author: Ryan Laf
// Description:
// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**
 * THIS FILE IS AUTOMATICALLY GENERATED BY src/core/config/scripts/generateConfig.mjs
 *
 * @author n1474335 [n1474335@gmail.com]
 * @copyright Crown Copyright 2023
 * @license Apache-2.0
 */
import A1Z26CipherDecode from "../../operations/A1Z26CipherDecode.mjs";
import A1Z26CipherEncode from "../../operations/A1Z26CipherEncode.mjs";
import AESDecrypt from "../../operations/AESDecrypt.mjs";
import AESEncrypt from "../../operations/AESEncrypt.mjs";
import AESKeyUnwrap from "../../operations/AESKeyUnwrap.mjs";
import AESKeyWrap from "../../operations/AESKeyWrap.mjs";
import AffineCipherDecode from "../../operations/AffineCipherDecode.mjs";
import AffineCipherEncode from "../../operations/AffineCipherEncode.mjs";
import AtbashCipher from "../../operations/AtbashCipher.mjs";
import BifidCipherDecode from "../../operations/BifidCipherDecode.mjs";
import BifidCipherEncode from "../../operations/BifidCipherEncode.mjs";
import BlowfishDecrypt from "../../operations/BlowfishDecrypt.mjs";
import BlowfishEncrypt from "../../operations/BlowfishEncrypt.mjs";
import CaesarBoxCipher from "../../operations/CaesarBoxCipher.mjs";
import CetaceanCipherDecode from "../../operations/CetaceanCipherDecode.mjs";
import CetaceanCipherEncode from "../../operations/CetaceanCipherEncode.mjs";
import DESDecrypt from "../../operations/DESDecrypt.mjs";
import DESEncrypt from "../../operations/DESEncrypt.mjs";
import DeriveEVPKey from "../../operations/DeriveEVPKey.mjs";
import DerivePBKDF2Key from "../../operations/DerivePBKDF2Key.mjs";
import GOSTDecrypt from "../../operations/GOSTDecrypt.mjs";
import GOSTEncrypt from "../../operations/GOSTEncrypt.mjs";
import GOSTKeyUnwrap from "../../operations/GOSTKeyUnwrap.mjs";
import GOSTKeyWrap from "../../operations/GOSTKeyWrap.mjs";
import GOSTSign from "../../operations/GOSTSign.mjs";
import GOSTVerify from "../../operations/GOSTVerify.mjs";
import GenerateRSAKeyPair from "../../operations/GenerateRSAKeyPair.mjs";
import PseudoRandomNumberGenerator from "../../operations/PseudoRandomNumberGenerator.mjs";
import RC2Decrypt from "../../operations/RC2Decrypt.mjs";
import RC2Encrypt from "../../operations/RC2Encrypt.mjs";
import RC4 from "../../operations/RC4.mjs";
import RC4Drop from "../../operations/RC4Drop.mjs";
import RSADecrypt from "../../operations/RSADecrypt.mjs";
import RSAEncrypt from "../../operations/RSAEncrypt.mjs";
import RSASign from "../../operations/RSASign.mjs";
import RSAVerify from "../../operations/RSAVerify.mjs";
import Rabbit from "../../operations/Rabbit.mjs";
import RailFenceCipherDecode from "../../operations/RailFenceCipherDecode.mjs";
import RailFenceCipherEncode from "../../operations/RailFenceCipherEncode.mjs";
import SM4Decrypt from "../../operations/SM4Decrypt.mjs";
import SM4Encrypt from "../../operations/SM4Encrypt.mjs";
import TripleDESDecrypt from "../../operations/TripleDESDecrypt.mjs";
import TripleDESEncrypt from "../../operations/TripleDESEncrypt.mjs";
import VigenèreDecode from "../../operations/VigenèreDecode.mjs";
import VigenèreEncode from "../../operations/VigenèreEncode.mjs";

const OpModules = typeof self === "undefined" ? {} : self.OpModules || {};

OpModules.Ciphers = {
  "A1Z26 Cipher Decode": A1Z26CipherDecode,
  "A1Z26 Cipher Encode": A1Z26CipherEncode,
  "AES Decrypt": AESDecrypt,
  "AES Encrypt": AESEncrypt,
  "AES Key Unwrap": AESKeyUnwrap,
  "AES Key Wrap": AESKeyWrap,
  "Affine Cipher Decode": AffineCipherDecode,
  "Affine Cipher Encode": AffineCipherEncode,
  "Atbash Cipher": AtbashCipher,
  "Bifid Cipher Decode": BifidCipherDecode,
  "Bifid Cipher Encode": BifidCipherEncode,
  "Blowfish Decrypt": BlowfishDecrypt,
  "Blowfish Encrypt": BlowfishEncrypt,
  "Caesar Box Cipher": CaesarBoxCipher,
  "Cetacean Cipher Decode": CetaceanCipherDecode,
  "Cetacean Cipher Encode": CetaceanCipherEncode,
  "DES Decrypt": DESDecrypt,
  "DES Encrypt": DESEncrypt,
  "Derive EVP key": DeriveEVPKey,
  "Derive PBKDF2 key": DerivePBKDF2Key,
  "GOST Decrypt": GOSTDecrypt,
  "GOST Encrypt": GOSTEncrypt,
  "GOST Key Unwrap": GOSTKeyUnwrap,
  "GOST Key Wrap": GOSTKeyWrap,
  "GOST Sign": GOSTSign,
  "GOST Verify": GOSTVerify,
  "Generate RSA Key Pair": GenerateRSAKeyPair,
  "Pseudo-Random Number Generator": PseudoRandomNumberGenerator,
  "RC2 Decrypt": RC2Decrypt,
  "RC2 Encrypt": RC2Encrypt,
  RC4: RC4,
  "RC4 Drop": RC4Drop,
  "RSA Decrypt": RSADecrypt,
  "RSA Encrypt": RSAEncrypt,
  "RSA Sign": RSASign,
  "RSA Verify": RSAVerify,
  Rabbit: Rabbit,
  "Rail Fence Cipher Decode": RailFenceCipherDecode,
  "Rail Fence Cipher Encode": RailFenceCipherEncode,
  "SM4 Decrypt": SM4Decrypt,
  "SM4 Encrypt": SM4Encrypt,
  "Triple DES Decrypt": TripleDESDecrypt,
  "Triple DES Encrypt": TripleDESEncrypt,
  "Vigenère Decode": VigenèreDecode,
  "Vigenère Encode": VigenèreEncode,
};

export default OpModules;

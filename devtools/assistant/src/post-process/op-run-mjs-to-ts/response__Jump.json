{
  "result": "Below is the TypeScript version of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `Jump` class, following the pattern of the provided example.\n2. A description of the code's function and purpose has been added to the top comment.\n3. Natural text has been wrapped with the `Dot` function.\n4. Import statements remain unchanged.\n5. No code has been omitted.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The Jump class is a type of operation that allows for navigating forwards or backwards within a recipe to a specified label. It is used for flow control in a sequence of operations.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport { getLabelIndex } from \"../lib/FlowControl.mjs\";\n\n/**\n * Jump operation\n */\nclass Jump extends Operation {\n  /**\n   * Jump constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"jump.name\", \"Jump\");\n    this.flowControl = true;\n    this.module = \"Default\";\n    this.description = Dot(\"jump.desc\", \"Jump forwards or backwards to the specified Label\");\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [\n      {\n        name: Dot(\"jump.arg.labelName\", \"Label name\"),\n        type: \"string\",\n        value: \"\",\n      },\n      {\n        name: Dot(\"jump.arg.maxJumps\", \"Maximum jumps (if jumping backwards)\"),\n        type: \"number\",\n        value: 10,\n      },\n    ];\n  }\n\n  /**\n   * Retrieves the operational details for the Jump operation.\n   */\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Default\",\n        \"description\": Dot(\"jump.config.desc\", \"Allows for navigation within a recipe to a specified label.\"),\n        \"inputType\": \"string\",\n        \"outputType\": \"string\",\n        \"flowControl\": true,\n        \"manualBake\": false,\n        \"args\": this.args,\n      },\n      infoURL: '',\n      nousenouseID: 'jump',\n      optName: Dot(\"jump.optName\", \"Perform {0}\", this.name),\n      optDescription: Dot(\n        \"jump.optDesc\",\n        \"This operation allows for jumping to a specified label, either forwards or backwards, within the recipe.\"\n      ),\n      exampleInput: \"\", // Fill it if possible\n      exampleOutput: \"\", // Fill it if possible\n    }\n  }\n\n  /**\n   * @param {Object} state - The current state of the recipe.\n   * @param {number} state.progress - The current position in the recipe.\n   * @param {Dish} state.dish - The Dish being operated on.\n   * @param {Operation[]} state.opList - The list of operations in the recipe.\n   * @param {number} state.numJumps - The number of jumps taken so far.\n   * @returns {Object} The updated state of the recipe.\n   */\n  run(state) {\n    const [label, maxJumps] = state.opList[state.progress].ingValues;\n    const jmpIndex = getLabelIndex(label, state);\n\n    if (state.numJumps >= maxJumps || jmpIndex === -1) {\n      state.numJumps = 0;\n      return state;\n    }\n\n    state.progress = jmpIndex;\n    state.numJumps++;\n    return state;\n  }\n}\n\nexport default Jump;\n```\n\nPlease note that the `exampleInput` and `exampleOutput` fields have been left empty, as without specific context, it's not possible to provide meaningful examples for this operation. The `infoURL` has also been left empty, as there is no information provided to fill this with. If there is a relevant URL that should be linked, it should be added there.",
  "response": {
    "choices": [
      {
        "finish_reason": "stop",
        "index": 0,
        "message": {
          "content": "Below is the TypeScript version of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `Jump` class, following the pattern of the provided example.\n2. A description of the code's function and purpose has been added to the top comment.\n3. Natural text has been wrapped with the `Dot` function.\n4. Import statements remain unchanged.\n5. No code has been omitted.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The Jump class is a type of operation that allows for navigating forwards or backwards within a recipe to a specified label. It is used for flow control in a sequence of operations.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport { getLabelIndex } from \"../lib/FlowControl.mjs\";\n\n/**\n * Jump operation\n */\nclass Jump extends Operation {\n  /**\n   * Jump constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"jump.name\", \"Jump\");\n    this.flowControl = true;\n    this.module = \"Default\";\n    this.description = Dot(\"jump.desc\", \"Jump forwards or backwards to the specified Label\");\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [\n      {\n        name: Dot(\"jump.arg.labelName\", \"Label name\"),\n        type: \"string\",\n        value: \"\",\n      },\n      {\n        name: Dot(\"jump.arg.maxJumps\", \"Maximum jumps (if jumping backwards)\"),\n        type: \"number\",\n        value: 10,\n      },\n    ];\n  }\n\n  /**\n   * Retrieves the operational details for the Jump operation.\n   */\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Default\",\n        \"description\": Dot(\"jump.config.desc\", \"Allows for navigation within a recipe to a specified label.\"),\n        \"inputType\": \"string\",\n        \"outputType\": \"string\",\n        \"flowControl\": true,\n        \"manualBake\": false,\n        \"args\": this.args,\n      },\n      infoURL: '',\n      nousenouseID: 'jump',\n      optName: Dot(\"jump.optName\", \"Perform {0}\", this.name),\n      optDescription: Dot(\n        \"jump.optDesc\",\n        \"This operation allows for jumping to a specified label, either forwards or backwards, within the recipe.\"\n      ),\n      exampleInput: \"\", // Fill it if possible\n      exampleOutput: \"\", // Fill it if possible\n    }\n  }\n\n  /**\n   * @param {Object} state - The current state of the recipe.\n   * @param {number} state.progress - The current position in the recipe.\n   * @param {Dish} state.dish - The Dish being operated on.\n   * @param {Operation[]} state.opList - The list of operations in the recipe.\n   * @param {number} state.numJumps - The number of jumps taken so far.\n   * @returns {Object} The updated state of the recipe.\n   */\n  run(state) {\n    const [label, maxJumps] = state.opList[state.progress].ingValues;\n    const jmpIndex = getLabelIndex(label, state);\n\n    if (state.numJumps >= maxJumps || jmpIndex === -1) {\n      state.numJumps = 0;\n      return state;\n    }\n\n    state.progress = jmpIndex;\n    state.numJumps++;\n    return state;\n  }\n}\n\nexport default Jump;\n```\n\nPlease note that the `exampleInput` and `exampleOutput` fields have been left empty, as without specific context, it's not possible to provide meaningful examples for this operation. The `infoURL` has also been left empty, as there is no information provided to fill this with. If there is a relevant URL that should be linked, it should be added there.",
          "role": "assistant"
        }
      }
    ],
    "created": 1713890797,
    "id": "8596355946177796871",
    "model": "glm-4",
    "request_id": "8596355946177796871",
    "usage": {
      "completion_tokens": 857,
      "prompt_tokens": 1020,
      "total_tokens": 1877
    }
  }
}
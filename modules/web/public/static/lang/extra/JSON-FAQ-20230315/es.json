{
    "JSON-Advantages-011": "JSON es generalmente más pequeño y más rápido de analizar que XML, lo que lo hace ideal para la comunicación cliente-servidor donde el ancho de banda y la velocidad son cruciales.",
    "JSON-Basics-001": "¿Qué es JSON?",
    "JSON-Beautify-007": "¿Qué es el embellecimiento JSON?",
    "JSON-Beautify-Def-008": "El embellecimiento de JSON se refiere al proceso de formatear datos JSON en una forma más legible para humanos con sangría y saltos de línea adecuados, lo que facilita su análisis y depuración.",
    "JSON-Beautify-Example-009": "Antes: '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}', Después: '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"matriz\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) es un formato ligero de intercambio de datos basado en texto que es fácil de leer y escribir para los humanos, y fácil de analizar y generar para las máquinas.",
    "JSON-JavaScript-Support-020": "JSON es compatible de forma nativa con JavaScript a través de los objetos globales `JSON.parse()` y `JSON.stringify()`. Cualquier JSON válido también es un objeto o matriz literal de JavaScript válido, lo que permite una conversión perfecta entre los dos formatos.",
    "JSON-JavaScript-Usage-021": "En el desarrollo web, JSON se usa comúnmente para solicitudes AJAX, renderizado del lado del servidor y almacenamiento de datos (por ejemplo, almacenamiento local o IndexedDB).",
    "JSON-Linting-022": "¿Qué es el linting JSON y por qué es importante?",
    "JSON-Linting-Benefit-024": "Linters puede evitar errores de tiempo de ejecución debido a JSON no válido, lo que garantiza un intercambio de datos fluido y ahorra tiempo en la depuración de posibles problemas.",
    "JSON-Linting-Explanation-023": "JSON linting es el proceso de verificar si un documento JSON cumple con la especificación JSON. Ayuda a identificar errores de sintaxis antes de intentar analizar los datos.",
    "JSON-Path-013": "¿Qué es la ruta JSON?",
    "JSON-Path-Example-015": "$.store.book[0].title selecciona el título del primer libro en un objeto JSON con una tienda que contiene una matriz de libros.",
    "JSON-Path-Explanation-014": "JSON Path es un lenguaje de consulta similar a XPath para XML, que le permite extraer datos de documentos JSON utilizando una notación similar a una ruta.",
    "JSON-Path-Guide": "JSONPath - XPath para JSON",
    "JSON-Purpose-003": "Se utiliza principalmente para transmitir datos entre un servidor y una aplicación web como alternativa a XML, con soporte nativo en JavaScript a través de los métodos `JSON.parse()` y `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "¿Cómo encaja JSON en JavaScript?",
    "JSON-Security-025": "¿Cuáles son algunas preocupaciones de seguridad al trabajar con JSON?",
    "JSON-Security-Impact-026": "Los posibles riesgos de seguridad incluyen ataques de inyección JSON, en los que se envían datos maliciosos que podrían provocar un comportamiento no deseado cuando se analizan/ejecutan.",
    "JSON-Security-Prevention-027": "Para mitigar estos riesgos, siempre desinfecte la entrada del usuario y utilice bibliotecas que analicen JSON de forma segura sin ejecutar su contenido (como JSON.parse() integrado en JavaScript). Además, evite usar eval() para analizar JSON.",
    "JSON-Serialization-016": "¿Qué es la serialización y deserialización JSON?",
    "JSON-Serialization-Def-017": "La serialización JSON es el proceso de convertir un objeto JavaScript en una cadena JSON, mientras que la deserialización es lo contrario: convertir una cadena JSON nuevamente en un objeto JavaScript.",
    "JSON-Serialization-W3Schools": "Serialización JSON en W3Schools",
    "JSON-Syntax-004": "¿Cuál es la sintaxis básica de JSON?",
    "JSON-Syntax-Reference": "Documentos web de MDN en JSON",
    "JSON-Value-Types-006": "Los valores pueden ser cadenas, números, booleanos, matrices (entre corchetes",
    "JSON-vs-XML-010": "¿Cómo se compara JSON con XML?",
    "JSON-vs-XML-Article": "Comparando JSON y XML",
    "MDN-JSON-in-JavaScript": "Documentos web de MDN: trabajar con JSON",
    "OWASP-JSON-Injection": "OWASP - Inyección JSON",
    "XML-Advantages-012": "XML proporciona más flexibilidad estructural y admite espacios de nombres, lo que puede resultar beneficioso para estructuras de documentos complejas y la interoperabilidad entre sistemas."
}
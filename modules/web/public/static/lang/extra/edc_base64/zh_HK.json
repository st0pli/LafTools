{
    "123e4567": "什麼是 Base64？",
    "1a2b3c4d": "為什麼要使用 Base64？",
    "23fgh456": "Base64 的歷史",
    "2bcde3fg": "Base64的缺點",
    "34wxyz56": "如何在 JavaScript 中進行 Base64 編碼/解碼？",
    "4hijk5lm": "大小增加：編碼資料比原始二進位資料大約 33%。",
    "5e6f7g8h": "當二進位資料需要透過基於文字的協定（例如電子郵件或 JSON）傳輸或嵌入僅允許文字的位置時，可以使用 Base64。",
    "6nopqrst": "無加密：Base64不是一種加密方法；它很容易被解碼並且不提供任何安全性。",
    "78abcdef": "JavaScript 提供了內建函數，例如 btoa() 和 atob() 分別用於 Base64 編碼和解碼。",
    "78ijk9lm": "Base64 首次在 RFC 1421 (1993) 中定義，後來在 RFC 4648 (2006) 中標準化。",
    "9i0j1k2l": "它也用於將小圖像作為資料 URL 直接嵌入到 HTML 或 CSS 中。",
    "ab9c0d1e": "主要操作包括編碼（將二進位轉換為 Base64）和解碼（將 Base64 轉換回二進位）。",
    "abc12345": "Base64 是一種將二進位資料表示為 ASCII 字元序列的編碼方案。",
    "abcdef12": "Base64 是如何運作的？",
    "bcdef01a": "Base64 的工作原理是將二進位資料分成 6 位元組，並將每個組映射到 64 個字元的字母表 (A-Za-z0-9+/) 中的特定字元。",
    "cbaq54321": "不，Base64 不是一種壓縮技術，它僅更改資料的表示形式，而不更改其大小。",
    "cdefg234": "最後添加填充字元（=）以確保編碼資料長度為4個字元的倍數。",
    "efg45678": "與Base32的比較",
    "efghi678": "此變體通常用於檔案名稱、URL 或必須避免特殊字元的情況。",
    "fghi6789": "它用於傳輸或儲存基於文字格式的二進位文件，確保跨各種系統的兼容性。",
    "hij90klm": "Base32 使用較小的字母表 (A-Z2-7)，產生更長但更容易閱讀的字串。",
    "mno34567": "Base64的優點",
    "mnoijklm": "還有其他 BaseXX 編碼嗎？",
    "n0pqrstu": "Base64 的使用範例",
    "nopqrs01": "雖然 Base64 針對緊湊性進行了最佳化，但當最小化輸入錯誤（例如手動輸入）至關重要時，會選擇 Base32。",
    "pqrs890t": "通用相容性：Base64 得到所有主要程式語言的廣泛認可和支援。",
    "qrstuvwx": "是的，除了Base64和Base32之外，還有Base16（十六進位）、Base58和Base85，每種都是針對不同的場景而設計的。",
    "tuv23456": "Base64 URL 安全變體",
    "u7vwx8yz": "常見的 Base64 操作",
    "uvwxyza1": "無資料遺失：由於這是一個可逆過程，因此 Base64 編碼不會導致任何資訊遺失。",
    "vwx1yza2": "一個範例是對圖像檔案進行編碼以將其嵌入 HTML <img> 標籤中：",
    "wxyzabcd": "Base64 有一個 URL 安全版本，它將“+”替換為“-”，將“/”替換為“_”，並省略填充“=”，使其適合 Web URL。",
    "zyx98765": "Base64可以用來壓縮嗎？"
}
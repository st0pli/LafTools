{
    "a4s6x": "Как работает Base32?",
    "a8b7z": "Таким образом, заполнение необходимо только в том случае, если последняя группа кодируемых битов не делится на 40 бит (поскольку 8 символов Base32 представляют 40 бит). Заполнение будет состоять из нуля до шести символов «=» в конце закодированной строки.",
    "b8g2k": "Сценарии использования Base32",
    "c0v2p": "Общие операции с Base32",
    "d1x7v": "Другой пример — Git, где хешированные объекты иногда сохраняются в формате Base32, чтобы избежать проблем с окончаниями строк и ограничениями имен файлов. Кроме того, HashiCorp Vault использует Base32 для получения ключей.",
    "d9w7m": "Более того, поскольку он использует только прописные буквы, он не может использовать все возможные комбинации чувствительности к регистру в качестве дополнительной меры безопасности, как это иногда делает Base64 со свертыванием регистра во время декодирования.",
    "e5c7r": "Base32 — это схема кодирования двоичного текста в текст, которая представляет данные в строке ASCII, используя подмножество из 32 символов. Он разработан так, чтобы быть удобочитаемым и безопасным для URL-адресов.",
    "f0q4w": "Одним из популярных сценариев использования является создание секретных ключей для двухфакторной аутентификации (2FA), где такие службы, как Google Authenticator и Yubikey, используют секреты в кодировке Base32.",
    "f5a0s": "Кроме того, Base32 выдает более длинные выходные данные, но может быть более подходящим для определенных приложений, таких как имена файлов, из-за отсутствия специальных символов, которые могут противоречить правилам файловой системы.",
    "g8r3e": "Основным недостатком Base32 является его относительно низкая эффективность использования пространства; он расширяет входные данные примерно на 25% больше, чем Base64. Это означает, что для того же объема закодированных данных требуется больше места или пропускной способности.",
    "h4e1b": "Это также полезно в ситуациях, когда буквенно-цифровые строки с учетом регистра легче обрабатывать, чем шестнадцатеричные или base64, которые могут содержать небуквенно-цифровые символы, которые могут вызвать проблемы в определенных контекстах (например, URL-адреса или имена файлов).",
    "h9j3m": "Заполнение в Base32",
    "i9o7k": "Преимущества Base32 перед Base64",
    "j1b5k": "Наиболее распространенные операции с использованием Base32 включают кодирование двоичных данных в строку Base32 и декодирование строки Base32 обратно в исходный двоичный формат.",
    "k7g0n": "В Base32 каждые 5 бит входных данных сопоставляются с одним из 32 символов из набора «ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=».",
    "l1p9z": "Что такое Base32?",
    "m6d8b": "Каждое 5-битное значение представлено одним символом, что позволяет эффективно кодировать и декодировать системы, предпочитающие работать с октетами (8-битными единицами).",
    "n3e7r": "История Base32",
    "p9s5t": "Base32 был разработан Дугласом Крокфордом, известным своим вкладом в JavaScript, в 2001 году. Он был создан как более надежная альтернатива существующим кодировкам, таким как Base64, особенно для ситуаций, требующих текстового представления двоичных данных.",
    "q2w5m": "Цель использования Base32?",
    "r6tq9z": "<b>Пример:</b> Чтобы закодировать «TEST12345» в Base32, вы можете использовать такие библиотеки, как base32-encode в Node.js, или встроенные функции в других языках, например base64.b32encode Python.",
    "s5t0n": "Заполнение в Base32 включает добавление символов «=\", чтобы гарантировать, что окончательный фрагмент закодированных данных по-прежнему будет содержать бит, кратный 8. Однако, в отличие от Base64, заполнение Base32 минимально, поскольку каждый символ Base32 уже кодирует 5 бит.",
    "t8z1v": "Если в конце осталось недостаточно битов для заполнения полной 5-битной группы, добавляются символы заполнения «=». Например, для байта требуется два символа Base32, а для 3-байтовой последовательности потребуется четыре символа Base32.",
    "u3j9p": "Base32 часто используется, когда вам нужно компактное текстовое представление двоичных данных, которое можно напечатать или распечатать без потери информации, например, при проверке целостности файлов, геокэшинге и генерации безопасных паролей.",
    "y6t1n": "Недостатки Base32",
    "z2x8c": "В Base32 меньше визуальных двусмысленностей, поскольку в нем используются только заглавные буквы и цифры, что упрощает чтение и расшифровку вручную или по телефону по сравнению с Base64, который включает буквы «+», «/» и строчные буквы.",
    "z6m1c": "Более поздние варианты, такие как z-base-32, были введены для повышения удобства использования, заменяя некоторые менее запоминающиеся символы другими, но исходная спецификация Крокфорда широко используется и сегодня."
}
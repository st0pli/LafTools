{
    "MD4-Advantages-011": "MD4를 사용하면 어떤 이점이 있나요?",
    "MD4-AlgorithmDetails-010": "MD4 알고리즘 세부정보",
    "MD4-Applications-018": "MD4를 사용했거나 여전히 사용하고 있는 응용 프로그램은 무엇입니까?",
    "MD4-Breakdown-016": "알고리즘의 설계 결함으로 인해 쉬운 해시 충돌과 심지어 부분적인 사전 이미지 공격까지 허용하는 실질적인 공격이 발생하여 MD4가 오늘날 보안 암호화 사용 사례에 적합하지 않게 되었습니다.",
    "MD4-CollisionSecurity-015": "MD4에는 충돌 공격에 대한 취약성을 포함하여 여러 가지 암호화 약점이 있습니다. 즉, 두 개의 서로 다른 입력이 동일한 해시 출력을 생성할 수 있으므로 충돌 저항이나 강력한 메시지 무결성이 필요한 애플리케이션에는 안전하지 않게 됩니다.",
    "MD4-Def-002": "MD4(Message-Digest Algorithm 4)는 Ronald Rivest가 1990년에 설계한 암호화 해시 함수입니다. 이는 주어진 입력 메시지에 대해 128비트 해시 값을 생성합니다.",
    "MD4-DigitalSignature-Risks-021": "디지털 서명에 MD4를 사용할 때의 위험",
    "MD4-Disadvantages-014": "MD4의 단점과 보안 문제는 무엇입니까?",
    "MD4-FAQ-001": "MD4란 무엇입니까?",
    "MD4-HistoricalUse-019": "역사적으로 MD4는 디지털 서명, 파일 무결성 검사 및 소프트웨어 업데이트에 사용되었습니다. 그러나 취약점으로 인해 이러한 애플리케이션은 대체로 SHA-256 및 SHA-3과 같은 보다 안전한 대안으로 전환되었습니다.",
    "MD4-History-004": "MD4는 어떻게 개발되었으며, 그 역사적 중요성은 무엇입니까?",
    "MD4-Implementation-013": "다양한 플랫폼과 언어에 걸쳐 광범위하게 구현되고 표준화되어 기존 시스템에 쉽게 통합될 수 있지만, 이러한 이점은 현대 상황에서 보안 문제보다 더 중요합니다.",
    "MD4-InsecurityExamples-017": "MD4 보안 분석 예",
    "MD4-LegacySystems-020": "MD4는 레거시 시스템에 여전히 존재할 수 있지만 보안이 우려되는 모든 상황에서는 사용이 권장되지 않습니다. 현대 표준에서는 더 이상 암호화 목적으로 MD4를 권장하지 않습니다.",
    "MD4-Operation-007": "MD4 작동은 어떻게 작동하나요?",
    "MD4-Origin-005": "MD4는 보안 속성을 유지하면서 더 빠른 성능을 제공하기 위해 MD2와 MD3를 발전시킨 것입니다. 그러나 MD4에는 몇 가지 보안 약점이 있다는 것이 분명해졌습니다.",
    "MD4-Process-008": "MD4는 입력 메시지를 512비트의 배수로 채우고 16단어 블록으로 나누어 처리합니다. 그런 다음 알고리즘은 비트 연산, 모듈 추가 및 비선형 함수와 관련된 4단계 처리를 사용하여 이러한 블록에서 작동합니다.",
    "MD4-Purpose-003": "MD4의 목적은 원본 데이터의 신뢰성과 무결성을 확인하는 데 사용할 수 있는 고정 크기 디지털 지문을 생성하여 데이터 무결성을 보장하는 것입니다.",
    "MD4-Rounds-009": "모든 블록이 처리된 후 결과 내부 상태는 최종 128비트 해시 값으로 변환됩니다.",
    "MD4-Speed-012": "MD4는 처음에 이전 버전보다 더 빠르게 설계되었으므로 도입 당시 빠른 해싱이 필요한 응용 프로그램에 널리 사용되었습니다.",
    "MD4-Successors-006": "결함에도 불구하고 MD4는 MD5 및 SHA-1과 같은 후속 해시 함수의 토대를 마련했으며, 이는 디자인을 개선했지만 시간이 지남에 따라 일부 취약점도 물려받았습니다."
}
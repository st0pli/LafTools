{
    "41ev7": "MD2",
    "5-S-B": "파일의 MD4",
    "6wtIW": "MD2(Message-Digest Algorithm 2)는 입력을 받아 128비트(16바이트) 해시 값을 생성하는 암호화 해시 함수입니다. MD1의 후속 제품으로 1989년 Ronald Rivest에 의해 개발되었습니다. MD2는 8비트 컴퓨터에 최적화되어 있으며 다른 해시 함수에 비해 비교적 간단합니다. 그러나 MD2는 충돌 공격에 취약한 것으로 나타났으며 더 이상 암호화 목적으로 안전한 것으로 간주되지 않습니다. MD2는 여전히 일부 애플리케이션에서 사용되지만 SHA-256 및 SHA-3과 같은 보다 안전한 해시 기능을 위해 단계적으로 폐지되고 있습니다.",
    "70PnM": "MD4",
    "7gKzt": "MD4(Message-Digest Algorithm 4)는 입력을 받아 128비트(16바이트) 해시 값을 생성하는 암호화 해시 함수입니다. MD2와 MD3의 후속 제품으로 1990년 Ronald Rivest에 의해 개발되었습니다. 그러나 MD4는 충돌 공격에 취약한 것으로 나타났으며 더 이상 암호화 목적으로 안전한 것으로 간주되지 않습니다. MD4는 일부 애플리케이션에서 여전히 사용되고 있지만 SHA-256 및 SHA-3과 같은 보다 안전한 해시 기능을 위해 단계적으로 폐지되고 있습니다.",
    "AWqXD": "MD5",
    "E88Ej": "입력 텍스트를 암호화하려면 여기를 클릭하세요",
    "ECm8j": "입력 텍스트를 암호화하려면 여기를 클릭하세요",
    "IP8-V": "텍스트의 MD2",
    "IPtV": "텍스트의 MD4",
    "P56UK": "입력 텍스트를 암호화하려면 여기를 클릭하세요",
    "PJNze": "입력 텍스트를 암호화하려면 여기를 클릭하세요",
    "REFy8": "입력 텍스트를 암호화하려면 여기를 클릭하세요",
    "TtyeA": "SHA1",
    "TtyeA.sha224": "SHA224",
    "TtyeA.sha256": "SHA256",
    "TtyeA.sha384": "SHA384",
    "TtyeA.sha512": "SHA512",
    "cPS6q": "모든 도구",
    "eNNrM": "파일의 MD2",
    "g0QB9": "MD5 메시지 다이제스트 알고리즘은 128비트 해시 값을 생성하는 널리 사용되는 해시 함수입니다. MD5는 이전 해시 함수 MD4[3]를 대체하기 위해 1991년 Ronald Rivest에 의해 설계되었으며 1992년에 RFC 1321로 지정되었습니다. MD5는 의도하지 않은 손상에 대해 데이터 무결성을 확인하기 위한 체크섬으로 사용될 수 있습니다. 역사적으로 이는 암호화 해시 함수로 널리 사용되었습니다. 그러나 이는 광범위한 취약점을 안고 있는 것으로 밝혀졌습니다. 예를 들어 분할된 데이터베이스의 특정 키에 대한 파티션을 결정하는 등 다른 비암호화 목적에 적합하며 최신 보안 해시 알고리즘보다 계산 요구 사항이 낮기 때문에 선호될 수 있습니다.[4]",
    "gh9zA": "SHA-1 또는 보안 해시 알고리즘 1은 입력을 받아 160비트(20바이트) 해시 값을 생성하는 암호화 알고리즘입니다.",
    "gh9zA.sha224": "SHA-224는 입력을 받아 224비트(28바이트) 해시 값을 생성하는 암호화 해시 함수입니다. 이는 SHA-256, SHA-384 및 SHA-512도 포함하는 SHA-2 해시 함수 제품군의 일부입니다. SHA-224는 충돌 공격에 취약한 것으로 알려진 이전 SHA-1보다 더 안전하도록 설계되었습니다. SHA-224는 디지털 서명, 메시지 인증 코드 및 데이터 무결성이 중요한 기타 응용 프로그램에 널리 사용됩니다.",
    "gh9zA.sha256": "SHA-256은 입력을 받아 256비트(32바이트) 해시 값을 생성하는 암호화 해시 함수입니다. 이는 SHA-224, SHA-384 및 SHA-512도 포함하는 SHA-2 해시 함수 제품군의 일부입니다. SHA-256은 충돌 공격에 취약한 것으로 알려진 이전 SHA-1보다 더 안전하도록 설계되었습니다. SHA-256은 디지털 서명, 메시지 인증 코드 및 데이터 무결성이 중요한 기타 응용 프로그램에 널리 사용됩니다.",
    "gh9zA.sha384": "SHA-384는 입력을 받아 384비트(48바이트) 해시 값을 생성하는 암호화 해시 함수입니다. SHA-224, SHA-256, SHA-512, SHA-512/224 및 SHA-512/256도 포함하는 SHA-2 해시 함수 제품군의 일부입니다. SHA-384는 충돌 공격에 취약한 것으로 알려진 이전 SHA-1보다 더 안전하도록 설계되었습니다. SHA-384는 디지털 서명, 메시지 인증 코드 및 데이터 무결성이 중요한 기타 응용 프로그램에 널리 사용됩니다.",
    "gh9zA.sha512": "SHA-512는 입력을 받아 512비트(64바이트) 해시 값을 생성하는 암호화 해시 함수입니다. SHA-224, SHA-256, SHA-384, SHA-512/224 및 SHA-512/256도 포함하는 SHA-2 해시 함수 제품군의 일부입니다. SHA-512는 충돌 공격에 취약한 것으로 알려진 이전 SHA-1보다 더 안전하도록 설계되었습니다. SHA-512는 디지털 서명, 메시지 인증 코드 및 데이터 무결성이 중요한 기타 응용 프로그램에 널리 사용됩니다.",
    "gwo79": "파일의 SHA1",
    "gwo79.sha224": "파일의 SHA224",
    "gwo79.sha256": "파일의 SHA256",
    "gwo79.sha384": "파일의 SHA384",
    "gwo79.sha512": "파일의 SHA512",
    "jjhid": "안녕하세요, 세상이에요",
    "m0105": "코덱",
    "m0106": "변환기",
    "m0107": "발전기",
    "m0108": "포맷터",
    "m0109": "문서 센터",
    "o3poi": "텍스트의 SHA1",
    "o3poi.sha224": "텍스트의 SHA224",
    "o3poi.sha256": "텍스트의 SHA256",
    "o3poi.sha384": "텍스트의 SHA384",
    "o3poi.sha512": "텍스트의 SHA512",
    "pl8S6": "입력 텍스트를 암호화하려면 여기를 클릭하세요",
    "qjQvD": "입력 텍스트를 암호화하려면 여기를 클릭하세요",
    "vQq9v": "텍스트의 MD5",
    "vhgr3": "파일을 선택하고 직접 암호화하려면 여기를 클릭하세요.",
    "vu10K": "파일의 MD5",
    "wqp_4": "파일을 선택하고 직접 암호화하려면 여기를 클릭하세요.",
    "y_2Q1": "인코딩 및 디코딩",
    "y_2Q2": "대칭 암호화",
    "y_2Q3": "비대칭 암호화",
    "y_2Q4": "중국 국가 알고리즘",
    "y_2Q5": "웹 인증",
    "y_BN6": "다이제스트 알고리즘"
}
name: Build on Tags for CN and US

on:
  push:
    tags:
      - "v*.*.**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      LAFTOOLS_ROOT: /home/runner/work/LafTools/LafTools-tag
      TAG_MODE: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.21

      - name: Get dependencies
        run: go mod download

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Run build script
        id: runbuildscript
        run: |
          npm i -g typescript
          cd ./modules/web2
          cd ../../
          cd ./pipeline
          chmod +x ./build-all.sh
          ./build-all.sh "${{steps.get_version.outputs.VERSION}}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

      - name: US Release 1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.US_APP_SSH_HOST }}
          port: ${{ secrets.US_APP_SSH_PORT }}
          username: ${{ secrets.US_APP_SSH_USERNAME }}
          key: ${{ secrets.US_APP_SSH_KEY }}
          script: |
            echo 'Running some command'
            ls -la 
            mkdir -p /home/appuser/LafTools-dist

      - name: US Release 2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.US_APP_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: US Release 3
        run: |
          sftp -o StrictHostKeyChecking=no -P ${{ secrets.US_APP_SSH_PORT }} ${{ secrets.US_APP_SSH_USERNAME }}@${{ secrets.US_APP_SSH_HOST }} <<EOF
            put /home/runner/work/LafTools/LafTools-tag/dkout.tmp.gz /home/appuser/LafTools-dist/LafTools-${{steps.get_version.outputs.VERSION}}-dkout.tmp.gz
          exit
          EOF
          sftp -o StrictHostKeyChecking=no -P ${{ secrets.US_APP_SSH_PORT }} ${{ secrets.US_APP_SSH_USERNAME }}@${{ secrets.US_APP_SSH_HOST }} <<EOF
            put /home/runner/work/LafTools/LafTools-tag/pipeline-server.zip /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}.zip
          exit
          EOF
          rm ~/.ssh/id_rsa -rf

      - name: US Release 4
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.US_APP_SSH_HOST }}
          port: ${{ secrets.US_APP_SSH_PORT }}
          username: ${{ secrets.US_APP_SSH_USERNAME }}
          key: ${{ secrets.US_APP_SSH_KEY }}
          script: |
            echo 'unzip pipeline server'
            unzip /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}.zip -d /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}} &> /dev/null
            chmod +x /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}/home/runner/work/LafTools/LafTools-tag/pipeline/server/run.sh
            /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}/home/runner/work/LafTools/LafTools-tag/pipeline/server/run.sh ${{steps.get_version.outputs.VERSION}} en_US 80 LafTools-dist laft-inst3 US

      - name: Upload Release Asset for linux-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools-tag/dist/pkg/linux-x64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-linux-x64-minimal.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for linux-arm64
        uses: actions/upload-release-asset@v1
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools-tag/dist/pkg/linux-arm64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-linux-arm64-minimal.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for darwin-x64
        uses: actions/upload-release-asset@v1
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools-tag/dist/pkg/darwin-x64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-darwin-x64-minimal.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for darwin-arm64
        uses: actions/upload-release-asset@v1
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools-tag/dist/pkg/darwin-arm64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-darwin-arm64-minimal.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for windows-x64
        uses: actions/upload-release-asset@v1
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools-tag/dist/pkg/windows-x64.zip
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-windows-x64-minimal.zip
          asset_content_type: application/zip

      - name: Upload Release Asset for window-arm64
        uses: actions/upload-release-asset@v1
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools-tag/dist/pkg/windows-arm64.zip
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-windows-arm64-minimal.zip
          asset_content_type: application/zip

      - name: CN Release 1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.APP_SSH_HOST }}
          port: ${{ secrets.APP_SSH_PORT }}
          username: ${{ secrets.APP_SSH_USERNAME }}
          key: ${{ secrets.APP_SSH_KEY }}
          script: |
            echo 'Running some command'
            ls -la 
            mkdir -p /home/appuser/LafTools-dist

      - name: CN Release 2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.APP_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: CN Release 3
        run: |
          sftp -o StrictHostKeyChecking=no -P ${{ secrets.APP_SSH_PORT }} ${{ secrets.APP_SSH_USERNAME }}@${{ secrets.APP_SSH_HOST }} <<EOF
            put /home/runner/work/LafTools/LafTools-tag/dkout.tmp.gz /home/appuser/LafTools-dist/LafTools-${{steps.get_version.outputs.VERSION}}-dkout.tmp.gz
          exit
          EOF
          sftp -o StrictHostKeyChecking=no -P ${{ secrets.APP_SSH_PORT }} ${{ secrets.APP_SSH_USERNAME }}@${{ secrets.APP_SSH_HOST }} <<EOF
            put /home/runner/work/LafTools/LafTools-tag/pipeline-server.zip /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}.zip
          exit
          EOF
          rm ~/.ssh/id_rsa -rf

      - name: CN Release 4
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.APP_SSH_HOST }}
          port: ${{ secrets.APP_SSH_PORT }}
          username: ${{ secrets.APP_SSH_USERNAME }}
          key: ${{ secrets.APP_SSH_KEY }}
          command_timeout: 200m
          script: |
            echo 'unzip pipeline server'
            unzip /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}.zip -d /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}} &> /dev/null
            chmod +x /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}/home/runner/work/LafTools/LafTools-tag/pipeline/server/run.sh
            /home/appuser/LafTools-dist/pipeline-server-${{steps.get_version.outputs.VERSION}}/home/runner/work/LafTools/LafTools-tag/pipeline/server/run.sh ${{steps.get_version.outputs.VERSION}} zh_CN 80 LafTools-dist laft-inst3 CN

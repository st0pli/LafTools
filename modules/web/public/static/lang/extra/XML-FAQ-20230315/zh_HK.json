{
    "Diff-XML-JSON-Article": "XML 和 JSON 之間的區別",
    "MDN-XML-Syntax": "MDN 網路文檔 - XML 語法",
    "W3Schools-XML-Validation": "W3Schools - XML 驗證",
    "XML-Advantage-Readable-018": "其人類可讀的特性允許輕鬆檢查和調試，並且定義自訂結構的能力使其能夠靈活地適應多種用例。",
    "XML-Advantage-Standardized-017": "XML 是一種廣泛採用的標準，使其與各種平台和系統相容，促進互通性和資料交換。",
    "XML-Advantages-016": "使用 XML 有哪些優點？",
    "XML-Attributes-006": "元素可以具有屬性，這些屬性提供有關開始標記內的元素的附加信息，例如 {0}",
    "XML-Basics-001": "什麼是XML？",
    "XML-Def-002": "XML（可擴展標記語言）是一種標記語言，它定義了一組用於以人類可讀和機器可讀的格式對文件進行編碼的規則。",
    "XML-Disadvantage-Size-020": "XML 可能相對冗長，與 JSON 等替代方案相比，會導致檔案大小更大，進而影響傳輸速度和儲存需求。",
    "XML-Disadvantages-019": "使用 XML 有哪些缺點？",
    "XML-JSON-Diff-Structure-014": "XML 使用詳細的分層標籤來建構結構，而 JSON 則依賴鍵值對和陣列。範例：XML {0} 與 JSON {1}。",
    "XML-JSON-Diff-Syntax-015": "XML 具有更嚴格的語法（包含結束標記和屬性），而 JSON 的語法則更輕，更接近 JavaScript 物件表示法。 JSON 通常被認為更容易在網路上解析和傳輸。",
    "XML-JSON-Difference-013": "XML 和 JSON 有什麼差別？",
    "XML-Nesting-007": "XML 中的嵌套如何運作？",
    "XML-Nesting-Example-009": "例如，「<book><title>My Book Title</title><author>John Doe</author></book>」表示一本書，其標題和作者為嵌套元素。",
    "XML-Nesting-Explanation-008": "在 XML 中，元素可以相互嵌套以表示層次關係。子元素放置在其父元素的開始標籤和結束標籤之間。",
    "XML-Processing-Speed-021": "由於嚴格的語法和驗證需要，解析和產生 XML 可能會比較慢，尤其是在處理複雜文件時。",
    "XML-Purpose-003": "它旨在承載數據，而不是像 HTML 那樣顯示數據，使其能夠用作跨不同平台和應用程式共享結構化資訊的通用格式。",
    "XML-Syntax-004": "XML 的基本語法是什麼？",
    "XML-Syntax-Example-005": "簡單的 XML 文件由樹狀結構中的元素組成。每個元素都以尖括號 (<element>) 中的標記開始，並以結束標記 (</element>) 結束。",
    "XML-Validation-010": "什麼是 XML 驗證？它是如何運作的？",
    "XML-Validation-Def-011": "XML 驗證可確保 XML 文件遵守文件類型定義 (DTD) 或 XML 架構 (XSD) 中定義的一組特定規則。",
    "XML-Validation-Process-012": "驗證器檢查是否存在所有必要的元素和屬性，驗證資料類型，並在處理文件之前強製執行架構中指定的任何約束。"
}
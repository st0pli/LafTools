{
    "41ev7": "MD2",
    "5-S-B": "ファイルからの MD4",
    "6wtIW": "MD2 (メッセージ ダイジェスト アルゴリズム 2) は、入力を受け取り、128 ビット (16 バイト) のハッシュ値を生成する暗号化ハッシュ関数です。 MD1 の後継として 1989 年に Ronald Rivest によって開発されました。 MD2 は 8 ビット コンピューター用に最適化されており、他のハッシュ関数と比べて比較的単純です。ただし、MD2 は衝突攻撃に対して脆弱であることが判明しており、暗号化目的では安全とは考えられていません。 MD2 は依然として一部のアプリケーションで使用されていますが、SHA-256 や SHA-3 などのより安全なハッシュ関数を優先して段階的に廃止されています。",
    "70PnM": "MD4",
    "7gKzt": "MD4 (メッセージ ダイジェスト アルゴリズム 4) は、入力を受け取り、128 ビット (16 バイト) のハッシュ値を生成する暗号化ハッシュ関数です。 MD2 および MD3 の後継として、1990 年に Ronald Rivest によって開発されました。ただし、MD4 は衝突攻撃に対して脆弱であることが判明しており、暗号化目的では安全とは考えられていません。 MD4 は依然として一部のアプリケーションで使用されていますが、SHA-256 や SHA-3 などのより安全なハッシュ関数が優先されて段階的に廃止されています。",
    "AWqXD": "MD5",
    "E88Ej": "ここをクリックして入力テキストを暗号化します",
    "ECm8j": "ここをクリックして入力テキストを暗号化します",
    "IP8-V": "テキストからの MD2",
    "IPtV": "テキストからの MD4",
    "P56UK": "ここをクリックして入力テキストを暗号化します",
    "PJNze": "ここをクリックして入力テキストを暗号化します",
    "REFy8": "ここをクリックして入力テキストを暗号化します",
    "TtyeA": "SHA1",
    "TtyeA.sha224": "SHA224",
    "TtyeA.sha256": "SHA256",
    "TtyeA.sha384": "SHA3​​84",
    "TtyeA.sha512": "SHA512",
    "cPS6q": "すべてのツール",
    "eNNrM": "ファイルからの MD2",
    "g0QB9": "MD5 メッセージ ダイジェスト アルゴリズムは、128 ビットのハッシュ値を生成する広く使用されているハッシュ関数です。 MD5 は、以前のハッシュ関数 MD4 を置き換えるために 1991 年に Ronald Rivest によって設計され[3]、1992 年に RFC 1321 として仕様化されました。MD5 は、意図しない破損に対するデータの整合性を検証するためのチェックサムとして使用できます。歴史的には、暗号化ハッシュ関数として広く使用されていました。ただし、広範囲にわたる脆弱性があることが判明しています。これは、パーティション化されたデータベース内の特定のキーのパーティションを決定するなど、暗号化以外の他の目的にも引き続き適しており、最新のセキュア ハッシュ アルゴリズムよりも計算要件が低いため、好まれる可能性があります。[4]",
    "gh9zA": "SHA-1 またはセキュア ハッシュ アルゴリズム 1 は、入力を受け取り、160 ビット (20 バイト) のハッシュ値を生成する暗号化アルゴリズムです。",
    "gh9zA.sha224": "SHA-224 は、入力を受け取り、224 ビット (28 バイト) のハッシュ値を生成する暗号化ハッシュ関数です。これは、SHA-256、SHA-384、および SHA-512 も含まれる SHA-2 ファミリのハッシュ関数の一部です。 SHA-224 は、衝突攻撃に対して脆弱であることがわかっている以前の SHA-1 よりも安全になるように設計されています。 SHA-224 は、デジタル署名、メッセージ認証コード、およびデータの整合性が重要なその他のアプリケーションで広く使用されています。",
    "gh9zA.sha256": "SHA-256 は、入力を受け取り、256 ビット (32 バイト) のハッシュ値を生成する暗号化ハッシュ関数です。これは、SHA-224、SHA-384、および SHA-512 も含まれる SHA-2 ファミリのハッシュ関数の一部です。 SHA-256 は、衝突攻撃に対して脆弱であることがわかっている以前の SHA-1 よりも安全になるように設計されています。 SHA-256 は、デジタル署名、メッセージ認証コード、およびデータの整合性が重要なその他のアプリケーションで広く使用されています。",
    "gh9zA.sha384": "SHA-384 は、入力を受け取り、384 ビット (48 バイト) のハッシュ値を生成する暗号化ハッシュ関数です。これは、ハッシュ関数の SHA-2 ファミリの一部であり、SHA-224、SHA-256、SHA-512、SHA-512/224、および SHA-512/256 も含まれます。 SHA-384 は、衝突攻撃に対して脆弱であることがわかっている以前の SHA-1 よりも安全になるように設計されています。 SHA-384 は、デジタル署名、メッセージ認証コード、およびデータの整合性が重要なその他のアプリケーションで広く使用されています。",
    "gh9zA.sha512": "SHA-512 は、入力を受け取り、512 ビット (64 バイト) のハッシュ値を生成する暗号化ハッシュ関数です。これは、ハッシュ関数の SHA-2 ファミリの一部であり、SHA-224、SHA-256、SHA-384、SHA-512/224、および SHA-512/256 も含まれます。 SHA-512 は、衝突攻撃に対して脆弱であることがわかっている以前の SHA-1 よりも安全になるように設計されています。 SHA-512 は、デジタル署名、メッセージ認証コード、およびデータの整合性が重要なその他のアプリケーションで広く使用されています。",
    "gwo79": "ファイルからの SHA1",
    "gwo79.sha224": "ファイルからの SHA224",
    "gwo79.sha256": "ファイルからの SHA256",
    "gwo79.sha384": "ファイルからの SHA384",
    "gwo79.sha512": "ファイルからの SHA512",
    "jjhid": "こんにちは、世界です",
    "m0105": "コーデック",
    "m0106": "コンバータ",
    "m0107": "発生器",
    "m0108": "フォーマッタ",
    "m0109": "ドキュメントセンター",
    "o3poi": "テキストからの SHA1",
    "o3poi.sha224": "テキストからの SHA224",
    "o3poi.sha256": "テキストからの SHA256",
    "o3poi.sha384": "テキストからの SHA384",
    "o3poi.sha512": "テキストからの SHA512",
    "pl8S6": "ここをクリックして入力テキストを暗号化します",
    "qjQvD": "ここをクリックして入力テキストを暗号化します",
    "vQq9v": "テキストからの MD5",
    "vhgr3": "ここをクリックしてファイルを選択し、直接暗号化します。",
    "vu10K": "ファイルからの MD5",
    "wqp_4": "ここをクリックしてファイルを選択し、直接暗号化します。",
    "y_2Q1": "エンコードとデコード",
    "y_2Q2": "対称暗号",
    "y_2Q3": "非対称暗号",
    "y_2Q4": "中国国家アルゴリズム",
    "y_2Q5": "ウェブ認証",
    "y_BN6": "ダイジェストアルゴリズム"
}
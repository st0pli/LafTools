{
    "c1p4b": "그런 다음 각 10진수는 5개의 Base85 문자로 구성된 고유한 시퀀스로 변환됩니다. 끝에 4바이트 미만이 남아 있으면 패딩이 적용될 수 있습니다.",
    "d7w2e": "Base85는 입력 데이터를 4바이트 그룹으로 나누고 각 그룹을 0에서 2^32-1 사이의 십진수로 변환하는 방식으로 작동합니다.",
    "f9t1z": "Base85는 처음에 더 나은 압축 비율을 위해 PostScript 문서에서 이진 데이터를 효율적으로 표현하기 위해 개발되었습니다.",
    "g3h5s": "Base85는 어떻게 작동하나요?",
    "j5s7r": "JavaScript에서 Base85로 인코딩/디코딩하려면 어떻게 해야 하나요?",
    "k2em5e": "이로 인해 동일한 양의 입력 데이터에 대해 더 짧은 출력 문자열이 생성되며, 이는 크기 최소화가 중요한 시나리오에서 유용할 수 있습니다.",
    "p8eq9n": "JavaScript에서 Base85 인코딩 및 디코딩을 위해 'base85' 또는 'ascii85'와 같은 라이브러리를 사용할 수 있습니다.",
    "q2n3r": "오늘날 PDF 문서 및 특정 네트워크 프로토콜과 같이 공간 효율성과 가독성이 중요한 다양한 애플리케이션에 사용됩니다.",
    "r9qn8v": "Base85의 주요 장점은 더 큰 문자 세트(85 대 Base64의 64 또는 Base32의 32)로 인해 향상된 공간 효율성입니다.",
    "u1i2b": "Base64 또는 Base32보다 Base85를 사용하면 어떤 이점이 있나요?",
    "v4k6r": "더 큰 문자 집합을 사용하여 Base64 또는 Base32에 비해 데이터를 더 컴팩트한 형식으로 인코딩합니다.",
    "w1x4k": "예, Ascii85(PostScript 및 PDF에 사용됨), Z85(ZeroMQ) 및 UUencode(이전 형식)를 포함한 여러 변형이 존재합니다. 각각은 약간 다른 문자 집합과 규칙을 가지고 있습니다.",
    "x9n1b": "Base85는 인쇄 가능한 85개의 ASCII 문자 집합을 사용하여 이진 데이터를 나타내는 인코딩 체계입니다.",
    "y6m8k": "Base85가 왜 만들어졌나요?",
    "z2t7m": "Base85란 무엇입니까?",
    "z5m6t": "사용 예: `const base85 = require('base85'); const encode = base85.encode('your-data'); const 디코딩 = base85.decode(인코딩);`",
    "z9t7p": "Base85의 특정 변형이 있습니까?"
}
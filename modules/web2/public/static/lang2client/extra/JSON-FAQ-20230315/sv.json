{
    "JSON-Advantages-011": "JSON är i allmänhet mindre och snabbare att analysera än XML, vilket gör den idealisk för klient-serverkommunikation där bandbredd och hastighet är avgörande.",
    "JSON-Basics-001": "Vad är JSON?",
    "JSON-Beautify-007": "Vad är JSON Beautification?",
    "JSON-Beautify-Def-008": "JSON-försköning hänvisar till processen att formatera JSON-data till en mer läsbar form med rätt indrag och radbrytningar, vilket gör det lättare att analysera och felsöka.",
    "JSON-Beautify-Example-009": "Före: '{\\\"nyckel\\\":\\\"värde\\\",\\\"array\\\":[1,2,3]}', Efter: '{\\n \\\"nyckel\\\": \\\"värde\\\", \\n \\\"matris\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) är ett lätt, textbaserat datautbytesformat som är lätt för människor att läsa och skriva, och lätt för maskiner att analysera och generera.",
    "JSON-JavaScript-Support-020": "JSON stöds av JavaScript genom de globala objekten \"JSON.parse()\" och \"JSON.stringify()\". Alla giltiga JSON är också ett giltigt JavaScript-literal-objekt eller array, vilket möjliggör sömlös konvertering mellan de två formaten.",
    "JSON-JavaScript-Usage-021": "I webbutveckling används JSON vanligtvis för AJAX-förfrågningar, rendering på serversidan och datalagring (t.ex. lokal lagring eller IndexedDB).",
    "JSON-Linting-022": "Vad är JSON-linting och varför är det viktigt?",
    "JSON-Linting-Benefit-024": "Linters kan förhindra körtidsfel på grund av ogiltig JSON, vilket säkerställer smidigt datautbyte och sparar tid vid felsökning av potentiella problem.",
    "JSON-Linting-Explanation-023": "JSON linting är processen för att kontrollera om ett JSON-dokument följer JSON-specifikationen. Det hjälper till att identifiera syntaxfel innan du försöker analysera data.",
    "JSON-Path-013": "Vad är JSON-sökväg?",
    "JSON-Path-Example-015": "$.store.book[0].title väljer titeln på den första boken i ett JSON-objekt med en butik som innehåller bokarray.",
    "JSON-Path-Explanation-014": "JSON Path är ett frågespråk som liknar XPath för XML, vilket gör att du kan extrahera data från JSON-dokument med en sökvägsliknande notation.",
    "JSON-Path-Guide": "JSONPath - XPath för JSON",
    "JSON-Purpose-003": "Den används främst för att överföra data mellan en server och webbapplikation som ett alternativ till XML, med inbyggt stöd i JavaScript via metoderna `JSON.parse()` och `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "Hur passar JSON in i JavaScript?",
    "JSON-Security-025": "Vad är några säkerhetsproblem när du arbetar med JSON?",
    "JSON-Security-Impact-026": "Potentiella säkerhetsrisker inkluderar JSON-injektionsattacker, där skadlig data skickas som kan orsaka oavsiktligt beteende när de analyseras/körs.",
    "JSON-Security-Prevention-027": "För att minska dessa risker, rensa alltid användarinmatning och använd bibliotek som säkert tolkar JSON utan att exekvera dess innehåll (som JavaScripts inbyggda JSON.parse()). Undvik också att använda eval() för att analysera JSON.",
    "JSON-Serialization-016": "Vad är JSON-serialisering och deserialisering?",
    "JSON-Serialization-Def-017": "JSON-serialisering är processen att konvertera ett JavaScript-objekt till en JSON-sträng, medan deserialisering är det omvända - att förvandla en JSON-sträng tillbaka till ett JavaScript-objekt.",
    "JSON-Serialization-W3Schools": "JSON serialisering på W3Schools",
    "JSON-Syntax-004": "Vad är den grundläggande syntaxen för JSON?",
    "JSON-Syntax-Example-f005": "Ett JSON-objekt består av nyckel-värdepar omslutna av klammerparenteser {0}. Varje nyckel måste vara en sträng omsluten av dubbla citattecken, följt av ett kolon och sedan dess värde.",
    "JSON-Syntax-Reference": "MDN Web Docs på JSON",
    "JSON-Value-Types-006": "Värden kan vara strängar, tal, booleaner, arrayer (omslutna inom hakparenteser",
    "JSON-vs-XML-010": "Hur jämförs JSON med XML?",
    "JSON-vs-XML-Article": "Jämför JSON och XML",
    "MDN-JSON-in-JavaScript": "MDN Web Docs - Arbeta med JSON",
    "OWASP-JSON-Injection": "OWASP - JSON Injection",
    "XML-Advantages-012": "XML ger mer strukturflexibilitet och stöder namnutrymmen, vilket kan vara fördelaktigt för komplexa dokumentstrukturer och interoperabilitet mellan system."
}
{
    "Diff-XML-JSON-Article": "Différence entre XML et JSON",
    "MDN-XML-Syntax": "MDN Web Docs - Syntaxe XML",
    "W3Schools-XML-Validation": "W3Schools-Validation XML",
    "XML-Advantage-Readable-018": "Sa nature lisible par l'homme permet une inspection et un débogage faciles, et la possibilité de définir des structures personnalisées le rend flexible pour de multiples cas d'utilisation.",
    "XML-Advantage-Standardized-017": "XML est une norme largement adoptée, ce qui la rend compatible avec diverses plates-formes et systèmes, favorisant ainsi l'interopérabilité et l'échange de données.",
    "XML-Advantages-016": "Quels sont les avantages de l’utilisation de XML ?",
    "XML-Attributes-006": "Les éléments peuvent avoir des attributs qui fournissent des informations supplémentaires sur l'élément dans la balise d'ouverture, tels que {0}",
    "XML-Basics-001": "Qu’est-ce que XML ?",
    "XML-Def-002": "XML (eXtensible Markup Language) est un langage de balisage qui définit un ensemble de règles pour encoder des documents dans un format à la fois lisible par l'homme et par la machine.",
    "XML-Disadvantage-Size-020": "XML peut être relativement verbeux, ce qui entraîne des tailles de fichiers plus grandes que des alternatives comme JSON, ce qui a un impact sur la vitesse de transmission et les exigences de stockage.",
    "XML-Disadvantages-019": "Quels sont les inconvénients de l’utilisation de XML ?",
    "XML-JSON-Diff-Structure-014": "XML utilise des balises verbeuses et hiérarchiques pour la structure, tandis que JSON s'appuie sur des paires clé-valeur et des tableaux. Exemple : XML {0} contre JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML a une syntaxe plus stricte avec des balises et des attributs de fermeture, tandis que la syntaxe de JSON est plus légère et plus proche de la notation d'objet JavaScript. JSON est généralement considéré comme plus facile à analyser et à transmettre sur le Web.",
    "XML-JSON-Difference-013": "Quelle est la différence entre XML et JSON ?",
    "XML-Nesting-007": "Comment fonctionne l’imbrication en XML ?",
    "XML-Nesting-Example-009": "Par exemple, `<book><title>My Book Title</title><author>John Doe</author></book>` représente un livre avec son titre et son auteur sous forme d'éléments imbriqués.",
    "XML-Nesting-Explanation-008": "En XML, les éléments peuvent être imbriqués les uns dans les autres pour représenter des relations hiérarchiques. Les éléments enfants sont placés entre les balises d'ouverture et de fermeture de leur élément parent.",
    "XML-Processing-Speed-021": "L'analyse et la génération de XML peuvent être plus lentes en raison de sa syntaxe stricte et de la nécessité d'une validation, en particulier lorsqu'il s'agit de documents complexes.",
    "XML-Purpose-003": "Il est conçu pour transporter des données plutôt que pour les afficher comme le HTML, ce qui lui permet d'être utilisé comme format commun pour partager des informations structurées sur différentes plates-formes et applications.",
    "XML-Syntax-004": "Quelle est la syntaxe de base de XML ?",
    "XML-Syntax-Example-005": "Un simple document XML est constitué d'éléments dans une structure arborescente. Chaque élément commence par une balise entre crochets (<element>) et se termine par une balise de fermeture (</element>).",
    "XML-Validation-010": "Qu’est-ce que la validation XML et comment ça marche ?",
    "XML-Validation-Def-011": "La validation XML garantit qu'un document XML adhère à un ensemble spécifique de règles définies dans une définition de type de document (DTD) ou un schéma XML (XSD).",
    "XML-Validation-Process-012": "Les validateurs vérifient si tous les éléments et attributs requis sont présents, valident les types de données et appliquent toutes les contraintes spécifiées dans le schéma avant de traiter le document."
}
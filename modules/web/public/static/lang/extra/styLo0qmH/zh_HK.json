{
    "CSS-Advantages-010": "使用 CSS 有什麼優點？",
    "CSS-Advantages-Customization-012": "另一個優點是它能夠同時自訂多個頁面的外觀，從而在更新網站範圍的樣式時節省時間和精力。",
    "CSS-Advantages-Separation-011": "優點之一是內容和表示之間的關註點分離，這提高了網站的可維護性和可擴展性。",
    "CSS-Animations-Transitions-019": "CSS 動畫和轉場無需 JavaScript 即可實現流暢的視覺效果。",
    "CSS-Def-002": "CSS（層疊樣式表）是一種樣式表語言，用於描述以 HTML 或 XML 編寫的文件的表示形式。",
    "CSS-Disadvantages-013": "CSS 有哪些缺點？",
    "CSS-Disadvantages-Browser-Compat-015": "另一個問題是跨瀏覽器相容性，因為不同的瀏覽器可能以不同的方式解釋 CSS 規則。這要求開發人員使用供應商前綴或功能檢測技術來實現跨瀏覽器的一致渲染。",
    "CSS-Disadvantages-Cascade-014": "一項挑戰是管理樣式的級聯性質，這有時會導致意外的繼承和特殊性問題。",
    "CSS-Evolution-006": "從那時起，它經歷了 CSS2 (1998)、CSS2.1 (2007)、CSS3（持續開發）的演變，引入了選擇器、動畫、響應式設計等功能。",
    "CSS-Future-020": "CSS技術的未來是什麼？",
    "CSS-Future-Houdini-022": "例如，Houdini 的目標是提供低階 API 來自訂瀏覽器的渲染過程，使開發人員能夠對樣式和佈局進行前所未有的控製。",
    "CSS-Future-Progress-021": "CSS 工作小組繼續致力於新模組的開發，例如 CSS 變數（自訂屬性）、Houdini 和容器查詢。",
    "CSS-Hist-Origin-005": "CSS 最初由 Håkon Wium Lie 於 1994 年 10 月提出，並於 1996 年 12 月隨 CSS1 成為 W3C 官方推薦標準。",
    "CSS-History-004": "CSS 的歷史是怎麼樣的？",
    "CSS-History-W3C": "W3C CSS 建議時間表",
    "CSS-Key-Features-016": "CSS 有哪些關鍵特性？",
    "CSS-Layouts-018": "Flexbox 和網格佈局系統提供了強大的工具來建立回應靈敏且靈活的頁面佈局。",
    "CSS-MDN-Animations": "MDN CSS 動畫指南",
    "CSS-MDN-Flexbox": "MDN Flexbox 指南",
    "CSS-MDN-Grid": "MDN CSS 網格指南",
    "CSS-MDN-Houdini": "MDN Houdini 簡介",
    "CSS-Purpose-003": "它允許開發人員將內容與表示分離，定義佈局、顏色和字體等樣式，使網頁在不同裝置和螢幕上具有視覺吸引力並保持一致。",
    "CSS-Selectors-017": "選擇器允許根據類型、類別、ID、屬性等定位特定的 HTML 元素。",
    "CSS-Tech-History-001": "什麼是CSS？",
    "CSS-Usage-007": "如何在我的 Web 專案中使用 CSS？",
    "CSS-Usage-Basics-008": "要使用 CSS，您需要建立一個包含樣式的單獨檔案（例如 style.css），然後使用 <head> 部分中的 <link> 元素將其連結到您的 HTML 檔案。",
    "CSS-Usage-Inline-009": "或者，您可以使用「style」屬性直接在 HTML 元素中包含內聯樣式，或在 <head> 部分內的 <style> 標籤中嵌入 CSS。",
    "CSS-Vendor-Prefixes": "MDN 供應商前綴指南",
    "CSS-W3C-Selectors": "W3C 選擇器 4 級規範",
    "CSS-WG-Future-Modules": "W3C CSS 目前工作"
}
{
    "BLAKE2-021": "BLAKE2 ist eine weitere moderne Alternative, die im Vergleich zu SHA-2 höhere Geschwindigkeiten bietet und gleichzeitig ein hohes Sicherheitsniveau beibehält. Es bietet mehrere Varianten, darunter BLAKE2b und BLAKE2s.",
    "BLAKE2_Info-023": "BLAKE2-Info",
    "MD5-Advantages-012": "Welche Vorteile bietet die Verwendung von MD5?",
    "MD5-AlgorithmDetails-011": "Details zum MD5-Algorithmus",
    "MD5-Alternatives-019": "Welche Alternativen zu MD5 gibt es für sicheres Hashing?",
    "MD5-Applications-024": "Welche anderen Anwendungen verwenden oder haben MD5 verwendet?",
    "MD5-Breakdown-017": "Im Laufe der Zeit wurden in MD5 mehrere kryptografische Schwachstellen entdeckt, und Forscher haben praktische Beispiele für die Entstehung von Kollisionen gezeigt, die seine Integrität und Sicherheit weiter gefährden.",
    "MD5-Collision-016": "MD5 ist anfällig für Kollisionsangriffe, was bedeutet, dass zwei verschiedene Eingaben dieselbe Hash-Ausgabe erzeugen können. Dies macht es für Anwendungen wie digitale Signaturen oder Passwortspeicherung unsicher.",
    "MD5-CollisionExample-007": "MD5-Kollisionsbeispiel",
    "MD5-DataIntegrity-026": "Es wurde auch häufig verwendet, um die Integrität von Daten während der Übertragung und Speicherung zu überprüfen, beispielsweise wenn rsync für die Dateisynchronisierung oder die Prüfsummenbildung großer Datensätze verwendet wurde.",
    "MD5-Def-002": "MD5 (Message-Digest Algorithm 5) ist eine weit verbreitete kryptografische Hash-Funktion, die eine Eingabenachricht nimmt und einen 128-Bit-Hash-Wert fester Größe erzeugt.",
    "MD5-DigitalSignature-Risks-027": "Risiken bei der Verwendung von MD5 für digitale Signaturen",
    "MD5-Disadvantages-015": "Welche Nachteile und Sicherheitsbedenken gibt es bei MD5?",
    "MD5-FAQ-001": "Was ist MD5?",
    "MD5-FileChecksum-005": "MD5 wird häufig zur Überprüfung der Dateiintegrität beim Herunterladen von Software oder großen Dateien verwendet. Es generiert eine Prüfsumme, die mit der von der Quelle bereitgestellten verglichen werden kann, um sicherzustellen, dass die heruntergeladene Datei nicht manipuliert wurde.",
    "MD5-Future-028": "Ist MD5 heute noch relevant?",
    "MD5-InsecurityExamples-018": "Beispiele für MD5-Sicherheitsaufschlüsselung",
    "MD5-Operation-008": "Wie funktioniert der MD5-Betrieb?",
    "MD5-PKI-025": "MD5 wird in der Public Key Infrastructure (PKI) zum Erstellen digitaler Signaturen verwendet, obwohl seine Verwendung aus Sicherheitsgründen weitgehend abgelehnt wurde. Mit MD5 signierte Zertifikate werden von den meisten modernen Systemen nicht mehr als vertrauenswürdig eingestuft.",
    "MD5-PasswordHashing-006": "Früher wurde es auch beim Passwort-Hashing verwendet, gilt heute aber aufgrund seiner Kollisionsanfälligkeit und der einfachen Knackbarkeit als unsicher. Moderne Systeme sind auf stärkere Alternativen wie bcrypt oder Argon2 umgestiegen.",
    "MD5-Process-009": "MD5 funktioniert, indem es die Eingabenachricht in Blöcke zerlegt und jeden Block mehrere Verarbeitungsrunden durchläuft, die logische Funktionen, modulare Arithmetik und bitweise Operationen umfassen. Das Ergebnis wird verkettet, um den endgültigen 128-Bit-Hash-Wert zu erzeugen.",
    "MD5-Purpose-003": "Sein Zweck besteht darin, die Datenintegrität sicherzustellen, indem für alle Daten ein eindeutiger digitaler Fingerabdruck erstellt wird. Wenn sich auch nur ein einziges Bit in den Originaldaten ändert, wird der MD5-Hash völlig anders sein.",
    "MD5-Relevance-029": "MD5 gilt für kryptografische Zwecke nicht mehr als sicher, insbesondere für neue Anwendungen, die Kollisionsresistenz oder starke Nachrichtenintegrität erfordern. Es kann jedoch immer noch in Legacy-Systemen oder nicht-kryptografischen Anwendungen zu finden sein, bei denen Geschwindigkeit Vorrang vor Sicherheit hat.",
    "MD5-Rounds-010": "Der Algorithmus besteht aus vier Hauptphasen, die auf einem internen 128-Bit-Zustand ausgeführt werden, der mit Konstanten initialisiert wird. Insgesamt gibt es 64 Verarbeitungsrunden, wobei jede Runde den internen Status basierend auf den Eingabenachrichtenblöcken transformiert.",
    "MD5-Speed-013": "MD5 ist relativ schnell, weshalb es für Anwendungen beliebt ist, bei denen schnelles Hashing unerlässlich ist.",
    "MD5-Standardization-014": "Es wurde weitgehend standardisiert und in verschiedenen Programmiersprachen und Plattformen implementiert, sodass es leicht in bestehende Systeme und Tools integriert werden kann.",
    "MD5-Summary-031": "Zusammenfassend: Welche wichtigen Punkte sollte ich mir bei MD5 merken?",
    "MD5-Summary-Point1-032": "MD5 ist eine schnelle, aber unsichere kryptografische Hash-Funktion, die anfällig für Kollisionsangriffe ist.",
    "MD5-Summary-Point2-033": "Sein Hauptzweck bestand darin, die Datenintegrität sicherzustellen und einige kryptografische Vorgänge durchzuführen, wurde jedoch größtenteils durch stärkere Alternativen wie SHA-256 und BLAKE2 ersetzt.",
    "MD5-Summary-Point3-034": "Während MD5 möglicherweise in älteren Systemen oder in nicht sicherheitsrelevanten Szenarien auftritt, ist es wichtig, es nicht für neue Projekte zu verwenden, die kryptografische Sicherheit erfordern.",
    "MD5-Transition-030": "Da neuere, sicherere Algorithmen wie SHA-256 und BLAKE2 allgemein verfügbar und besser verständlich werden, wird empfohlen, in allen Kontexten, in denen Sicherheit ein Problem darstellt, von MD5 abzuweichen.",
    "MD5-Usage-004": "Wie wird MD5 in der Praxis eingesetzt?",
    "SHA-256-020": "SHA-256 (Secure Hash Algorithm) ist eine weit verbreitete Alternative, die eine höhere Sicherheit als MD5 bietet. Es generiert einen größeren 256-Bit-Hashwert und ist Teil der SHA-2-Familie.",
    "SHA-2_Info-022": "SHA-2-Info"
}
{
    "JSON-Advantages-011": "JSON er generelt mindre og hurtigere at parse end XML, hvilket gør den ideel til klient-server-kommunikation, hvor båndbredde og hastighed er afgørende.",
    "JSON-Basics-001": "Hvad er JSON?",
    "JSON-Beautify-007": "Hvad er JSON Beautification?",
    "JSON-Beautify-Def-008": "JSON-forskønnelse refererer til processen med at formatere JSON-data til en mere menneskelig læsbar form med korrekt indrykning og linjeskift, hvilket gør det nemmere at analysere og fejlfinde.",
    "JSON-Beautify-Example-009": "Før: '{\\\"nøgle\\\":\\\"værdi\\\",\\\"array\\\":[1,2,3]}', Efter: '{\\n \\\"nøgle\\\": \\\"værdi\\\", \\n \\\"array\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) er et let, tekstbaseret dataudvekslingsformat, der er nemt for mennesker at læse og skrive, og nemt for maskiner at parse og generere.",
    "JSON-JavaScript-Support-020": "JSON er indbygget understøttet af JavaScript gennem globale objekter `JSON.parse()` og `JSON.stringify()`. Enhver gyldig JSON er også et gyldigt JavaScript-literalt objekt eller array, som tillader problemfri konvertering mellem de to formater.",
    "JSON-JavaScript-Usage-021": "I webudvikling bruges JSON almindeligvis til AJAX-anmodninger, gengivelse på serversiden og datalagring (f.eks. lokal lagring eller IndexedDB).",
    "JSON-Linting-022": "Hvad er JSON linting, og hvorfor er det vigtigt?",
    "JSON-Linting-Benefit-024": "Linters kan forhindre runtime-fejl på grund af ugyldig JSON, hvilket sikrer jævn dataudveksling og sparer tid ved fejlretning af potentielle problemer.",
    "JSON-Linting-Explanation-023": "JSON linting er processen med at kontrollere, om et JSON-dokument overholder JSON-specifikationen. Det hjælper med at identificere syntaksfejl, før du forsøger at parse dataene.",
    "JSON-Path-013": "Hvad er JSON Path?",
    "JSON-Path-Example-015": "$.store.book[0].title vælger titlen på den første bog i et JSON-objekt med et lager, der indeholder bogmatrix.",
    "JSON-Path-Explanation-014": "JSON Path er et forespørgselssprog, der ligner XPath til XML, hvilket giver dig mulighed for at udtrække data fra JSON-dokumenter ved hjælp af en stilignende notation.",
    "JSON-Path-Guide": "JSONPath - XPath til JSON",
    "JSON-Purpose-003": "Det bruges primært til at overføre data mellem en server og webapplikation som et alternativ til XML, med indbygget understøttelse i JavaScript via metoderne `JSON.parse()` og `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "Hvordan passer JSON ind i JavaScript?",
    "JSON-Security-025": "Hvad er nogle sikkerhedsproblemer, når du arbejder med JSON?",
    "JSON-Security-Impact-026": "Potentielle sikkerhedsrisici omfatter JSON-injektionsangreb, hvor der sendes ondsindede data, der kan forårsage utilsigtet adfærd, når de parses/udføres.",
    "JSON-Security-Prevention-027": "For at mindske disse risici skal du altid rense brugerinput og bruge biblioteker, der sikkert parser JSON uden at udføre dets indhold (såsom JavaScripts indbyggede JSON.parse()). Undgå også at bruge eval() til at parse JSON.",
    "JSON-Serialization-016": "Hvad er JSON-serialisering og deserialisering?",
    "JSON-Serialization-Def-017": "JSON-serialisering er processen med at konvertere et JavaScript-objekt til en JSON-streng, mens deserialisering er det omvendte - at omdanne en JSON-streng tilbage til et JavaScript-objekt.",
    "JSON-Serialization-W3Schools": "JSON-serialisering på W3Schools",
    "JSON-Syntax-004": "Hvad er den grundlæggende syntaks for JSON?",
    "JSON-Syntax-Example-f005": "Et JSON-objekt består af nøgle-værdi-par omgivet af krøllede klammer {0}. Hver nøgle skal være en streng omsluttet af dobbelte anførselstegn, efterfulgt af et kolon og derefter dens værdi.",
    "JSON-Syntax-Reference": "MDN Web Docs på JSON",
    "JSON-Value-Types-006": "Værdier kan være strenge, tal, booleaner, arrays (omgivet af firkantede parenteser",
    "JSON-vs-XML-010": "Hvordan er JSON sammenlignet med XML?",
    "JSON-vs-XML-Article": "Sammenligning af JSON og XML",
    "MDN-JSON-in-JavaScript": "MDN Web Docs - Arbejder med JSON",
    "OWASP-JSON-Injection": "OWASP - JSON Injection",
    "XML-Advantages-012": "XML giver mere strukturfleksibilitet og understøtter navnerum, hvilket kan være gavnligt for komplekse dokumentstrukturer og interoperabilitet på tværs af systemer."
}
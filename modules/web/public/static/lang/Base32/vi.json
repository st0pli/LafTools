{
    "a4s6x": "Base32 hoạt động như thế nào?",
    "a8b7z": "Do đó, việc đệm chỉ cần thiết nếu nhóm bit cuối cùng được mã hóa không chia hết cho 40 bit (vì 8 ký tự Base32 đại diện cho 40 bit). Phần đệm sẽ bao gồm từ 0 đến 6 ký tự '=' ở cuối chuỗi được mã hóa.",
    "b8g2k": "Kịch bản sử dụng cho Base32",
    "c0v2p": "Các thao tác phổ biến với Base32",
    "d1x7v": "Một ví dụ khác là trong Git, nơi các đối tượng băm đôi khi được lưu trữ ở định dạng Base32 để tránh các vấn đề về kết thúc dòng và hạn chế tên tệp. Ngoài ra, HashiCorp Vault sử dụng Base32 để tạo khóa phái sinh.",
    "d9w7m": "Hơn nữa, vì nó chỉ sử dụng các chữ cái viết hoa nên nó không thể sử dụng tất cả các kết hợp có thể có của phân biệt chữ hoa chữ thường như một biện pháp bảo mật bổ sung như Base64 đôi khi thực hiện với việc gấp chữ hoa trong quá trình giải mã.",
    "e5c7r": "Base32 là sơ đồ mã hóa nhị phân thành văn bản biểu thị dữ liệu trong chuỗi ASCII bằng cách sử dụng tập hợp con gồm 32 ký tự. Nó được thiết kế để con người có thể đọc được và an toàn với URL.",
    "f0q4w": "Một tình huống sử dụng phổ biến là tạo khóa bí mật cho Xác thực hai yếu tố (2FA), trong đó các dịch vụ như Google Authenticator và Yubikey sử dụng bí mật được mã hóa Base32.",
    "f5a0s": "Ngoài ra, Base32 tạo ra đầu ra dài hơn nhưng có thể phù hợp hơn cho các ứng dụng cụ thể như tên tệp do thiếu các ký tự đặc biệt có thể xung đột với các quy tắc hệ thống tệp.",
    "g8r3e": "Nhược điểm chính của Base32 là hiệu quả không gian tương đối kém; nó mở rộng dữ liệu đầu vào nhiều hơn khoảng 25% so với Base64. Điều này có nghĩa là nó chiếm nhiều dung lượng lưu trữ hoặc băng thông hơn cho cùng một lượng dữ liệu được mã hóa.",
    "h4e1b": "Tính năng này cũng hữu ích trong các trường hợp trong đó các chuỗi chữ và số phân biệt chữ hoa chữ thường dễ xử lý hơn chuỗi thập lục phân hoặc base64, có thể chứa các ký tự không phải chữ và số có thể gây ra sự cố trong một số ngữ cảnh nhất định (như URL hoặc tên tệp).",
    "h9j3m": "Phần đệm trong Base32",
    "i9o7k": "Ưu điểm của Base32 so với Base64",
    "j1b5k": "Các hoạt động phổ biến nhất liên quan đến Base32 bao gồm mã hóa dữ liệu nhị phân thành chuỗi Base32 và giải mã chuỗi Base32 trở lại định dạng nhị phân ban đầu.",
    "k7g0n": "Trong Base32, cứ 5 bit dữ liệu đầu vào được ánh xạ tới một trong 32 ký tự từ bộ 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='.",
    "l1p9z": "Base32 là gì?",
    "m6d8b": "Mỗi giá trị 5 bit được biểu thị bằng một ký tự đơn, cho phép mã hóa và giải mã hiệu quả cho các hệ thống thích làm việc với octet (đơn vị 8 bit).",
    "n3e7r": "Lịch sử của Base32",
    "p9s5t": "Base32 được phát triển bởi Douglas Crockford, được biết đến với những đóng góp của ông cho JavaScript, vào năm 2001. Nó được tạo ra như một giải pháp thay thế đáng tin cậy hơn cho các mã hóa hiện có như Base64, đặc biệt đối với các tình huống yêu cầu biểu diễn dữ liệu nhị phân dựa trên văn bản.",
    "q2w5m": "Mục đích sử dụng Base32?",
    "r6tq9z": "<b>Ví dụ:</b> Để mã hóa 'TEST12345' trong Base32, bạn có thể sử dụng các thư viện như base32-encode trong Node.js hoặc các hàm tích hợp sẵn trong các ngôn ngữ khác như base64.b32encode của Python.",
    "s5t0n": "Phần đệm trong Base32 liên quan đến việc thêm các ký tự '=' để đảm bảo rằng đoạn dữ liệu được mã hóa cuối cùng vẫn chứa bội số của 8 bit. Tuy nhiên, không giống như Base64, phần đệm Base32 là tối thiểu vì mỗi ký tự Base32 đã mã hóa 5 bit.",
    "t8z1v": "Khi không còn đủ bit ở cuối để điền vào nhóm 5 bit đầy đủ, các ký tự đệm '=' sẽ được thêm vào. Ví dụ: một byte yêu cầu hai ký tự Base32 và chuỗi 3 byte sẽ cần bốn ký tự Base32.",
    "u3j9p": "Base32 thường được sử dụng khi bạn cần một bản trình bày văn bản nhỏ gọn của dữ liệu nhị phân có thể được nhập hoặc in mà không làm mất thông tin, như trong kiểm tra tính toàn vẹn của tệp, bộ đệm địa lý và tạo mật khẩu an toàn.",
    "y6t1n": "Nhược điểm của Base32",
    "z2x8c": "Base32 có ít sự mơ hồ về mặt hình ảnh hơn vì nó chỉ sử dụng chữ in hoa và chữ số, giúp đọc và chép lại bằng tay hoặc qua điện thoại dễ dàng hơn so với Base64 bao gồm '+', '/' và chữ thường.",
    "z6m1c": "Các biến thể sau này như z-base-32 đã được giới thiệu để cải thiện khả năng sử dụng, thay thế một số ký tự ít đáng nhớ hơn bằng những ký tự khác, nhưng đặc điểm kỹ thuật ban đầu của Crockford vẫn được sử dụng rộng rãi cho đến ngày nay."
}
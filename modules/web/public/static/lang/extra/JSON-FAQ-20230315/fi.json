{
    "JSON-Advantages-011": "JSON on yleensä pienempi ja nopeampi jäsentää kuin XML, joten se on ihanteellinen asiakas-palvelin-viestintään, jossa kaistanleveys ja nopeus ovat ratkaisevia.",
    "JSON-Basics-001": "Mikä on JSON?",
    "JSON-Beautify-007": "Mikä on JSON Beautification?",
    "JSON-Beautify-Def-008": "JSON-kauneus tarkoittaa prosessia, jossa JSON-tiedot muotoillaan luettavampaan muotoon, jossa on asianmukaiset sisennykset ja rivinvaihdot, mikä helpottaa analysointia ja virheenkorjausta.",
    "JSON-Beautify-Example-009": "Ennen: '{\\\"avain\\\":\\\"arvo\\\",\\\"array\\\":[1,2,3]}', jälkeen: '{\\n \\\"avain\\\": \\\"arvo\\\", \\n \\\"taulukko\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) on kevyt, tekstipohjainen tiedonsiirtomuoto, jota ihmisten on helppo lukea ja kirjoittaa ja koneiden jäsentää ja luoda.",
    "JSON-JavaScript-Support-020": "JavaScript tukee natiivisti JSON:ia globaalien objektien JSON.parse() ja JSON.stringify() kautta. Mikä tahansa kelvollinen JSON on myös kelvollinen JavaScript-kirjaimellinen objekti tai -taulukko, joka mahdollistaa saumattoman muuntamisen näiden kahden muodon välillä.",
    "JSON-JavaScript-Usage-021": "Verkkokehityksessä JSONia käytetään yleisesti AJAX-pyyntöihin, palvelinpuolen renderöintiin ja tietojen tallentamiseen (esim. paikalliseen tallennustilaan tai IndexedDB).",
    "JSON-Linting-022": "Mikä on JSON-linting ja miksi se on tärkeää?",
    "JSON-Linting-Benefit-024": "Linterit voivat estää virheellisen JSON:n aiheuttamat ajonaikaiset virheet, mikä varmistaa sujuvan tiedonsiirron ja säästää aikaa mahdollisten virheenkorjausten yhteydessä.",
    "JSON-Linting-Explanation-023": "JSON-linting on prosessi, jolla tarkistetaan, noudattaako JSON-dokumentti JSON-määrittelyä. Se auttaa tunnistamaan syntaksivirheet ennen tietojen jäsentämistä.",
    "JSON-Path-013": "Mikä on JSON-polku?",
    "JSON-Path-Example-015": "$.store.book[0].title valitsee ensimmäisen kirjan nimen JSON-objektissa, jossa on kirjataulukkoa sisältävä kauppa.",
    "JSON-Path-Explanation-014": "JSON-polku on kyselykieli, joka on samanlainen kuin XPath for XML, jonka avulla voit poimia tietoja JSON-asiakirjoista polun kaltaisella merkinnällä.",
    "JSON-Path-Guide": "JSONPath – XPath JSONille",
    "JSON-Purpose-003": "Sitä käytetään ensisijaisesti tiedon siirtämiseen palvelimen ja verkkosovelluksen välillä vaihtoehtona XML:lle JavaScriptin alkuperäisellä tuella JSON.parse()- ja JSON.stringify()-menetelmien kautta.",
    "JSON-Scope-in-JavaScript-019": "Miten JSON sopii JavaScriptiin?",
    "JSON-Security-025": "Mitä turvallisuusongelmia liittyy JSON:n kanssa työskentelyyn?",
    "JSON-Security-Impact-026": "Mahdollisia turvallisuusriskejä ovat JSON-injektiohyökkäykset, joissa lähetetään haitallisia tietoja, jotka voivat aiheuttaa tahatonta toimintaa jäsennettäessä/suorittaessa.",
    "JSON-Security-Prevention-027": "Näiden riskien vähentämiseksi puhdista aina käyttäjän syöte ja käytä kirjastoja, jotka jäsentävät JSON-koodin turvallisesti suorittamatta sen sisältöä (kuten JavaScriptin sisäänrakennettu JSON.parse()). Vältä myös eval():n käyttöä JSON:n jäsentämiseen.",
    "JSON-Serialization-016": "Mitä on JSON-serialisointi ja deserialisointi?",
    "JSON-Serialization-Def-017": "JSON-serialisointi on prosessi, jossa JavaScript-objekti muunnetaan JSON-merkkijonoksi, kun taas deserialisointi on päinvastainen – JSON-merkkijonon muuttaminen takaisin JavaScript-objektiksi.",
    "JSON-Serialization-W3Schools": "JSON-sarjasointi W3Schoolsissa",
    "JSON-Syntax-004": "Mikä on JSONin perussyntaksi?",
    "JSON-Syntax-Example-f005": "JSON-objekti koostuu avainarvopareista, jotka on suljettu aaltosulkeisiin {0}. Jokaisen avaimen on oltava lainausmerkkien sisällä oleva merkkijono, jota seuraa kaksoispiste ja sitten sen arvo.",
    "JSON-Syntax-Reference": "MDN Web Docs JSONissa",
    "JSON-Value-Types-006": "Arvot voivat olla merkkijonoja, numeroita, booleaneja, taulukoita (hakasulkeissa",
    "JSON-vs-XML-010": "Miten JSON verrataan XML:ään?",
    "JSON-vs-XML-Article": "JSON- ja XML-vertailu",
    "MDN-JSON-in-JavaScript": "MDN Web Docs - Työskentely JSONin kanssa",
    "OWASP-JSON-Injection": "OWASP - JSON-injektio",
    "XML-Advantages-012": "XML tarjoaa enemmän rakenteellista joustavuutta ja tukee nimiavaruuksia, mikä voi olla hyödyllistä monimutkaisille asiakirjarakenteille ja järjestelmien yhteentoimivuudelle."
}
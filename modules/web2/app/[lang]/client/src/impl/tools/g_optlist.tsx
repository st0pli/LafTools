 // DO NOT TOUCH THIS FILE, AUTO GENERATED BY SYSTEM
//    Copyright
    import {AppOpFnMapType} from './d_meta';
    
   export  const AppOptFnMap ={
CSSBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("3TMOUkhZl", "Format {0}", "CSS"),
            optDescription:Dot(
                "md2aO2NaJITm",
                "Indents and prettifies Cascading Style Sheets (CSS) code, making it easier to read and understand.",
            ),
            }
        },
CSSMinify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("-nL_B5PoN", "Compresses {0}", "CSS"),
      optDescription:Dot(
        "Y__Zb1_4Q",
        "Minifies Cascading Style Sheets (CSS) code, removing all unnecessary characters."
      ),
            }
        },
CSVToJSON:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("tZINaUR4b", "CSV to JSON"),
      optDescription:Dot("raTAuBwBz", "Converts a CSV file to JSON format."),
            }
        },
FromBase32:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("rVdu", "Decode {0}", "Base32"),
            optDescription:Dot(
                "JiUE8",
                "This operation decodes data from an ASCII {0} string back into its raw format.",
                "Base32"
            ),
            }
        },
FromBase45:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("rVqlu", "Decode {0}", "Base45"),
            optDescription:Dot(
                "JiUE8",
                "This operation decodes data from an ASCII {0} string back into its raw format.",
                "Base45"
            ),
            }
        },
FromBase58:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("L9qbQku", "Decode {0}", "Base58"),
            optDescription:Dot(
                "JdqidUE8",
                "This operation decodes data from an ASCII string (with an alphabet of your choosing, presets included) back into its raw form.",
            ),
            }
        },
FromBase62:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("L9bQku", "Decode {0}", "Base62"),
            optDescription:Dot(
                "JdqiUE8",
                "This operation decodes data from an ASCII string (with an alphabet of your choosing, presets included) back into its raw form.",
            ),
            }
        },
FromBase64:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("rVqlu", "Decode {0}", "Base64"),
      optDescription:Dot(
        "1k_44",
        "This operation decodes data from an ASCII Base64 string back into its raw format.",
      ),
            }
        },
FromBase85:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("rVqlu", "Decode {0}", "Base85"),
            optDescription:Dot(
                "wj3VS",
                "This operation decodes data from an ASCII {0} string back into its raw format.",
                "Base85"
            ),
            }
        },
FromBCD:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("iLYwoR0xe", "From {0}", "BCD"),
      optDescription:Dot("0YKce", "Converts a Binary-Coded Decimal (BCD) string to a decimal number."),
            }
        },
FromBinary:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("fromBinarKezpBENwt3", "From {0}",Dot("QB9HtMaFb", 'Binary')),
      optDescription:Dot("fromBinary.text.1b6c3", "Converts a binary string back into its raw form."),
            }
        },
FromCharcode:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("Ec-O2fmpc", "From Charcode"),
      optDescription:Dot("VivVgJcwO", "Converts unicode character codes back into text."),
            }
        },
FromDecimal:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("yEZk8Ll0k", "From Decimal"),
      optDescription:Dot("K0ATr9EhO", "Converts the data from an ordinal integer array back into its raw form.<br><br>e.g. <code>72 101 108 108 111</code> becomes <code>Hello</code>"),
            }
        },
FromHex:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("5RPdtVff3", "From Hex"),
      optDescription:Dot("gms7_9n5v", "Converts a hexadecimal byte string back into its raw value."),
            }
        },
FromHexdump:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("6h0GPkCHT", "From {0}",Dot("uVF7T7TEt", 'Hexdump')),
      optDescription:Dot("rWF_pLlje", "Attempts to convert a hexdump back into raw data."),
            }
        },
FromHTMLEntity:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("BzA-pnK2Q", "From HTML Entity"),
      optDescription:Dot("QzVvoxTOo", "Converts HTML entities back to characters"),
            }
        },
FromMessagePack:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("8_jx_2zEw", "From {0}",Dot("j5KxYotVC", 'MessagePack')),
      optDescription:Dot("8mxv4e6pz", "Converts MessagePack encoded data to JSON. MessagePack is a computer data interchange format. It is a binary form for representing simple data structures like arrays and associative arrays."),
            }
        },
FromMorseCode:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("FJwkT9Tzu", "From Morse Code"),
      optDescription:Dot("1QDzaLKp0", "Translates Morse Code into (upper case) alphanumeric characters."),
            }
        },
FromOctal:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("1-geODUv-", "From {0}",Dot("WQ7oUdMYD", 'Octal')),
      optDescription:Dot("vStNBMZ5t", "Converts an octal byte string back into its raw value.<br><br>e.g. <code>316 223 316 265 316 271 316 254 40 317 203 316 277 317 205</code> becomes the UTF-8 encoded string <code>Γειά σου</code>"),
            }
        },
GenericCodeBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("generic-NI-UFPTe0", "Beautify Generic Code"),
            optDescription:Dot(
                "generic-code-beautify.desc.2b3c",
                "This operation formats code in various programming languages to improve readability by applying consistent indentation, line breaks, and adhering to language-specific style guidelines.",
                ""
            ),
            }
        },
GraphQLBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("graphql.format.btn", "Format {0}", 'GraphQL'),
            optDescription:Dot(
                "graphql.format.desc",
                "Indents and prettifies GraphQL code.",
            ),
            }
        },
HTMLBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("yMZW-figFKsdf", "Format {0}", "HTML"),
            optDescription:Dot(
                "html-beautify.desc.2a5f9",
                "Beautifies the input XML by adding indentation and line breaks to make it easier to read."
            ),
            }
        },
HTMLMinify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("yd-K99JOG91Z", "Minify {0}", 'HTML'),
      optDescription:Dot(
        "xml-bdeautify.ktOtAx6Rd.2a5f9",
        "Minify HTML Code"
      ),
            }
        },
JavaScriptBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("6UICxHdzVR.name", "Format {0}", "JavaScript"),
            optDescription:Dot(
                "WFUWzv_px",
                "Parses and pretty prints valid JavaScript code. Also works with JavaScript Object Notation (JSON).",
            ),
            }
        },
JavaScriptMinify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("e3WgQaZlb", "Compresses {0}", "JavaScript"),
      optDescription:Dot(
        "ojCWEFdVe",
        "Compresses JavaScript code, removing all unnecessary characters.",
      ),
            }
        },
JSONBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("json-beautify.text.93kq", "Format {0}", 'JSON'),
            optDescription:Dot(
                "json-beautify.desc.0912",
                "This operation formats JSON data to improve readability by adding proper indentation, line breaks, and sorting keys consistently.",
            ),
            }
        },
JSONEscape:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("ddq.tdqwq", "Escape {0}", "JSON"),
      optDescription:Dot(
        "EOdsdf",
        "Escapes special characters in JSON code."
      ),
            }
        },
JSONMinify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("meeMC1Uk7.text.93kq", "Minify {0}", "JSON"),
      optDescription:Dot(
        "EO6Qv5dCA",
        "Minifies JSON code, reduce the bundle size of your JSON code."
      ),
            }
        },
JSONToCSV:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("opqdkqw", "JSON to CSV"),
      optDescription:Dot("opddkqw", "Converts JSON data to a CSV based on the definition in RFC 4180."),
            }
        },
JSONUnescape:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("sd.texdqw", "Unescape {0}", "JSON"),
      optDescription:Dot(
        "EOdsCA",
        "Unescapes special characters in JSON code."
      ),
            }
        },
LessBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("less.format.btn", "Format {0}", 'Less'),
            optDescription:Dot(
                "less.format.desc",
                "Indents and prettifies Less code.",
            ),
            }
        },
MarkdownBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("3TMOUekhZl", "Format {0}", "Markdown"),
            optDescription:Dot(
                "md2aO2NaJqITm",
                "Indents and prettifies Markdown document.",
            ),
            }
        },
MD2:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("md2.text.192d3", "Generate {0} Hash", "MD2"),
      optDescription:Dot(
        "md2.desc.1039",
        "This operation hashes data into an {0} hash.",
        "MD2"
      ),
            }
        },
MD4:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("md4.text.192d3", "Generate {0} Hash", "MD4"),
      optDescription:Dot(
        "md4.desc.1039",
        "This operation hashes data into an {0} hash.",
        "MD4"
      ),
            }
        },
MD5:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("md5.textiDjMIo", "Generate {0} Hash", "MD5"),
      optDescription:Dot(
        "md5.desc.rxsHq",
        "This operation hashes data into an {0} hash.",
        "MD5"
      ),
            }
        },
MD6:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("md6.text.192d3", "Generate {0} Hash", "MD6"),
      optDescription:Dot(
        "md6.desc.1039",
        "This operation hashes data into an {0} hash.",
        "MD6"
      ),
            }
        },
RemoveLineNumbers:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("OrCD8PqwH", "Remove line numbers"),
      optDescription:Dot("Vc40-vfod", "Removes line numbers from the output if they can be trivially detected."),
            }
        },
RemoveWhitespace:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("U-SKci0LP", "Remove whitespace"),
      optDescription:Dot("8hlgTVznY", "Optionally removes all spaces, carriage returns, line feeds, tabs and form feeds from the input data.<br><br>This operation also supports the removal of full stops which are sometimes used to represent non-printable bytes in ASCII output."),
            }
        },
Reverse:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("f7Fp-L9V-", "Reverse"),
      optDescription:Dot("wmuD_KXJ2", "Reverses the input string."),
            }
        },
SCSSBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("scss.format.btn", "Format {0}", 'SCSS'),
            optDescription:Dot(
                "scss.format.desc",
                "Indents and prettifies SCSS code.",
            ),
            }
        },
SHA0:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName: "SHA0",
      optDescription:Dot("LgJAz6Xwr", "SHA-0 is a retronym applied to the original version of the 160-bit hash function published in 1993 under the name 'SHA'. It was withdrawn shortly after publication due to an undisclosed 'significant flaw' and replaced by the slightly revised version SHA-1. The message digest algorithm consists, by default, of 80 rounds."),
            }
        },
SHA1:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName: "SHA1",
      optDescription:Dot("B_ekZSOiu", "The SHA (Secure Hash Algorithm) hash functions were designed by the NSA. SHA-1 is the most established of the existing SHA hash functions and it is used in a variety of security applications and protocols.<br><br>However, SHA-1's collision resistance has been weakening as new attacks are discovered or improved. The message digest algorithm consists, by default, of 80 rounds."),
            }
        },
SHA2:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName: "SHA2",
      optDescription:Dot("UAmIRsSWN", "The SHA-2 (Secure Hash Algorithm 2) hash functions were designed by the NSA. SHA-2 includes significant changes from its predecessor, SHA-1. The SHA-2 family consists of hash functions with digests (hash values) that are 224, 256, 384 or 512 bits: SHA224, SHA256, SHA384, SHA512.<br><br><ul><li>SHA-512 operates on 64-bit words.</li><li>SHA-256 operates on 32-bit words.</li><li>SHA-384 is largely identical to SHA-512 but is truncated to 384 bytes.</li><li>SHA-224 is largely identical to SHA-256 but is truncated to 224 bytes.</li><li>SHA-512/224 and SHA-512/256 are truncated versions of SHA-512, but the initial values are generated using the method described in Federal Information Processing Standards (FIPS) PUB 180-4.</li></ul> The message digest algorithm for SHA256 variants consists, by default, of 64 rounds, and for SHA512 variants, it is, by default, 160."),
            }
        },
SHA224:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optDescription:Dot("OMrIvzpf5", "The SHA-3 (Secure Hash Algorithm 3) hash functions were released by NIST on August 5, 2015. Although part of the same series of standards, SHA-3 is internally quite different from the MD5-like structure of SHA-1 and SHA-2.<br><br>SHA-3 is a subset of the broader cryptographic primitive family Keccak designed by Guido Bertoni, Joan Daemen, Micha\xebl Peeters, and Gilles Van Assche, building upon RadioGat\xfan."),
      optName: "SHA224",
            }
        },
SHA256:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optDescription:Dot("OMrIvzpf5", "The SHA-3 (Secure Hash Algorithm 3) hash functions were released by NIST on August 5, 2015. Although part of the same series of standards, SHA-3 is internally quite different from the MD5-like structure of SHA-1 and SHA-2.<br><br>SHA-3 is a subset of the broader cryptographic primitive family Keccak designed by Guido Bertoni, Joan Daemen, Micha\xebl Peeters, and Gilles Van Assche, building upon RadioGat\xfan."),
      optName: "SHA256",
            }
        },
SHA3:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optDescription:Dot("OMrIvzpf5", "The SHA-3 (Secure Hash Algorithm 3) hash functions were released by NIST on August 5, 2015. Although part of the same series of standards, SHA-3 is internally quite different from the MD5-like structure of SHA-1 and SHA-2.<br><br>SHA-3 is a subset of the broader cryptographic primitive family Keccak designed by Guido Bertoni, Joan Daemen, Micha\xebl Peeters, and Gilles Van Assche, building upon RadioGat\xfan."),
      optName: "SHA3",
            }
        },
SHA384:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optDescription:Dot("OMrIvzpf5", "The SHA-3 (Secure Hash Algorithm 3) hash functions were released by NIST on August 5, 2015. Although part of the same series of standards, SHA-3 is internally quite different from the MD5-like structure of SHA-1 and SHA-2.<br><br>SHA-3 is a subset of the broader cryptographic primitive family Keccak designed by Guido Bertoni, Joan Daemen, Micha\xebl Peeters, and Gilles Van Assche, building upon RadioGat\xfan."),
      optName: "SHA384",
            }
        },
SHA512:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optDescription:Dot("OMrIvzpf5", "The SHA-3 (Secure Hash Algorithm 3) hash functions were released by NIST on August 5, 2015. Although part of the same series of standards, SHA-3 is internally quite different from the MD5-like structure of SHA-1 and SHA-2.<br><br>SHA-3 is a subset of the broader cryptographic primitive family Keccak designed by Guido Bertoni, Joan Daemen, Micha\xebl Peeters, and Gilles Van Assche, building upon RadioGat\xfan."),
      optName: "SHA512",
            }
        },
SQLBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("json-beautify.name.0912", "Format {0}", 'SQL'),
            optDescription:Dot(
                "rE6fUsSGl",
                "Indents and prettifies Structured Query Language (SQL) code."
            ),
            }
        },
SQLMinify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("6wdtJ4vmg.name.0912", "Minify {0}", "SQL"),
      optDescription:Dot(
        "LxaEFHbfa",
        "Minifies SQL code, reduce the bundle size of your SQL code.",
      ),
            }
        },
Tail:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optDescription:Dot("2Va7Txc-V", "Like the UNIX tail utility.<br>Gets the last n lines.<br>Optionally you can select all lines after line n by entering a negative value for n.<br>The delimiter can be changed so that instead of lines, fields (i.e. commas) are selected instead."),
      optName:Dot("y46w7Q9TH", "Tail"),
            }
        },
ToBase32:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("M3ytc", "Encode {0}", "Base32"),
            optDescription:Dot(
                "BGd7dP9",
                "This operation encodes raw data into an ASCII {0} string.",
                "Base32"
            ),
            }
        },
ToBase45:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("M3ytc", "Encode {0}", "Base45"),
            optDescription:Dot(
                "BGd7dP9",
                "This operation encodes raw data into an ASCII {0} string.",
                "Base45"
            ),
            }
        },
ToBase58:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("M3qytc", "Encode {0}", "Base58"),
            optDescription:Dot(
                "BGdd7dP9",
                "This operation encodes raw data into an ASCII {0} string.",
                "Base58"
            ),
            }
        },
ToBase62:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("M3ytc", "Encode {0}", "Base62"),
            optDescription:Dot(
                "BGd7dP9",
                "This operation encodes raw data into an ASCII {0} string.",
                "Base62"
            ),
            }
        },
ToBase64:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("M3ytc", "Encode {0}", "Base64"),
      optDescription:Dot(
        "BGd7P9",
        "This operation encodes raw data into an ASCII Base64 string.",
      ),
            }
        },
ToBase85:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("M3ytc", "Encode {0}", "Base85"),
            optDescription:Dot(
                "nodBw",
                "This operation encodes raw data into an ASCII {0} string.",
                "Base85"
            ),
            }
        },
ToBCD:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("X6cA6FaLw", 'To {0}', "BCD"),
      optDescription:Dot("98KcL", "Converts a decimal number to Binary-Coded Decimal (BCD)."),
            }
        },
ToBinary:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("x_XQ5afPY", "To Binary"),
      optDescription:Dot("0kAE9UfwP", "Converts input data to binary"),
            }
        },
ToCamelCase:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("XWG2pQTu-", "To Camel case"),
      optDescription:Dot("r0NL0Semh", "Converts the input string to camel case.\n<br><br>\nCamel case is all lower case except letters after word boundaries which are uppercase.\n<br><br>\ne.g. thisIsCamelCase\n<br><br>\n'Attempt to be context aware' will make the operation attempt to nicely transform variable and function names."),
            }
        },
ToCharcode:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("hQX9jlm9F", "To {0}",Dot("EMxvJXE9u", 'Charcode')),
      optDescription:Dot("zrovzToIM", "Converts text to its unicode character code equivalent"),
            }
        },
ToDecimal:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("3g_qIW2dZ", "To Decimal"),
      optDescription:Dot("oINAgNij0", "Converts the input data to an ordinal integer array.<br><br>e.g. <code>Hello</code> becomes <code>72 101 108 108 111</code>"),
            }
        },
ToHex:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("rZL0xuQu2", "To {0}",Dot("0yNpSzyRG", 'Hex')),
      optDescription:Dot("ISMDLUbAc", "Converts the input string to hexadecimal bytes separated by the specified delimiter.<br><br>e.g. The UTF-8 encoded string <code>ÎÎµÎ¹Î¬ ÏÎ¿Ï</code> becomes <code>ce 93 ce b5 ce b9 ce ac 20 cf 83 ce bf cf 85 0a</code>"),
            }
        },
ToHexdump:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("DBw_XZTr9", "To {0}",Dot("w1eV6tcKX", 'Hexdump')),
      optDescription:Dot("ChQlUi-RC", "Creates a hexdump of the input data, displaying both the hexadecimal values of each byte and an ASCII representation alongside."),
            }
        },
ToHTMLEntity:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("dXHovRa7X", "To HTML Entity"),
      optDescription:Dot("_B_gk42VH", "Converts characters to HTML entities"),
            }
        },
ToKebabCase:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("siDRGnz0u", "To Kebab case"),
      optDescription:Dot("Qar4RR29k", "Converts the input string to kebab case.\n<br><br>\nKebab case is all lower case with dashes as word boundaries.\n<br><br>\ne.g. this-is-kebab-case\n<br><br>\n'Attempt to be context aware' will make the operation attempt to nicely transform variable and function names."),
            }
        },
ToLowerCase:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("r0aK8uIdB", "To Lower case"),
      optDescription:Dot("bCBpnCWr4", "Converts every character in the input to lower case."),
            }
        },
ToMessagePack:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("XAJIZiKtp", "To {0}",Dot("uIuU_n418", 'MessagePack')),
      optDescription:Dot("FsrRIxrjL", "Converts JSON to MessagePack encoded byte buffer. MessagePack is a computer data interchange format. It is a binary form for representing simple data structures like arrays and associative arrays."),
            }
        },
ToMorseCode:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("ACTG_e6y2", "To {0}",Dot("MYqdqw071", "Morse Code")),
      optDescription:Dot("y91lqtJbW", "Translates alphanumeric characters into International Morse Code.<br><br>Ignores non-Morse characters.<br><br>e.g. <code>SOS</code> becomes <code>... --- ...</code>"),
            }
        },
ToOctal:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("-AaO4jF3Q", "To {0}",Dot("hAK6Q4uV0", 'Octal')),
      optDescription:Dot("GqolnOrbq", "Converts the input string to octal bytes separated by the specified delimiter.<br><br>e.g. The UTF-8 encoded string <code>Γειά σου</code> becomes <code>316 223 316 265 316 271 316 254 40 317 203 316 277 317 205</code>"),
            }
        },
ToSnakeCase:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("jFdaRPHE6", "To {0}",Dot("SL7RJN-sdv6", "Snake case")),
      optDescription:Dot("D10ddoJDo", "Converts the input string to snake case.\n<br><br>\nSnake case is all lower case with underscores as word boundaries.\n<br><br>\ne.g. this_is_snake_case\n<br><br>\n'Attempt to be context aware' will make the operation attempt to nicely transform variable and function names."),
            }
        },
ToUpperCase:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("qMhNfAmTL", "To Upper case"),
      optDescription:Dot("H1ARNsz-l", "Converts the input string to upper case, optionally limiting scope to only the first character in each word, sentence or paragraph."),
            }
        },
TypeScriptBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("typescript.format.btn", "Format {0}", 'TypeScript'),
            optDescription:Dot(
                "typescript.format.desc",
                "Indents and prettifies TypeScript code.",
            ),
            }
        },
URLDecode:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("btUVQxdq8uc", "{0} Decode", 'URL'),
      optDescription:Dot("btUVQx8uc", "Converts URI/URL percent-encoded characters back to their raw values."),
            }
        },
URLEncode:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("btUdVQx8duc", "{0} Encode", 'URL'),
      optDescription:Dot("btUVqx8uc", "Encodes problematic characters into percent-encoding, a format supported by URIs/URLs."),
            }
        },
XMLBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                        optName:Dot("yMZW-GEgf", "Format {0}", 'XML'),
            optDescription:Dot(
                "xml-beautify.desc.2a5f9",
                "This operation formats XML data to improve readability by adding proper indentation, line breaks, and ensuring well-formed structure.",
                ""
            ),
            }
        },
XMLMinify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("yd-GEgf", "Minify {0}", 'XML'),
      optDescription:Dot(
        "xml-bdeautify.desc.2a5f9",
        "Minify XML Code"
      ),
            }
        },
YAMLBeautify:({Dot})=>{
            return {
                // DO NOT CHANGE THIS PART AS THIS WHOLE FILE IS GENERATED BY SYSTEM
                  optName:Dot("yaml.format.btn", "Format {0}", 'YAML'),
      optDescription:Dot(
        "yaml-beautify.desc.2a5f9",
        "This operation formats YAML data to improve readability by adding proper indentation, line breaks, and ensuring well-formed structure.",
        ""
      ),
            }
        }
    } satisfies AppOpFnMapType
    export let getAppOptFnMap=():AppOpFnMapType=>{
        return AppOptFnMap
    } 
export type AppOpFnMapTypeKeys = keyof typeof AppOptFnMap;
    
    
    // DO NOT TOUCH THIS FILE, AUTO GENERATED BY SYSTEM
export    type Tool2PageMap = {
        [key: string]: {
            pagePath: string[]
        }[]
    }

// DO NOT TOUCH THIS FILE, AUTO GENERATED BY SYSTEM
    export const appTool2PageMap:Tool2PageMap = {
    "JSONBeautify": [
        {
            "pagePath": [
                "formatters",
                "jsonformatter"
            ]
        }
    ],
    "JavaScriptBeautify": [
        {
            "pagePath": [
                "formatters",
                "javascriptformatter"
            ]
        }
    ],
    "HTMLBeautify": [
        {
            "pagePath": [
                "formatters",
                "htmlformatter"
            ]
        }
    ],
    "XMLBeautify": [
        {
            "pagePath": [
                "formatters",
                "xmlformatter"
            ]
        }
    ],
    "YAMLBeautify": [
        {
            "pagePath": [
                "formatters",
                "yamlformatter"
            ]
        }
    ],
    "CSSBeautify": [
        {
            "pagePath": [
                "formatters",
                "cssformatter"
            ]
        }
    ],
    "SQLBeautify": [
        {
            "pagePath": [
                "formatters",
                "sqlformatter"
            ]
        }
    ],
    "JSONMinify": [
        {
            "pagePath": [
                "formatters",
                "jsonminify"
            ]
        }
    ],
    "XMLMinify": [
        {
            "pagePath": [
                "formatters",
                "xmlminify"
            ]
        }
    ],
    "JavaScriptMinify": [
        {
            "pagePath": [
                "formatters",
                "javascriptminify"
            ]
        }
    ],
    "HTMLMinify": [
        {
            "pagePath": [
                "formatters",
                "htmlminify"
            ]
        }
    ],
    "CSSMinify": [
        {
            "pagePath": [
                "formatters",
                "cssminify"
            ]
        }
    ],
    "SQLMinify": [
        {
            "pagePath": [
                "formatters",
                "sqlminify"
            ]
        }
    ],
    "MarkdownBeautify": [
        {
            "pagePath": [
                "formatters",
                "markdownformatter"
            ]
        }
    ],
    "TypeScriptBeautify": [
        {
            "pagePath": [
                "formatters",
                "typescriptformatter"
            ]
        }
    ],
    "GraphQLBeautify": [
        {
            "pagePath": [
                "formatters",
                "graphqlformatter"
            ]
        }
    ],
    "SCSSBeautify": [
        {
            "pagePath": [
                "formatters",
                "scssformatter"
            ]
        }
    ],
    "LessBeautify": [
        {
            "pagePath": [
                "formatters",
                "lessformatter"
            ]
        }
    ],
    "HTMLEntity": [
        {
            "pagePath": [
                "formatters",
                "htmlentity"
            ]
        }
    ],
    "edc_base64": [
        {
            "pagePath": [
                "codecs",
                "base64"
            ]
        },
        {
            "pagePath": [
                "encoding",
                "base64"
            ]
        }
    ],
    "URLEncode": [
        {
            "pagePath": [
                "codecs",
                "urlencoder"
            ]
        }
    ],
    "md5": [
        {
            "pagePath": [
                "codecs",
                "md5"
            ]
        }
    ],
    "SHA224": [
        {
            "pagePath": [
                "codecs",
                "sha224"
            ]
        }
    ],
    "SHA256": [
        {
            "pagePath": [
                "codecs",
                "sha256"
            ]
        }
    ],
    "SHA384": [
        {
            "pagePath": [
                "codecs",
                "sha384"
            ]
        }
    ],
    "SHA512": [
        {
            "pagePath": [
                "codecs",
                "sha512"
            ]
        }
    ],
    "FromHexdump": [
        {
            "pagePath": [
                "codecs",
                "fromhexdump"
            ]
        },
        {
            "pagePath": [
                "encoding",
                "FromHexdump"
            ]
        },
        {
            "pagePath": [
                "parsers",
                "fromhexdump"
            ]
        }
    ],
    "ToHexdump": [
        {
            "pagePath": [
                "codecs",
                "tohexdump"
            ]
        },
        {
            "pagePath": [
                "encoding",
                "ToHexdump"
            ]
        },
        {
            "pagePath": [
                "parsers",
                "tohexdump"
            ]
        }
    ],
    "JSONEscape": [
        {
            "pagePath": [
                "encoding",
                "JSONEscape"
            ]
        },
        {
            "pagePath": [
                "encoding",
                "JSONUnescape"
            ]
        }
    ],
    "URLToEncode": [
        {
            "pagePath": [
                "encoding",
                "encodeuri"
            ]
        }
    ],
    "URLToDecode": [
        {
            "pagePath": [
                "encoding",
                "decodeuri"
            ]
        }
    ],
    "edc_base32": [
        {
            "pagePath": [
                "encoding",
                "base32"
            ]
        }
    ],
    "edc_base45": [
        {
            "pagePath": [
                "encoding",
                "base45"
            ]
        }
    ],
    "edc_base58": [
        {
            "pagePath": [
                "encoding",
                "base58"
            ]
        }
    ],
    "edc_base62": [
        {
            "pagePath": [
                "encoding",
                "base62"
            ]
        }
    ],
    "edc_base85": [
        {
            "pagePath": [
                "encoding",
                "base85"
            ]
        }
    ],
    "JSONToCSV": [
        {
            "pagePath": [
                "converters",
                "json2csv"
            ]
        }
    ],
    "CSVToJSON": [
        {
            "pagePath": [
                "converters",
                "csv2json"
            ]
        }
    ],
    "SnakeCase": [
        {
            "pagePath": [
                "converters",
                "snakecase"
            ]
        }
    ],
    "CamelCase": [
        {
            "pagePath": [
                "converters",
                "camelcase"
            ]
        }
    ],
    "KebabCase": [
        {
            "pagePath": [
                "converters",
                "kebabcase"
            ]
        }
    ],
    "LowerCase": [
        {
            "pagePath": [
                "converters",
                "uplowcase"
            ]
        }
    ],
    "MessagePack": [
        {
            "pagePath": [
                "converters",
                "messagepack"
            ]
        }
    ],
    "CharCode": [
        {
            "pagePath": [
                "converters",
                "charcode"
            ]
        }
    ],
    "Binary": [
        {
            "pagePath": [
                "converters",
                "binary"
            ]
        }
    ],
    "Octal": [
        {
            "pagePath": [
                "converters",
                "octal"
            ]
        }
    ],
    "Decimal": [
        {
            "pagePath": [
                "converters",
                "decimal"
            ]
        }
    ]
}
// DO NOT TOUCH THIS FILE, AUTO GENERATED BY SYSTEM
    
{
    "MySQL-Performance-Tuning": "Tipy pro ladění výkonu MySQL",
    "OWASP-SQL-Injection": "OWASP SQL Injection Guide",
    "SQL-Basics-001": "Co je SQL?",
    "SQL-Beautifier-Example": "Online formátovač SQL",
    "SQL-Beautify-006": "Co je SQL Beautification?",
    "SQL-Beautify-Def-007": "Zkrášlení SQL je proces formátování kódu SQL za účelem zlepšení čitelnosti použitím konzistentních konvencí odsazování, mezer a velkých a malých písmen.",
    "SQL-Beautify-Purpose-008": "Stejně jako obecné zkrášlovače kódu pomáhá vývojářům snadněji porozumět složitým dotazům a udržovat konzistenci napříč jejich skripty SQL nebo projekty.",
    "SQL-Commands-005": "SQL obsahuje několik typů příkazů: DDL (jazyk pro definici dat - CREATE, ALTER, DROP), DML (jazyk pro manipulaci s daty - SELECT, INSERT, UPDATE, DELETE) a DCL (jazyk pro kontrolu dat - GRANT, REVOKE).",
    "SQL-Components-004": "Jaké jsou hlavní součásti SQL?",
    "SQL-Components-Wikipedia": "SQL Components na Wikipedii",
    "SQL-Def-002": "SQL (Structured Query Language) je standardní programovací jazyk pro správu a dotazování relačních databází.",
    "SQL-Indexing-016": "Co jsou indexy v SQL a proč jsou důležité?",
    "SQL-Indexing-Benefit-018": "Vytvoření indexu na často používaných sloupcích pro podmínky klauzule WHERE výrazně urychluje dotazy SELECT, ale může zpomalit operace INSERT, UPDATE a DELETE kvůli nutnosti udržovat strukturu indexu.",
    "SQL-Indexing-Explanation-017": "Indexy jsou datové struktury (např. B-stromy), které zlepšují rychlost operací načítání dat v tabulce tím, že umožňují databázovému stroji rychle vyhledávat řádky na základě konkrétních hodnot sloupců.",
    "SQL-Indexing-MDN": "Webové dokumenty MDN na indexech",
    "SQL-Injection-019": "Co je SQL Injection a jak tomu lze zabránit?",
    "SQL-Injection-Def-020": "SQL Injection je bezpečnostní chyba, kdy útočník může vložit škodlivý kód SQL do vstupních polí za účelem manipulace nebo extrahování dat z databáze.",
    "SQL-Injection-Prevention-021": "Metody prevence zahrnují použití parametrizovaných dotazů, připravených příkazů nebo knihoven ORM, které automaticky uniknou vstupu uživatele, stejně jako omezení oprávnění k databázi a uplatnění principů nejmenších oprávnění.",
    "SQL-Joins-011": "Co jsou JOINy ​​v SQL?",
    "SQL-Joins-Explanation-012": "JOIN se používají ke spojení řádků ze dvou nebo více tabulek na základě souvisejícího sloupce mezi nimi. Např. INNER JOIN, LEFT JOIN, RIGHT JOIN a FULL JOIN.",
    "SQL-Joins-Tutorial": "Výukový program připojení SQL",
    "SQL-Perf-Tuning-Methods-024": "Mezi další techniky patří rozdělování velkých tabulek, používání vhodných datových typů a ukládání výsledků do mezipaměti, je-li to možné.",
    "SQL-Perf-Tuning-Overview-023": "Optimalizace výkonu dotazů SQL zahrnuje analýzu prováděcích plánů, vhodné indexování, minimalizaci zbytečných spojení a poddotazů a psaní účinných klauzulí WHERE.",
    "SQL-Performance-Tuning-022": "Jak mohu optimalizovat výkon dotazů SQL?",
    "SQL-Purpose-003": "Používá se k vytváření, čtení, aktualizaci, odstraňování a dotazování na data v tabulkách a také ke správě struktury databáze a oprávnění.",
    "SQL-Select-009": "Jak napíšu základní příkaz SELECT?",
    "SQL-Select-Example-0210": "Jednoduchý příkaz SELECT načte data z tabulky. Například: {0}', 'SELECT sloupec1, sloupec2 FROM moje_tabulka;",
    "SQL-Transactions-013": "Co jsou transakce v SQL?",
    "SQL-Transactions-Def-014": "Transakce je logická jednotka práce, která obsahuje jeden nebo více příkazů SQL. Zajišťuje, že všechny operace v něm jsou úspěšně dokončeny (atomicita), izolovány od ostatních transakcí a odolné i v případě selhání systému.",
    "SQL-Transactions-Example-015": "Chcete-li zahájit transakci, použijte příkaz START TRANSACTION; potvrďte změny pomocí COMMIT nebo návrat do předchozího stavu pomocí ROLLBACK.",
    "SQL-Transactions-W3Schools": "SQL transakce na W3Schools"
}
{
    "123e4567": "什么是 Base64？",
    "1a2b3c4d": "为什么使用 Base64？",
    "23fgh456": "Base64 的历史",
    "2bcde3fg": "Base64的缺点",
    "34wxyz56": "如何在 JavaScript 中进行 Base64 编码/解码？",
    "4hijk5lm": "大小增加：编码数据比原始二进制数据大约大 33%。",
    "5e6f7g8h": "当二进制数据需要通过基于文本的协议（例如电子邮件或 JSON）传输或嵌入仅允许文本的位置时，可以使用 Base64。",
    "6nopqrst": "无加密：Base64不是一种加密方法；它很容易被解码并且不提供任何安全性。",
    "78abcdef": "JavaScript 提供了内置函数，例如 btoa() 和 atob() 分别用于 Base64 编码和解码。",
    "78ijk9lm": "Base64 首次在 RFC 1421 (1993) 中定义，后来在 RFC 4648 (2006) 中标准化。",
    "9i0j1k2l": "它还用于将小图像作为数据 URL 直接嵌入到 HTML 或 CSS 中。",
    "ab9c0d1e": "主要操作包括编码（将二进制转换为 Base64）和解码（将 Base64 转换回二进制）。",
    "abc12345": "Base64 是一种将二进制数据表示为 ASCII 字符序列的编码方案。",
    "abcdef12": "Base64 是如何工作的？",
    "bcdef01a": "Base64 的工作原理是将二进制数据分为 6 位组，并将每个组映射到 64 个字符的字母表 (A-Za-z0-9+/) 中的特定字符。",
    "cbaq54321": "不，Base64 不是一种压缩技术，它仅更改数据的表示形式，而不更改其大小。",
    "cdefg234": "最后添加填充字符（=）以保证编码数据长度为4个字符的倍数。",
    "efg45678": "与Base32的比较",
    "efghi678": "此变体通常用于文件名、URL 或必须避免特殊字符的情况。",
    "fghi6789": "它用于传输或存储基于文本格式的二进制文件，确保跨各种系统的兼容性。",
    "hij90klm": "Base32 使用较小的字母表 (A-Z2-7)，从而产生更长但更易读的字符串。",
    "mno34567": "Base64的优点",
    "mnoijklm": "还有其他 BaseXX 编码吗？",
    "n0pqrstu": "Base64 的使用示例",
    "nopqrs01": "虽然 Base64 针对紧凑性进行了优化，但当最小化输入错误（例如手动输入）至关重要时，会选择 Base32。",
    "pqrs890t": "通用兼容性：Base64 得到所有主要编程语言的广泛认可和支持。",
    "qrstuvwx": "是的，除了Base64和Base32之外，还有Base16（十六进制）、Base58和Base85，每种都是针对不同的场景而设计的。",
    "tuv23456": "Base64 URL 安全变体",
    "u7vwx8yz": "常见的 Base64 操作",
    "uvwxyza1": "无数据丢失：由于这是一个可逆过程，因此 Base64 编码不会导致任何信息丢失。",
    "vwx1yza2": "一个示例是对图像文件进行编码以将其嵌入 HTML <img> 标记中：",
    "wxyzabcd": "Base64 有一个 URL 安全版本，它将“+”替换为“-”，将“/”替换为“_”，并省略填充“=”，使其适合 Web URL。",
    "zyx98765": "Base64可以用来压缩吗？"
}
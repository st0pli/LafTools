{
    "a4s6x": "Hogyan működik a Base32?",
    "a8b7z": "Így a kitöltésre csak akkor van szükség, ha az utolsó kódolt bitcsoport nem osztható 40 bittel (mivel 8 Base32 karakter 40 bitet jelent). A kitöltés nulla és hat „=” karakterből áll a kódolt karakterlánc végén.",
    "b8g2k": "A Base32 használati forgatókönyvei",
    "c0v2p": "Gyakori műveletek a Base32-vel",
    "d1x7v": "Egy másik példa a Gitben, ahol a kivonatolt objektumokat néha Base32 formátumban tárolják, hogy elkerüljék a sorvégződésekkel és a fájlnév-korlátozásokkal kapcsolatos problémákat. Ezenkívül a HashiCorp Vault a Base32-t használja a kulcsok származtatásához.",
    "d9w7m": "Továbbá, mivel csak nagybetűket használ, nem tudja kihasználni a kis- és nagybetűk érzékenységének összes lehetséges kombinációját kiegészítő biztonsági intézkedésként, mint ahogy a Base64 teszi néha a dekódolás során a kisbetűk összehajtásakor.",
    "e5c7r": "A Base32 egy bináris-szöveg kódolási séma, amely egy 32 karakterből álló részhalmaz segítségével ASCII-karakterláncban jeleníti meg az adatokat. Úgy tervezték, hogy az ember számára olvasható és biztonságos legyen az URL-címek számára.",
    "f0q4w": "Az egyik népszerű használati forgatókönyv a titkos kulcsok létrehozása a kéttényezős hitelesítéshez (2FA), ahol az olyan szolgáltatások, mint a Google Authenticator és a Yubikey, Base32-kódolású titkokat használnak.",
    "f5a0s": "Ezenkívül a Base32 hosszabb kimenetet produkál, de alkalmasabb lehet bizonyos alkalmazásokhoz, például fájlnevekhez, mivel nincsenek benne speciális karakterek, amelyek ütközhetnek a fájlrendszer szabályaival.",
    "g8r3e": "A Base32 fő hátránya a viszonylag gyenge helyhatékonyság; körülbelül 25%-kal nagyobb mértékben bővíti a bemeneti adatokat, mint a Base64. Ez azt jelenti, hogy több tárhelyet vagy sávszélességet foglal el azonos mennyiségű kódolt adathoz.",
    "h4e1b": "Olyan helyzetekben is hasznos, amikor a kis- és nagybetűket érzékeny alfanumerikus karakterláncokat könnyebb kezelni, mint a hexadecimális vagy a base64 karakterláncokat, amelyek nem alfanumerikus karaktereket tartalmazhatnak, amelyek bizonyos kontextusokban (például URL-ekben vagy fájlnevekben) problémákat okozhatnak.",
    "h9j3m": "Kitöltés a Base32-ben",
    "i9o7k": "A Base32 előnyei a Base64-el szemben",
    "j1b5k": "A Base32-vel kapcsolatos leggyakoribb műveletek közé tartozik a bináris adatok Base32 karakterláncba való kódolása és a Base32 karakterlánc visszakódolása az eredeti bináris formátumba.",
    "k7g0n": "A Base32-ben a bemeneti adatok minden 5 bitje az „ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=” készlet 32 ​​karakterének valamelyikére van leképezve.",
    "l1p9z": "Mi az a Base32?",
    "m6d8b": "Minden 5 bites értéket egyetlen karakter képvisel, ami hatékony kódolást és dekódolást tesz lehetővé azon rendszerek számára, amelyek előnyben részesítik az oktettekkel (8 bites egységekkel) történő munkát.",
    "n3e7r": "A Base története32",
    "p9s5t": "A Base32-t a JavaScripthez való hozzájárulásáról ismert Douglas Crockford fejlesztette ki 2001-ben. A Base64-hez hasonló meglévő kódolások megbízhatóbb alternatívájaként hozták létre, különösen olyan helyzetekben, ahol a bináris adatok szöveges megjelenítésére van szükség.",
    "q2w5m": "A Base32 használatának célja?",
    "r6tq9z": "<b>Példa:</b> A „TEST12345” Base32-ben való kódolásához használhat könyvtárakat, például a base32-encode-ot a Node.js-ben, vagy beépített függvényeket más nyelveken, például a Python base64.b32encode-ját.",
    "s5t0n": "A Base32 kitöltése magában foglalja az „=” karakterek hozzáadását annak biztosítására, hogy a kódolt adatok utolsó része továbbra is 8 bit többszörösét tartalmazza. A Base64-től eltérően azonban a Base32 kitöltése minimális, mivel minden Base32 karakter már 5 bitet kódol.",
    "t8z1v": "Ha nem marad elég bit a végén egy teljes 5 bites csoport kitöltéséhez, a rendszer hozzáadja a '=' kitöltő karaktereket. Például egy bájthoz két Base32 karakter, egy 3 bájtos sorozathoz pedig négy Base32 karakter szükséges.",
    "u3j9p": "A Base32-t gyakran használják, amikor szükség van a bináris adatok kompakt szöveges megjelenítésére, amely adatvesztés nélkül begépelhető vagy kinyomtatható, például a fájlok integritásának ellenőrzése, a geocaching és a biztonságos jelszógenerálás során.",
    "y6t1n": "A Base32 hátrányai",
    "z2x8c": "A Base32 kevesebb vizuális kétértelműséggel rendelkezik, mivel csak nagybetűket és számjegyeket használ, ami megkönnyíti a kézi vagy telefonos olvasást és átírást a Base64-hez képest, amely „+”, „/” és kisbetűket tartalmaz.",
    "z6m1c": "Későbbi változatokat, például a z-base-32-t vezették be a használhatóság javítása érdekében, néhány kevésbé emlékezetes karaktert másokkal helyettesítve, de a Crockford eredeti specifikációja ma is széles körben használatos."
}
{
    "CSS-Advantages-010": "Vilka är fördelarna med att använda CSS?",
    "CSS-Advantages-Customization-012": "En annan fördel är dess förmåga att anpassa utseendet och känslan för flera sidor samtidigt, vilket sparar tid och ansträngning när du uppdaterar stilar för hela webbplatsen.",
    "CSS-Advantages-Separation-011": "En fördel är separationen av bekymmer mellan innehåll och presentation, vilket förbättrar underhållbarheten och skalbarheten för webbplatser.",
    "CSS-Animations-Transitions-019": "CSS-animationer och övergångar möjliggör smidiga visuella effekter utan att behöva JavaScript.",
    "CSS-Def-002": "CSS (Cascading Style Sheets) är ett formatmallsspråk som används för att beskriva presentationen av ett dokument skrivet i HTML eller XML.",
    "CSS-Disadvantages-013": "Vilka är några nackdelar med CSS?",
    "CSS-Disadvantages-Browser-Compat-015": "Ett annat problem är kompatibilitet över webbläsare, eftersom olika webbläsare kan tolka CSS-reglerna olika. Detta kräver att utvecklare använder leverantörsprefix eller funktionsdetekteringstekniker för konsekvent rendering i alla webbläsare.",
    "CSS-Disadvantages-Cascade-014": "En utmaning är att hantera stilarnas överlappande karaktär, vilket ibland kan leda till oväntade arvs- och specificitetsproblem.",
    "CSS-Evolution-006": "Sedan dess har det utvecklats genom CSS2 (1998), CSS2.1 (2007), CSS3 (pågående utveckling), och introducerat funktioner som väljare, animationer, responsiv design och mer.",
    "CSS-Future-020": "Vad är framtiden för CSS-teknik?",
    "CSS-Future-Houdini-022": "Houdini, till exempel, syftar till att tillhandahålla API:er på låg nivå för att anpassa webbläsarens renderingsprocess, vilket ger utvecklare en oöverträffad kontroll över stil och layout.",
    "CSS-Future-Progress-021": "CSS-arbetsgruppen fortsätter att arbeta med nya moduler som CSS-variabler (anpassade egenskaper), Houdini och Container Queries.",
    "CSS-Hist-Origin-005": "CSS föreslogs först av Håkon Wium Lie i oktober 1994 och blev en officiell W3C-rekommendation i december 1996 med CSS1.",
    "CSS-History-004": "Vad är historien om CSS?",
    "CSS-History-W3C": "Tidslinje för W3C CSS-rekommendationer",
    "CSS-Key-Features-016": "Vilka är några nyckelfunktioner i CSS?",
    "CSS-Layouts-018": "Flexbox- och Grid-layoutsystem ger kraftfulla verktyg för att skapa responsiva och flexibla sidlayouter.",
    "CSS-MDN-Animations": "MDN-guide till CSS-animationer",
    "CSS-MDN-Flexbox": "MDN Guide till Flexbox",
    "CSS-MDN-Grid": "MDN-guide till CSS Grid",
    "CSS-MDN-Houdini": "MDN Introduktion till Houdini",
    "CSS-Purpose-003": "Det låter utvecklare separera innehåll från presentation, definiera stilar som layout, färger och typsnitt, vilket gör webbsidor visuellt tilltalande och konsekventa på olika enheter och skärmar.",
    "CSS-Selectors-017": "Väljare tillåter inriktning på specifika HTML-element baserat på deras typ, klass, ID, attribut och mer.",
    "CSS-Tech-History-001": "Vad är CSS?",
    "CSS-Usage-007": "Hur använder jag CSS i mina webbprojekt?",
    "CSS-Usage-Basics-008": "För att använda CSS skapar du en separat fil (t.ex. style.css) som innehåller dina stilar och länkar den sedan till din HTML-fil med <link>-elementet i <head>-sektionen.",
    "CSS-Usage-Inline-009": "Alternativt kan du inkludera inline-stilar direkt i HTML-element med attributet 'style' eller bädda in CSS i <style>-taggen i <head>-sektionen.",
    "CSS-Vendor-Prefixes": "MDN-guide om leverantörsprefix",
    "CSS-W3C-Selectors": "W3C Selectors Level 4 Spec",
    "CSS-WG-Future-Modules": "W3C CSS Aktuellt arbete"
}
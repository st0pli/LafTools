{
    "Diff-XML-JSON-Article": "Különbség az XML és a JSON között",
    "MDN-XML-Syntax": "MDN Web Docs – XML szintaxis",
    "W3Schools-XML-Validation": "W3Schools – XML-ellenőrzés",
    "XML-Advantage-Readable-018": "Ember által olvasható természete lehetővé teszi az egyszerű ellenőrzést és hibakeresést, az egyéni struktúrák meghatározásának képessége pedig rugalmassá teszi a többszörös felhasználási esetekre.",
    "XML-Advantage-Standardized-017": "Az XML egy széles körben elfogadott szabvány, amely kompatibilissé teszi különféle platformokkal és rendszerekkel, elősegíti az együttműködést és az adatcserét.",
    "XML-Advantages-016": "Mik az XML használatának előnyei?",
    "XML-Attributes-006": "Az elemek rendelkezhetnek attribútumokkal, amelyek további információkat nyújtanak az elemről a nyitó címkén belül, például {0}",
    "XML-Basics-001": "Mi az XML?",
    "XML-Def-002": "Az XML (eXtensible Markup Language) egy jelölőnyelv, amely szabályokat határoz meg a dokumentumok emberi és géppel olvasható formátumban történő kódolásához.",
    "XML-Disadvantage-Size-020": "Az XML viszonylag bőbeszédű lehet, ami nagyobb fájlméretet eredményez, mint például a JSON, ami befolyásolja az átviteli sebességet és a tárolási követelményeket.",
    "XML-Disadvantages-019": "Milyen hátrányai vannak az XML használatának?",
    "XML-JSON-Diff-Structure-014": "Az XML részletes, hierarchikus címkéket használ a szerkezethez, míg a JSON kulcs-érték párokra és tömbökre támaszkodik. Példa: XML {0} vs. JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "Az XML szintaxisa szigorúbb zárócímkékkel és attribútumokkal, míg a JSON szintaxisa könnyebb és közelebb áll a JavaScript objektum jelöléséhez. A JSON általában könnyebben értelmezhető és az interneten keresztül továbbítható.",
    "XML-JSON-Difference-013": "Mi a különbség az XML és a JSON között?",
    "XML-Nesting-007": "Hogyan működik a beágyazás XML-ben?",
    "XML-Nesting-Example-009": "Például a `<book><title>Könyvem címe</title><author>John Doe</author></book>` egy könyvet jelöl, amelynek címe és szerzője beágyazott elemek.",
    "XML-Nesting-Explanation-008": "Az XML-ben az elemek egymásba ágyazhatók, hogy hierarchikus kapcsolatokat képviseljenek. A gyermekelemek a szülőelemük nyitó és záró címkéje közé kerülnek.",
    "XML-Processing-Speed-021": "Az XML elemzése és előállítása lassabb lehet a szigorú szintaxis és az ellenőrzés szükségessége miatt, különösen összetett dokumentumok kezelésekor.",
    "XML-Purpose-003": "Úgy tervezték, hogy adatokat hordozzon, nem pedig olyan adatokat jelenítsen meg, mint például a HTML, lehetővé téve, hogy közös formátumként használják a strukturált információk megosztásához különböző platformokon és alkalmazások között.",
    "XML-Syntax-004": "Mi az XML alapvető szintaxisa?",
    "XML-Syntax-Example-005": "Egy egyszerű XML-dokumentum faszerű szerkezetű elemekből áll. Minden elem egy szögletes zárójelben lévő címkével kezdődik (<element>), és egy záró címkével (</element>) végződik.",
    "XML-Validation-010": "Mi az XML-ellenőrzés, és hogyan működik?",
    "XML-Validation-Def-011": "Az XML-ellenőrzés biztosítja, hogy az XML-dokumentum megfeleljen a dokumentumtípus-meghatározásban (DTD) vagy az XML-sémában (XSD) meghatározott szabályoknak.",
    "XML-Validation-Process-012": "Az érvényesítők ellenőrzik, hogy minden szükséges elem és attribútum megvan-e, érvényesítik az adattípusokat, és érvényesítik a sémában meghatározott megszorításokat a dokumentum feldolgozása előtt."
}
{
    "CSS-Advantages-010": "CSS를 사용하면 어떤 이점이 있나요?",
    "CSS-Advantages-Customization-012": "또 다른 장점은 여러 페이지의 모양과 느낌을 한 번에 사용자 정의할 수 있어 사이트 전체 스타일을 업데이트할 때 시간과 노력을 절약할 수 있다는 것입니다.",
    "CSS-Advantages-Separation-011": "한 가지 장점은 컨텐츠와 프리젠테이션 간의 관심사를 분리하여 웹사이트의 유지 관리성과 확장성을 향상시킨다는 것입니다.",
    "CSS-Animations-Transitions-019": "CSS 애니메이션 및 전환을 사용하면 JavaScript 없이도 부드러운 시각적 효과를 얻을 수 있습니다.",
    "CSS-Def-002": "CSS(Cascading Style Sheets)는 HTML이나 XML로 작성된 문서의 표현을 설명하는 데 사용되는 스타일시트 언어입니다.",
    "CSS-Disadvantages-013": "CSS의 단점은 무엇입니까?",
    "CSS-Disadvantages-Browser-Compat-015": "또 다른 문제는 브라우저 간 호환성입니다. 브라우저마다 CSS 규칙을 다르게 해석할 수 있기 때문입니다. 이를 위해서는 개발자가 여러 브라우저에서 일관된 렌더링을 위해 공급업체 접두사 또는 기능 감지 기술을 사용해야 합니다.",
    "CSS-Disadvantages-Cascade-014": "한 가지 과제는 스타일의 계단식 특성을 관리하는 것입니다. 이로 인해 때로는 예상치 못한 상속 및 특정성 문제가 발생할 수 있습니다.",
    "CSS-Evolution-006": "이후 CSS2(1998), CSS2.1(2007), CSS3(진행 중인 개발)을 통해 선택기, 애니메이션, 반응형 디자인 등과 같은 기능을 도입하면서 발전했습니다.",
    "CSS-Future-020": "CSS 기술의 미래는 무엇입니까?",
    "CSS-Future-Houdini-022": "예를 들어 Houdini는 브라우저의 렌더링 프로세스를 사용자 정의하기 위한 하위 수준 API를 제공하여 개발자가 스타일과 레이아웃에 대한 전례 없는 제어 기능을 제공하는 것을 목표로 합니다.",
    "CSS-Future-Progress-021": "CSS 작업 그룹은 CSS 변수(사용자 정의 속성), Houdini 및 컨테이너 쿼리와 같은 새로운 모듈에 대한 작업을 계속하고 있습니다.",
    "CSS-Hist-Origin-005": "CSS는 1994년 10월 Håkon Wium Lie에 의해 처음 제안되었으며 1996년 12월 CSS1과 함께 공식 W3C 권장 사항이 되었습니다.",
    "CSS-History-004": "CSS의 역사는 무엇입니까?",
    "CSS-History-W3C": "W3C CSS 권장사항 타임라인",
    "CSS-Key-Features-016": "CSS의 주요 기능은 무엇입니까?",
    "CSS-Layouts-018": "Flexbox 및 Grid 레이아웃 시스템은 반응성이 뛰어나고 유연한 페이지 레이아웃을 만들기 위한 강력한 도구를 제공합니다.",
    "CSS-MDN-Animations": "CSS 애니메이션에 대한 MDN 가이드",
    "CSS-MDN-Flexbox": "Flexbox에 대한 MDN 가이드",
    "CSS-MDN-Grid": "CSS 그리드에 대한 MDN 가이드",
    "CSS-MDN-Houdini": "MDN Houdini 소개",
    "CSS-Purpose-003": "이를 통해 개발자는 프레젠테이션에서 콘텐츠를 분리하고 레이아웃, 색상, 글꼴 등의 스타일을 정의하여 다양한 장치와 화면에서 웹 페이지를 시각적으로 매력적이고 일관되게 만들 수 있습니다.",
    "CSS-Selectors-017": "선택기를 사용하면 유형, 클래스, ID, 속성 등을 기반으로 특정 HTML 요소를 타겟팅할 수 있습니다.",
    "CSS-Tech-History-001": "CSS란 무엇입니까?",
    "CSS-Usage-007": "내 웹 프로젝트에서 CSS를 어떻게 사용합니까?",
    "CSS-Usage-Basics-008": "CSS를 사용하려면 스타일이 포함된 별도의 파일(예: style.css)을 만든 다음 <head> 섹션 내의 <link> 요소를 사용하여 HTML 파일에 연결합니다.",
    "CSS-Usage-Inline-009": "또는 'style' 속성을 사용하여 HTML 요소에 직접 인라인 스타일을 포함하거나 <head> 섹션 내부의 <style> 태그에 CSS를 포함할 수 있습니다.",
    "CSS-Vendor-Prefixes": "공급업체 접두사에 대한 MDN 가이드",
    "CSS-W3C-Selectors": "W3C 선택기 레벨 4 사양",
    "CSS-WG-Future-Modules": "W3C CSS 현재 작업"
}
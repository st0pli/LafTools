{
    "CSS-Advantages-010": "Hva er fordelene med å bruke CSS?",
    "CSS-Advantages-Customization-012": "En annen fordel er muligheten til å tilpasse utseendet og følelsen av flere sider samtidig, noe som sparer tid og krefter når du oppdaterer stiler for hele nettstedet.",
    "CSS-Advantages-Separation-011": "En fordel er separasjonen av bekymringer mellom innhold og presentasjon, noe som forbedrer vedlikehold og skalerbarhet av nettsteder.",
    "CSS-Animations-Transitions-019": "CSS-animasjoner og -overganger muliggjør jevne visuelle effekter uten å kreve JavaScript.",
    "CSS-Def-002": "CSS (Cascading Style Sheets) er et stilarkspråk som brukes for å beskrive presentasjonen av et dokument skrevet i HTML eller XML.",
    "CSS-Disadvantages-013": "Hva er noen ulemper med CSS?",
    "CSS-Disadvantages-Browser-Compat-015": "Et annet problem er kompatibilitet på tvers av nettlesere, siden forskjellige nettlesere kan tolke CSS-regler forskjellig. Dette krever at utviklere bruker leverandørprefikser eller funksjonsdeteksjonsteknikker for konsistent gjengivelse på tvers av nettlesere.",
    "CSS-Disadvantages-Cascade-014": "En utfordring er å håndtere stilenes overlappende natur, noe som noen ganger kan føre til uventede arv og spesifisitetsproblemer.",
    "CSS-Evolution-006": "Siden den gang har den utviklet seg gjennom CSS2 (1998), CSS2.1 (2007), CSS3 (pågående utvikling), og introdusert funksjoner som velgere, animasjoner, responsiv design og mer.",
    "CSS-Future-020": "Hva er fremtiden for CSS-teknologi?",
    "CSS-Future-Houdini-022": "Houdini, for eksempel, har som mål å tilby API-er på lavt nivå for å tilpasse nettleserens gjengivelsesprosess, og gi utviklere enestående kontroll over stil og layout.",
    "CSS-Future-Progress-021": "CSS Working Group fortsetter å jobbe med nye moduler som CSS Variables (Custom Properties), Houdini og Container Queries.",
    "CSS-Hist-Origin-005": "CSS ble først foreslått av Håkon Wium Lie i oktober 1994 og ble en offisiell W3C-anbefaling i desember 1996 med CSS1.",
    "CSS-History-004": "Hva er historien til CSS?",
    "CSS-History-W3C": "Tidslinje for W3C CSS-anbefalinger",
    "CSS-Key-Features-016": "Hva er noen nøkkelfunksjoner i CSS?",
    "CSS-Layouts-018": "Flexbox- og Grid-layoutsystemer gir kraftige verktøy for å lage responsive og fleksible sideoppsett.",
    "CSS-MDN-Animations": "MDN-veiledning til CSS-animasjoner",
    "CSS-MDN-Flexbox": "MDN-guide til Flexbox",
    "CSS-MDN-Grid": "MDN-veiledning til CSS Grid",
    "CSS-MDN-Houdini": "MDN Introduksjon til Houdini",
    "CSS-Purpose-003": "Det lar utviklere skille innhold fra presentasjon, definere stiler som layout, farger og fonter, noe som gjør nettsider visuelt tiltalende og konsistente på tvers av forskjellige enheter og skjermer.",
    "CSS-Selectors-017": "Velgere tillater målretting av spesifikke HTML-elementer basert på deres type, klasse, ID, attributter og mer.",
    "CSS-Tech-History-001": "Hva er CSS?",
    "CSS-Usage-007": "Hvordan bruker jeg CSS i webprosjektene mine?",
    "CSS-Usage-Basics-008": "For å bruke CSS, oppretter du en separat fil (f.eks. style.css) som inneholder stilene dine, og deretter kobler du den til HTML-filen din ved å bruke <link>-elementet i <head>-delen.",
    "CSS-Usage-Inline-009": "Alternativt kan du inkludere innebygde stiler direkte i HTML-elementer ved å bruke 'style'-attributtet eller bygge inn CSS i <style>-taggen i <head>-delen.",
    "CSS-Vendor-Prefixes": "MDN-veiledning om leverandørprefikser",
    "CSS-W3C-Selectors": "W3C Selectors Level 4 Spes",
    "CSS-WG-Future-Modules": "W3C CSS Nåværende arbeid"
}
{
    "MySQL-Performance-Tuning": "MySQL 效能調校技巧",
    "OWASP-SQL-Injection": "OWASP SQL 註入指南",
    "SQL-Basics-001": "什麼是 SQL？",
    "SQL-Beautifier-Example": "線上 SQL 格式化程式",
    "SQL-Beautify-006": "什麼是SQL美化？",
    "SQL-Beautify-Def-007": "SQL 美化是透過套用一致的縮排、間距和大小寫約定來格式化 SQL 程式碼以提高可讀性的過程。",
    "SQL-Beautify-Purpose-008": "就像通用程式碼美化器一樣，它可以幫助開發人員更輕鬆地理解複雜查詢並保持 SQL 腳本或專案的一致性。",
    "SQL-Commands-005": "SQL 包括多種​​類型的命令：DDL（資料定義語言 - CREATE、ALTER、DROP）、DML（資料操作語言 - SELECT、INSERT、UPDATE、DELETE）和 DCL（資料控製語言 - GRANT、REVOKE）。",
    "SQL-Components-004": "SQL的主要組成部分是什麼？",
    "SQL-Components-Wikipedia": "維基百科上的 SQL 元件",
    "SQL-Def-002": "SQL（結構化查詢語言）是一種用於管理和查詢關聯式資料庫的標準程式語言。",
    "SQL-Indexing-016": "SQL 中的索引是什麼以及為何它們如此重要？",
    "SQL-Indexing-Benefit-018": "在 WHERE 子句條件的常用欄位上建立索引可顯著加快 SELECT 查詢的速度，但由於需要維護索引結構，可能會減慢 INSERT、UPDATE 和 DELETE 操作的速度。",
    "SQL-Indexing-Explanation-017": "索引是一種資料結構（例如 B 樹），它允許資料庫引擎根據特定列值快速定位行，從而提高表中資料檢索操作的速度。",
    "SQL-Indexing-MDN": "有關索引的 MDN Web 文檔",
    "SQL-Injection-019": "什麼是 SQL 註入以及如何防止它？",
    "SQL-Injection-Def-020": "SQL 註入是一種安全漏洞，攻擊者可以將惡意 SQL 程式碼插入輸入欄位以操縱資料庫或從資料庫中提取資料。",
    "SQL-Injection-Prevention-021": "預防方法包括使用參數化查詢、預先準備語句或自動轉義使用者輸入的 ORM 函式庫，以及限製資料庫權限和應用最小權限原則。",
    "SQL-Joins-011": "SQL 中的 JOIN 是什麼？",
    "SQL-Joins-Explanation-012": "JOIN 用於根據兩個或多個表之間的相關欄位來組合兩個或多個表中的行。例如，內連接、左連接、右連接和全連接。",
    "SQL-Joins-Tutorial": "SQL 連線教學",
    "SQL-Perf-Tuning-Methods-024": "其他技術包括對大型表進行分區、使用適當的資料類型以及在可行時快取結果。",
    "SQL-Perf-Tuning-Overview-023": "最佳化 SQL 查詢效能包括分析執行計劃、適當索引、最小化不必要的聯結和子查詢以及編寫高效的 WHERE 子句。",
    "SQL-Performance-Tuning-022": "如何最佳化 SQL 查詢效能？",
    "SQL-Purpose-003": "它用於建立、讀取、更新、刪除和查詢表中的資料以及管理資料庫結構和權限。",
    "SQL-Select-009": "如何寫出基本的 SELECT 語句？",
    "SQL-Transactions-013": "SQL 中的交易是什麼？",
    "SQL-Transactions-Def-014": "事務是包含一個或多個 SQL 語句的邏輯工作單元。它確保其中的所有操作都成功完成（原子性），與其他事務隔離，並且即使在系統故障的情況下也能持久。",
    "SQL-Transactions-W3Schools": "W3Schools 上的 SQL 事務"
}
{
    "R_S7_CLAo": "Exemple : pour encoder « TEST12345 » en Base32, vous pouvez utiliser des bibliothèques comme base32-encode dans Node.js, ou des fonctions intégrées dans d'autres langages tels que base64.b32encode de Python.",
    "a4s6x": "Comment fonctionne Base32 ?",
    "a8b7z": "Ainsi, le remplissage n'est nécessaire que si le dernier groupe de bits en cours de codage n'est pas divisible par 40 bits (puisque 8 caractères Base32 représentent 40 bits). Le remplissage sera composé de zéro à six caractères « = » à la fin de la chaîne codée.",
    "b8g2k": "Scénarios d'utilisation pour Base32",
    "c0v2p": "Opérations courantes avec Base32",
    "d1x7v": "Un autre exemple est celui de Git, où les objets hachés sont parfois stockés au format Base32 pour éviter les problèmes de fin de ligne et de restrictions de nom de fichier. De plus, HashiCorp Vault utilise Base32 pour la dérivation des clés.",
    "d9w7m": "De plus, comme il utilise uniquement des lettres majuscules, il ne peut pas utiliser toutes les combinaisons possibles de sensibilité à la casse comme mesure de sécurité supplémentaire comme le fait parfois Base64 avec le pliage de la casse pendant le décodage.",
    "e5c7r": "Base32 est un schéma de codage binaire en texte qui représente les données dans une chaîne ASCII à l'aide d'un sous-ensemble de 32 caractères. Il est conçu pour être lisible par l’homme et sécurisé pour les URL.",
    "f0q4w": "Un scénario d'utilisation populaire consiste à générer des clés secrètes pour l'authentification à deux facteurs (2FA), où des services tels que Google Authenticator et Yubikey utilisent des secrets codés en Base32.",
    "f5a0s": "De plus, Base32 produit une sortie plus longue mais peut être plus adapté à des applications spécifiques telles que les noms de fichiers en raison de son manque de caractères spéciaux susceptibles d'entrer en conflit avec les règles du système de fichiers.",
    "g8r3e": "Le principal inconvénient de Base32 est son efficacité spatiale relativement faible ; il étend les données d'entrée d'environ 25 % de plus que Base64. Cela signifie que cela nécessite plus de stockage ou de bande passante pour la même quantité de données codées.",
    "h4e1b": "Il est également utile dans les situations où les chaînes alphanumériques sensibles à la casse sont plus faciles à gérer que les chaînes hexadécimales ou base64, qui peuvent contenir des caractères non alphanumériques susceptibles de provoquer des problèmes dans certains contextes (comme les URL ou les noms de fichiers).",
    "h9j3m": "Rembourrage en Base32",
    "i9o7k": "Avantages de Base32 par rapport à Base64",
    "j1b5k": "Les opérations les plus courantes impliquant Base32 incluent le codage de données binaires dans une chaîne Base32 et le décodage d'une chaîne Base32 dans son format binaire d'origine.",
    "k7g0n": "En Base32, tous les 5 bits de données d'entrée sont mappés à l'un des 32 caractères de l'ensemble 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='.",
    "l1p9z": "Qu’est-ce que Base32 ?",
    "m6d8b": "Chaque valeur de 5 bits est représentée par un seul caractère, permettant un codage et un décodage efficaces pour les systèmes qui préfèrent travailler avec des octets (unités de 8 bits).",
    "n3e7r": "Histoire de Base32",
    "p9s5t": "Base32 a été développé par Douglas Crockford, connu pour ses contributions à JavaScript, en 2001. Il a été créé comme une alternative plus fiable aux encodages existants comme Base64, en particulier pour les situations nécessitant des représentations textuelles de données binaires.",
    "q2w5m": "Objectif de l'utilisation de Base32 ?",
    "s5t0n": "Le remplissage en Base32 implique l'ajout de caractères « = » pour garantir que le dernier morceau de données codées contient toujours un multiple de 8 bits. Cependant, contrairement à Base64, le remplissage en Base32 est minime car chaque caractère Base32 code déjà 5 bits.",
    "t8z1v": "Lorsqu'il ne reste plus assez de bits à la fin pour remplir un groupe complet de 5 bits, les caractères de remplissage '=' sont ajoutés. Par exemple, un octet nécessite deux caractères Base32 et une séquence de 3 octets nécessiterait quatre caractères Base32.",
    "u3j9p": "Base32 est souvent utilisé lorsque vous avez besoin d'une représentation textuelle compacte de données binaires pouvant être saisies ou imprimées sans perte d'informations, comme dans le cadre des contrôles d'intégrité de fichiers, du géocaching et de la génération de mots de passe sécurisés.",
    "y6t1n": "Inconvénients de Base32",
    "z2x8c": "Base32 présente moins d'ambiguïtés visuelles puisqu'il utilise uniquement des lettres majuscules et des chiffres, ce qui facilite la lecture et la transcription à la main ou par téléphone par rapport à Base64 qui comprend les lettres « + », « / » et minuscules.",
    "z6m1c": "Des variantes ultérieures comme z-base-32 ont été introduites pour améliorer la convivialité, en remplaçant certains caractères moins mémorables par d'autres, mais la spécification originale de Crockford reste largement utilisée aujourd'hui."
}
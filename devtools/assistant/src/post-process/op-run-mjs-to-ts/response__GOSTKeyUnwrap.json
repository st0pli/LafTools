{
  "result": "Below is the TypeScript version of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `GOSTKeyUnwrap` class, following the pattern of the provided example.\n2. The description at the top of the file has been updated to describe the class's function and purpose.\n3. Natural text has been wrapped with the `Dot` function as requested.\n4. Import statements have been left unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The GOSTKeyUnwrap class provides functionality to unwrap keys that have been encrypted with GOST block ciphers.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\nimport Utils from \"../Utils.mjs\";\nimport { toHexFast, fromHex } from \"../lib/Hex.mjs\";\nimport {\n  CryptoGost,\n  GostEngine,\n} from \"@wavesenterprise/crypto-gost-js/index.js\";\n\n/**\n * GOST Key Unwrap operation\n */\nclass GOSTKeyUnwrap extends Operation {\n  /**\n   * GOSTKeyUnwrap constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"gostKeyUnwrap.name\", \"GOST Key Unwrap\");\n    this.module = \"Ciphers\";\n    this.description = Dot(\"gostKeyUnwrap.desc\", \"A decryptor for keys wrapped using one of the GOST block ciphers.\");\n    this.infoURL = \"https://wikipedia.org/wiki/GOST_(block_cipher)\";\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [\n      // ... Args remain unchanged\n    ];\n  }\n\n  /**\n   * @param {string} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  async run(input, args) {\n    // ... Run method remains unchanged\n  }\n\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Ciphers\",\n        \"description\": Dot(\"gostKeyUnwrap.config.desc\", \"This operation unwraps keys encrypted with GOST block ciphers.\"),\n        \"infoURL\": this.infoURL,\n        \"inputType\": this.inputType,\n        \"outputType\": this.outputType,\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": this.args\n      },\n      infoURL: this.infoURL,\n      nousenouseID: 'gostKeyUnwrap',\n      optName: Dot(\"gostKeyUnwrap.optName\", \"Generate {0} Hash\", \"GOST Key Unwrap\"),\n      optDescription: Dot(\n        \"gostKeyUnwrap.optDesc\",\n        \"This operation unwraps data into a {0} key.\",\n        \"GOST\"\n      ),\n      exampleInput: \"\", // Fill it if possible\n      exampleOutput: \"\", // Fill it if possible\n    }\n  }\n}\n\nexport default GOSTKeyUnwrap;\n```\n\nPlease note the following:\n- The `Dot` function is used to wrap all natural text strings that are displayed to the user.\n- The `getOptDetail` method is added to the class, which returns an object with details about the operation. The `optName` and `optDescription` fields use the `Dot` function to wrap their text.\n- The `description` field in the class constructor is also wrapped with `Dot`.\n- The `exampleInput` and `exampleOutput` fields in `getOptDetail` are left empty, as the actual values would depend on the specific use case and are not provided in the example. These should be filled in with appropriate examples if available.\n- Import statements are unchanged and should be verified to ensure they are correct for the TypeScript environment.",
  "response": {
    "choices": [
      {
        "finish_reason": "stop",
        "index": 0,
        "message": {
          "content": "Below is the TypeScript version of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `GOSTKeyUnwrap` class, following the pattern of the provided example.\n2. The description at the top of the file has been updated to describe the class's function and purpose.\n3. Natural text has been wrapped with the `Dot` function as requested.\n4. Import statements have been left unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The GOSTKeyUnwrap class provides functionality to unwrap keys that have been encrypted with GOST block ciphers.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\nimport Utils from \"../Utils.mjs\";\nimport { toHexFast, fromHex } from \"../lib/Hex.mjs\";\nimport {\n  CryptoGost,\n  GostEngine,\n} from \"@wavesenterprise/crypto-gost-js/index.js\";\n\n/**\n * GOST Key Unwrap operation\n */\nclass GOSTKeyUnwrap extends Operation {\n  /**\n   * GOSTKeyUnwrap constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"gostKeyUnwrap.name\", \"GOST Key Unwrap\");\n    this.module = \"Ciphers\";\n    this.description = Dot(\"gostKeyUnwrap.desc\", \"A decryptor for keys wrapped using one of the GOST block ciphers.\");\n    this.infoURL = \"https://wikipedia.org/wiki/GOST_(block_cipher)\";\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [\n      // ... Args remain unchanged\n    ];\n  }\n\n  /**\n   * @param {string} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  async run(input, args) {\n    // ... Run method remains unchanged\n  }\n\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Ciphers\",\n        \"description\": Dot(\"gostKeyUnwrap.config.desc\", \"This operation unwraps keys encrypted with GOST block ciphers.\"),\n        \"infoURL\": this.infoURL,\n        \"inputType\": this.inputType,\n        \"outputType\": this.outputType,\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": this.args\n      },\n      infoURL: this.infoURL,\n      nousenouseID: 'gostKeyUnwrap',\n      optName: Dot(\"gostKeyUnwrap.optName\", \"Generate {0} Hash\", \"GOST Key Unwrap\"),\n      optDescription: Dot(\n        \"gostKeyUnwrap.optDesc\",\n        \"This operation unwraps data into a {0} key.\",\n        \"GOST\"\n      ),\n      exampleInput: \"\", // Fill it if possible\n      exampleOutput: \"\", // Fill it if possible\n    }\n  }\n}\n\nexport default GOSTKeyUnwrap;\n```\n\nPlease note the following:\n- The `Dot` function is used to wrap all natural text strings that are displayed to the user.\n- The `getOptDetail` method is added to the class, which returns an object with details about the operation. The `optName` and `optDescription` fields use the `Dot` function to wrap their text.\n- The `description` field in the class constructor is also wrapped with `Dot`.\n- The `exampleInput` and `exampleOutput` fields in `getOptDetail` are left empty, as the actual values would depend on the specific use case and are not provided in the example. These should be filled in with appropriate examples if available.\n- Import statements are unchanged and should be verified to ensure they are correct for the TypeScript environment.",
          "role": "assistant"
        }
      }
    ],
    "created": 1713889640,
    "id": "8596361306297096885",
    "model": "glm-4",
    "request_id": "8596361306297096885",
    "usage": {
      "completion_tokens": 843,
      "prompt_tokens": 1589,
      "total_tokens": 2432
    }
  }
}
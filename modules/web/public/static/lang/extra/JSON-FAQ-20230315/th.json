{
    "JSON-Advantages-011": "โดยทั่วไป JSON จะมีขนาดเล็กกว่าและแยกวิเคราะห์ได้เร็วกว่า XML ทำให้เหมาะสำหรับการสื่อสารระหว่างไคลเอ็นต์กับเซิร์ฟเวอร์ที่ซึ่งแบนด์วิดท์และความเร็วเป็นสิ่งสำคัญ",
    "JSON-Basics-001": "เจสันคืออะไร?",
    "JSON-Beautify-007": "JSON บิวตี้ฟิเคชันคืออะไร?",
    "JSON-Beautify-Def-008": "การทำให้สวยงามของ JSON หมายถึงกระบวนการจัดรูปแบบข้อมูล JSON ให้อยู่ในรูปแบบที่มนุษย์สามารถอ่านได้มากขึ้น โดยมีการเยื้องและการขึ้นบรรทัดใหม่อย่างเหมาะสม ทำให้วิเคราะห์และแก้ไขข้อบกพร่องได้ง่ายขึ้น",
    "JSON-Beautify-Example-009": "ก่อน: '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}', หลัง: '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"อาร์เรย์\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) เป็นรูปแบบการแลกเปลี่ยนข้อมูลแบบข้อความที่มีน้ำหนักเบาซึ่งมนุษย์สามารถอ่านและเขียนได้ง่าย และง่ายต่อการแยกวิเคราะห์และสร้างเครื่อง",
    "JSON-JavaScript-Support-020": "JSON ได้รับการสนับสนุนโดย JavaScript ผ่านออบเจ็กต์ส่วนกลาง `JSON.parse()` และ `JSON.stringify()` JSON ที่ถูกต้องใดๆ ก็ตามยังเป็นอ็อบเจ็กต์ลิเทอรัลหรืออาเรย์ JavaScript ที่ถูกต้องด้วย ซึ่งช่วยให้สามารถแปลงระหว่างสองรูปแบบได้อย่างราบรื่น",
    "JSON-JavaScript-Usage-021": "ในการพัฒนาเว็บ JSON มักใช้สำหรับคำขอ AJAX การเรนเดอร์ฝั่งเซิร์ฟเวอร์ และการจัดเก็บข้อมูล (เช่น ที่จัดเก็บในตัวเครื่องหรือ IndexedDB)",
    "JSON-Linting-022": "JSON Linting คืออะไรและเหตุใดจึงสำคัญ",
    "JSON-Linting-Benefit-024": "Linters สามารถป้องกันข้อผิดพลาดรันไทม์เนื่องจาก JSON ที่ไม่ถูกต้อง ทำให้มั่นใจได้ว่าการแลกเปลี่ยนข้อมูลจะราบรื่นและประหยัดเวลาในการแก้ไขข้อบกพร่องที่อาจเกิดขึ้น",
    "JSON-Linting-Explanation-023": "JSON Linting คือกระบวนการตรวจสอบว่าเอกสาร JSON เป็นไปตามข้อกำหนด JSON หรือไม่ ช่วยระบุข้อผิดพลาดทางไวยากรณ์ก่อนที่จะพยายามแยกวิเคราะห์ข้อมูล",
    "JSON-Path-013": "เส้นทาง JSON คืออะไร",
    "JSON-Path-Example-015": "$.store.book[0].title เลือกชื่อหนังสือเล่มแรกในออบเจ็กต์ JSON พร้อมร้านค้าที่มีอาร์เรย์หนังสือ",
    "JSON-Path-Explanation-014": "JSON Path เป็นภาษาคิวรีที่คล้ายกับ XPath สำหรับ XML ซึ่งช่วยให้คุณสามารถดึงข้อมูลจากเอกสาร JSON โดยใช้สัญลักษณ์ที่เหมือนเส้นทาง",
    "JSON-Path-Guide": "JSONPath - XPath สำหรับ JSON",
    "JSON-Purpose-003": "โดยหลักแล้วใช้เพื่อส่งข้อมูลระหว่างเซิร์ฟเวอร์และเว็บแอปพลิเคชันเป็นทางเลือกแทน XML โดยมีการรองรับดั้งเดิมใน JavaScript ผ่านเมธอด `JSON.parse()` และ `JSON.stringify()`",
    "JSON-Scope-in-JavaScript-019": "JSON เข้ากับ JavaScript ได้อย่างไร",
    "JSON-Security-025": "ข้อกังวลด้านความปลอดภัยเมื่อทำงานกับ JSON มีอะไรบ้าง",
    "JSON-Security-Impact-026": "ความเสี่ยงด้านความปลอดภัยที่อาจเกิดขึ้น ได้แก่ การโจมตีแบบแทรก JSON ซึ่งมีการส่งข้อมูลที่เป็นอันตรายซึ่งอาจทำให้เกิดพฤติกรรมที่ไม่ได้ตั้งใจเมื่อแยกวิเคราะห์/ดำเนินการ",
    "JSON-Security-Prevention-027": "เพื่อลดความเสี่ยงเหล่านี้ ให้รักษาอินพุตของผู้ใช้ให้สะอาดอยู่เสมอ และใช้ไลบรารีที่แยกวิเคราะห์ JSON อย่างปลอดภัยโดยไม่ต้องดำเนินการเนื้อหา (เช่น JSON.parse() ในตัวของ JavaScript) นอกจากนี้ ให้หลีกเลี่ยงการใช้ eval() ในการแยกวิเคราะห์ JSON",
    "JSON-Serialization-016": "การทำให้เป็นอนุกรมและการดีซีเรียลไลซ์ของ JSON คืออะไร",
    "JSON-Serialization-Def-017": "การทำให้เป็นอนุกรม JSON เป็นกระบวนการแปลงอ็อบเจ็กต์ JavaScript ให้เป็นสตริง JSON ในขณะที่การดีซีเรียลไลซ์เป็นแบบย้อนกลับ โดยเปลี่ยนสตริง JSON กลับเป็นอ็อบเจ็กต์ JavaScript",
    "JSON-Serialization-W3Schools": "การทำให้เป็นอนุกรม JSON บน W3Schools",
    "JSON-Syntax-004": "ไวยากรณ์พื้นฐานของ JSON คืออะไร?",
    "JSON-Syntax-Example-f005": "ออบเจ็กต์ JSON ประกอบด้วยคู่คีย์-ค่าที่อยู่ในเครื่องหมายปีกกา {0} แต่ละคีย์จะต้องเป็นสตริงที่อยู่ในเครื่องหมายคำพูดคู่ ตามด้วยเครื่องหมายโคลอน ตามด้วยค่า",
    "JSON-Syntax-Reference": "MDN Web Docs บน JSON",
    "JSON-Value-Types-006": "ค่าอาจเป็นสตริง ตัวเลข บูลีน อาร์เรย์ (อยู่ในวงเล็บเหลี่ยม",
    "JSON-vs-XML-010": "JSON เปรียบเทียบกับ XML อย่างไร",
    "JSON-vs-XML-Article": "การเปรียบเทียบ JSON และ XML",
    "MDN-JSON-in-JavaScript": "MDN Web Docs - การทำงานกับ JSON",
    "OWASP-JSON-Injection": "OWASP - การฉีด JSON",
    "XML-Advantages-012": "XML ให้ความยืดหยุ่นของโครงสร้างมากขึ้นและรองรับเนมสเปซ ซึ่งอาจเป็นประโยชน์สำหรับโครงสร้างเอกสารที่ซับซ้อนและความสามารถในการทำงานร่วมกันระหว่างระบบ"
}
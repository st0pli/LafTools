{
    "CSS-Advantages-010": "使用 CSS 有什么优点？",
    "CSS-Advantages-Customization-012": "另一个优点是它能够同时自定义多个页面的外观，从而在更新站点范围的样式时节省时间和精力。",
    "CSS-Advantages-Separation-011": "优点之一是内容和表示之间的关注点分离，这提高了网站的可维护性和可扩展性。",
    "CSS-Animations-Transitions-019": "CSS 动画和过渡无需 JavaScript 即可实现流畅的视觉效果。",
    "CSS-Def-002": "CSS（层叠样式表）是一种样式表语言，用于描述以 HTML 或 XML 编写的文档的表示形式。",
    "CSS-Disadvantages-013": "CSS 有哪些缺点？",
    "CSS-Disadvantages-Browser-Compat-015": "另一个问题是跨浏览器兼容性，因为不同的浏览器可能以不同的方式解释 CSS 规则。这要求开发人员使用供应商前缀或功能检测技术来实现跨浏览器的一致渲染。",
    "CSS-Disadvantages-Cascade-014": "一项挑战是管理样式的级联性质，这有时会导致意外的继承和特殊性问题。",
    "CSS-Evolution-006": "从那时起，它经历了 CSS2 (1998)、CSS2.1 (2007)、CSS3（持续开发）的演变，引入了选择器、动画、响应式设计等功能。",
    "CSS-Future-020": "CSS技术的未来是什么？",
    "CSS-Future-Houdini-022": "例如，Houdini 的目标是提供低级 API 来定制浏览器的渲染过程，使开发人员能够对样式和布局进行前所未有的控制。",
    "CSS-Future-Progress-021": "CSS 工作组继续致力于新模块的开发，例如 CSS 变量（自定义属性）、Houdini 和容器查询。",
    "CSS-Hist-Origin-005": "CSS 最初由 Håkon Wium Lie 于 1994 年 10 月提出，并于 1996 年 12 月随 CSS1 成为 W3C 官方推荐标准。",
    "CSS-History-004": "CSS 的历史是怎样的？",
    "CSS-History-W3C": "W3C CSS 建议时间表",
    "CSS-Key-Features-016": "CSS 有哪些关键特性？",
    "CSS-Layouts-018": "Flexbox 和网格布局系统提供了强大的工具来创建响应灵敏且灵活的页面布局。",
    "CSS-MDN-Animations": "MDN CSS 动画指南",
    "CSS-MDN-Flexbox": "MDN Flexbox 指南",
    "CSS-MDN-Grid": "MDN CSS 网格指南",
    "CSS-MDN-Houdini": "MDN Houdini 简介",
    "CSS-Purpose-003": "它允许开发人员将内容与表示分离，定义布局、颜色和字体等样式，使网页在不同设备和屏幕上具有视觉吸引力并保持一致。",
    "CSS-Selectors-017": "选择器允许根据类型、类、ID、属性等定位特定的 HTML 元素。",
    "CSS-Tech-History-001": "什么是CSS？",
    "CSS-Usage-007": "如何在我的 Web 项目中使用 CSS？",
    "CSS-Usage-Basics-008": "要使用 CSS，您需要创建一个包含样式的单独文件（例如 style.css），然后使用 <head> 部分中的 <link> 元素将其链接到您的 HTML 文件。",
    "CSS-Usage-Inline-009": "或者，您可以使用“style”属性直接在 HTML 元素中包含内联样式，或在 <head> 部分内的 <style> 标记中嵌入 CSS。",
    "CSS-Vendor-Prefixes": "MDN 供应商前缀指南",
    "CSS-W3C-Selectors": "W3C 选择器 4 级规范",
    "CSS-WG-Future-Modules": "W3C CSS 当前工作"
}
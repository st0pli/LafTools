{
    "CSS-Advantages-010": "Hvad er fordelene ved at bruge CSS?",
    "CSS-Advantages-Customization-012": "En anden fordel er dens evne til at tilpasse udseendet og fornemmelsen af ​​flere sider på én gang, hvilket sparer tid og kræfter ved opdatering af stilarter på hele webstedet.",
    "CSS-Advantages-Separation-011": "En fordel er adskillelsen af ​​bekymringer mellem indhold og præsentation, hvilket forbedrer vedligehold og skalerbarhed af websteder.",
    "CSS-Animations-Transitions-019": "CSS-animationer og -overgange muliggør glatte visuelle effekter uden at kræve JavaScript.",
    "CSS-Def-002": "CSS (Cascading Style Sheets) er et stylesheet-sprog, der bruges til at beskrive præsentationen af ​​et dokument skrevet i HTML eller XML.",
    "CSS-Disadvantages-013": "Hvad er nogle ulemper ved CSS?",
    "CSS-Disadvantages-Browser-Compat-015": "Et andet problem er kompatibilitet på tværs af browsere, da forskellige browsere kan fortolke CSS-regler forskelligt. Dette kræver, at udviklere bruger leverandørpræfikser eller funktionsdetektionsteknikker til ensartet gengivelse på tværs af browsere.",
    "CSS-Disadvantages-Cascade-014": "En udfordring er at håndtere stilarternes overlappende karakter, hvilket nogle gange kan føre til uventede arve- og specificitetsproblemer.",
    "CSS-Evolution-006": "Siden da har det udviklet sig gennem CSS2 (1998), CSS2.1 (2007), CSS3 (løbende udvikling), der introducerer funktioner som vælgere, animationer, responsivt design og mere.",
    "CSS-Future-020": "Hvad er fremtiden for CSS-teknologi?",
    "CSS-Future-Houdini-022": "Houdini, for eksempel, sigter mod at levere API'er på lavt niveau til at tilpasse browserens gengivelsesproces, hvilket giver udviklere en hidtil uset kontrol over stil og layout.",
    "CSS-Future-Progress-021": "CSS-arbejdsgruppen fortsætter med at arbejde på nye moduler såsom CSS-variabler (Custom Properties), Houdini og Container Queries.",
    "CSS-Hist-Origin-005": "CSS blev første gang foreslået af Håkon Wium Lie i oktober 1994 og blev en officiel W3C-anbefaling i december 1996 med CSS1.",
    "CSS-History-004": "Hvad er historien om CSS?",
    "CSS-History-W3C": "Tidslinje for W3C CSS-anbefalinger",
    "CSS-Key-Features-016": "Hvad er nogle af de vigtigste funktioner i CSS?",
    "CSS-Layouts-018": "Flexbox- og Grid-layoutsystemer giver kraftfulde værktøjer til at skabe responsive og fleksible sidelayouts.",
    "CSS-MDN-Animations": "MDN-guide til CSS-animationer",
    "CSS-MDN-Flexbox": "MDN Guide til Flexbox",
    "CSS-MDN-Grid": "MDN Guide til CSS Grid",
    "CSS-MDN-Houdini": "MDN Introduktion til Houdini",
    "CSS-Purpose-003": "Det giver udviklere mulighed for at adskille indhold fra præsentation, definere stilarter som layout, farver og skrifttyper, hvilket gør websider visuelt tiltalende og konsistente på tværs af forskellige enheder og skærme.",
    "CSS-Selectors-017": "Vælgere tillader målretning af specifikke HTML-elementer baseret på deres type, klasse, ID, attributter og mere.",
    "CSS-Tech-History-001": "Hvad er CSS?",
    "CSS-Usage-007": "Hvordan bruger jeg CSS i mine webprojekter?",
    "CSS-Usage-Basics-008": "For at bruge CSS skal du oprette en separat fil (f.eks. style.css) indeholdende dine stilarter og derefter linke den til din HTML-fil ved hjælp af <link>-elementet i <head>-sektionen.",
    "CSS-Usage-Inline-009": "Alternativt kan du inkludere inline-stile direkte i HTML-elementer ved hjælp af 'style'-attributten eller indlejre CSS i <style>-tagget i <head>-sektionen.",
    "CSS-Vendor-Prefixes": "MDN-vejledning om leverandørpræfikser",
    "CSS-W3C-Selectors": "W3C Selectors Level 4 Spec",
    "CSS-WG-Future-Modules": "W3C CSS Aktuelt arbejde"
}
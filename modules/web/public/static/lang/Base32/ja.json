{
    "a4s6x": "Base32はどのように機能するのでしょうか?",
    "a8b7z": "したがって、パディングは、エンコードされる最後のビット グループが 40 ビットで割り切れない場合にのみ必要になります (8 つの Base32 文字が 40 ビットを表すため)。パディングは、エンコードされた文字列の末尾にある 0 ～ 6 個の「=」文字で構成されます。",
    "b8g2k": "Base32の使用シナリオ",
    "c0v2p": "Base32での共通操作",
    "d1x7v": "もう 1 つの例は Git です。Git では、行末やファイル名の制限に関する問題を避けるために、ハッシュされたオブジェクトが Base32 形式で保存されることがあります。また、HashiCorp Vault はキーの導出に Base32 を使用します。",
    "d9w7m": "さらに、大文字のみを使用するため、Base64 がデコード中に大文字と小文字を折り畳む場合に行う追加のセキュリティ対策のように、大文字と小文字の区別のすべての可能な組み合わせを利用することはできません。",
    "e5c7r": "Base32 は、32 文字のサブセットを使用して ASCII 文字列のデータを表す、バイナリからテキストへのエンコード スキームです。人間が判読できるように設計されており、URL に対して安全です。",
    "f0q4w": "一般的な使用シナリオの 1 つは、Google Authenticator や Yubikey などのサービスが Base32 でエンコードされたシークレットを使用する、2 要素認証 (2FA) の秘密キーの生成です。",
    "f5a0s": "さらに、Base32 はより長い出力を生成しますが、ファイル システム ルールと競合する可能性のある特殊文字がないため、ファイル名などの特定のアプリケーションにより適しています。",
    "g8r3e": "Base32 の主な欠点は、スペース効率が比較的低いことです。 Base64 よりも入力データを約 25% 拡張します。これは、同じ量のエンコードされたデータに対して、より多くのストレージまたは帯域幅が必要になることを意味します。",
    "h4e1b": "また、特定のコンテキスト (URL やファイル名など) で問題を引き起こす可能性のある英数字以外の文字が含まれる可能性がある 16 進数や Base64 よりも、大文字と小文字を区別する英数字文字列の方が扱いやすい場合にも役立ちます。",
    "h9j3m": "Base32のパディング",
    "i9o7k": "Base64 に対する Base32 の利点",
    "j1b5k": "Base32 に関連する最も一般的な操作には、バイナリ データを Base32 文字列にエンコードすることと、Base32 文字列を元のバイナリ形式にデコードすることが含まれます。",
    "k7g0n": "Base32 では、入力データの 5 ビットごとが、セット「ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=」の 32 文字のいずれかにマップされます。",
    "l1p9z": "Base32とは何ですか?",
    "m6d8b": "各 5 ビット値は 1 つの文字で表されるため、オクテット (8 ビット単位) の処理を​​好むシステムで効率的なエンコードとデコードが可能になります。",
    "n3e7r": "Base32の歴史",
    "p9s5t": "Base32 は、JavaScript への貢献で知られる Douglas Crockford によって 2001 年に開発されました。Base32 は、特にバイナリ データのテキストベースの表現が必要な状況向けに、Base64 などの既存のエンコーディングに代わるより信頼できる代替手段として作成されました。",
    "q2w5m": "Base32を使用する目的は何ですか?",
    "r6tq9z": "<b>例:</b> 「TEST12345」をBase32でエンコードするには、Node.jsのbase32-encodeなどのライブラリ、またはPythonのbase64.b32encodeなどの他の言語の組み込み関数を使用できます。",
    "s5t0n": "Base32 でのパディングには、エンコードされたデータの最後のチャンクに 8 ビットの倍数が含まれるようにするために「=」文字を追加することが含まれます。ただし、Base64 とは異なり、Base32 の各文字はすでに 5 ビットをエンコードしているため、Base32 のパディングは最小限です。",
    "t8z1v": "完全な 5 ビット グループを満たすのに十分なビットが最後に残っていない場合は、埋め込み文字 '=' が追加されます。たとえば、1 バイトには 2 つの Base32 文字が必要で、3 バイトのシーケンスには 4 つの Base32 文字が必要です。",
    "u3j9p": "Base32 は、ファイルの整合性チェック、ジオキャッシュ、安全なパスワードの生成など、情報を失わずに入力または印刷できるバイナリ データのコンパクトなテキスト表現が必要な場合によく使用されます。",
    "y6t1n": "Base32の欠点",
    "z2x8c": "Base32 は大文字と数字のみを使用するため、視覚的なあいまいさが少なく、「+」、「/」、および小文字が含まれる Base64 と比べて、手または電話での読み取りや転写が容易になります。",
    "z6m1c": "z-base-32 などの後のバリエーションは、使いやすさを向上させるために導入され、覚えにくい文字を他の文字に置き換えましたが、Crockford の元の仕様は現在でも広く使用されています。"
}
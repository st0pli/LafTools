{
    "Diff-XML-JSON-Article": "ความแตกต่างระหว่าง XML และ JSON",
    "MDN-XML-Syntax": "MDN เว็บเอกสาร - ไวยากรณ์ XML",
    "W3Schools-XML-Validation": "W3Schools - การตรวจสอบ XML",
    "XML-Advantage-Readable-018": "ลักษณะที่มนุษย์สามารถอ่านได้ช่วยให้ตรวจสอบและแก้ไขจุดบกพร่องได้ง่าย และความสามารถในการกำหนดโครงสร้างที่กำหนดเองทำให้มีความยืดหยุ่นสำหรับการใช้งานหลายกรณี",
    "XML-Advantage-Standardized-017": "XML เป็นมาตรฐานที่นำมาใช้กันอย่างแพร่หลาย ทำให้เข้ากันได้กับแพลตฟอร์มและระบบต่างๆ ส่งเสริมการทำงานร่วมกันและการแลกเปลี่ยนข้อมูล",
    "XML-Advantages-016": "ข้อดีของการใช้ XML คืออะไร?",
    "XML-Attributes-006": "องค์ประกอบสามารถมีแอตทริบิวต์ที่ให้ข้อมูลเพิ่มเติมเกี่ยวกับองค์ประกอบภายในแท็กเปิด เช่น {0}",
    "XML-Basics-001": "XML คืออะไร?",
    "XML-Def-002": "XML (eXtensible Markup Language) เป็นภาษามาร์กอัปที่กำหนดชุดกฎสำหรับการเข้ารหัสเอกสารในรูปแบบที่มนุษย์สามารถอ่านได้และเครื่องอ่านได้",
    "XML-Disadvantage-Size-020": "XML อาจมีรายละเอียดค่อนข้างมาก ส่งผลให้ขนาดไฟล์ใหญ่ขึ้นเมื่อเทียบกับทางเลือกอื่นๆ เช่น JSON ซึ่งส่งผลต่อความเร็วในการส่งข้อมูลและข้อกำหนดในการจัดเก็บข้อมูล",
    "XML-Disadvantages-019": "อะไรคือข้อเสียของการใช้ XML?",
    "XML-JSON-Diff-Structure-014": "XML ใช้แท็กที่มีรายละเอียดและเป็นลำดับชั้นสำหรับโครงสร้าง ในขณะที่ JSON อาศัยคู่คีย์-ค่าและอาร์เรย์ ตัวอย่าง: XML {0} กับ JSON {1}",
    "XML-JSON-Diff-Syntax-015": "XML มีไวยากรณ์ที่เข้มงวดกว่าด้วยแท็กปิดและแอตทริบิวต์ ในขณะที่ไวยากรณ์ของ JSON นั้นเบากว่าและใกล้เคียงกับสัญลักษณ์อ็อบเจ็กต์ JavaScript โดยทั่วไปแล้ว JSON ถือว่าแยกวิเคราะห์และส่งผ่านเว็บได้ง่ายกว่า",
    "XML-JSON-Difference-013": "XML และ JSON แตกต่างกันอย่างไร?",
    "XML-Nesting-007": "การซ้อนทำงานอย่างไรใน XML",
    "XML-Nesting-Example-009": "ตัวอย่างเช่น `<book><title>ชื่อหนังสือของฉัน</title><author>John Doe</author></book>` แสดงถึงหนังสือที่มีชื่อและผู้แต่งเป็นองค์ประกอบที่ซ้อนกัน",
    "XML-Nesting-Explanation-008": "ใน XML องค์ประกอบสามารถซ้อนกันภายในเพื่อแสดงความสัมพันธ์แบบลำดับชั้นได้ องค์ประกอบลูกจะอยู่ระหว่างแท็กเปิดและปิดขององค์ประกอบหลัก",
    "XML-Processing-Speed-021": "การแยกวิเคราะห์และสร้าง XML อาจช้าลงเนื่องจากไวยากรณ์ที่เข้มงวดและจำเป็นต้องมีการตรวจสอบความถูกต้อง โดยเฉพาะอย่างยิ่งเมื่อต้องจัดการกับเอกสารที่ซับซ้อน",
    "XML-Purpose-003": "ได้รับการออกแบบมาเพื่อส่งข้อมูลแทนที่จะแสดงข้อมูลเช่น HTML ทำให้สามารถใช้เป็นรูปแบบทั่วไปสำหรับการแบ่งปันข้อมูลที่มีโครงสร้างในแพลตฟอร์มและแอปพลิเคชันต่างๆ",
    "XML-Syntax-004": "ไวยากรณ์พื้นฐานของ XML คืออะไร?",
    "XML-Syntax-Example-005": "เอกสาร XML แบบธรรมดาประกอบด้วยองค์ประกอบในโครงสร้างคล้ายต้นไม้ แต่ละองค์ประกอบเริ่มต้นด้วยแท็กในวงเล็บมุม (<element>) และลงท้ายด้วยแท็กปิด (</element>)",
    "XML-Validation-010": "การตรวจสอบ XML คืออะไร และทำงานอย่างไร",
    "XML-Validation-Def-011": "การตรวจสอบ XML ช่วยให้มั่นใจได้ว่าเอกสาร XML ปฏิบัติตามชุดกฎเฉพาะที่กำหนดไว้ใน Document Type Definition (DTD) หรือ XML Schema (XSD)",
    "XML-Validation-Process-012": "เครื่องมือตรวจสอบจะตรวจสอบว่ามีองค์ประกอบและแอตทริบิวต์ที่จำเป็นทั้งหมดหรือไม่ ตรวจสอบประเภทข้อมูล และบังคับใช้ข้อจำกัดใดๆ ที่ระบุในสคีมาก่อนที่จะประมวลผลเอกสาร"
}
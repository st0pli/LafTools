{
    "JSON-Advantages-011": "JSON pada umumnya lebih kecil dan lebih cepat untuk dihuraikan daripada XML, menjadikannya sesuai untuk komunikasi pelayan pelanggan di mana lebar jalur dan kelajuan adalah penting.",
    "JSON-Basics-001": "Apakah JSON?",
    "JSON-Beautify-007": "Apakah JSON Beautification?",
    "JSON-Beautify-Def-008": "Pengindahan JSON merujuk kepada proses memformat data JSON ke dalam bentuk yang lebih mudah dibaca manusia dengan lekukan dan pemisah baris yang betul, menjadikannya lebih mudah untuk dianalisis dan nyahpepijat.",
    "JSON-Beautify-Example-009": "Sebelum: '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}', Selepas: '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"tatasusunan\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) ialah format pertukaran data berasaskan teks yang ringan dan mudah dibaca dan ditulis oleh manusia serta mudah untuk dihuraikan dan dijana oleh mesin.",
    "JSON-JavaScript-Support-020": "JSON disokong secara asli oleh JavaScript melalui objek global `JSON.parse()` dan `JSON.stringify()`. Mana-mana JSON yang sah juga merupakan objek atau tatasusunan literal JavaScript yang sah, yang membolehkan penukaran lancar antara kedua-dua format.",
    "JSON-JavaScript-Usage-021": "Dalam pembangunan web, JSON biasanya digunakan untuk permintaan AJAX, pemaparan sebelah pelayan dan storan data (cth., storan tempatan atau IndexedDB).",
    "JSON-Linting-022": "Apakah linting JSON dan mengapa ia penting?",
    "JSON-Linting-Benefit-024": "Linters boleh menghalang ralat masa jalan kerana JSON tidak sah, memastikan pertukaran data lancar dan menjimatkan masa penyahpepijatan potensi isu.",
    "JSON-Linting-Explanation-023": "Linting JSON ialah proses menyemak sama ada dokumen JSON mematuhi spesifikasi JSON. Ia membantu mengenal pasti ralat sintaks sebelum cuba menghuraikan data.",
    "JSON-Path-013": "Apakah itu JSON Path?",
    "JSON-Path-Example-015": "$.store.book[0].title memilih tajuk buku pertama dalam objek JSON dengan kedai yang mengandungi tatasusunan buku.",
    "JSON-Path-Explanation-014": "Laluan JSON ialah bahasa pertanyaan yang serupa dengan XPath untuk XML, membolehkan anda mengekstrak data daripada dokumen JSON menggunakan tatatanda seperti laluan.",
    "JSON-Path-Guide": "JSONPath - XPath untuk JSON",
    "JSON-Purpose-003": "Ia digunakan terutamanya untuk menghantar data antara pelayan dan aplikasi web sebagai alternatif kepada XML, dengan sokongan asli dalam JavaScript melalui kaedah `JSON.parse()` dan `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "Bagaimanakah JSON sesuai dalam JavaScript?",
    "JSON-Security-025": "Apakah beberapa kebimbangan keselamatan apabila bekerja dengan JSON?",
    "JSON-Security-Impact-026": "Risiko keselamatan yang berpotensi termasuk serangan suntikan JSON, di mana data berniat jahat dihantar yang boleh menyebabkan tingkah laku yang tidak diingini apabila dihuraikan/dilaksanakan.",
    "JSON-Security-Prevention-027": "Untuk mengurangkan risiko ini, sentiasa bersihkan input pengguna dan gunakan perpustakaan yang menghuraikan JSON dengan selamat tanpa melaksanakan kandungannya (seperti JSON.parse() terbina dalam JavaScript). Juga, elakkan menggunakan eval() untuk menghuraikan JSON.",
    "JSON-Serialization-016": "Apakah siri JSON dan penyahserikatan?",
    "JSON-Serialization-Def-017": "Pensirilan JSON ialah proses menukar objek JavaScript kepada rentetan JSON, manakala penyahsiran adalah sebaliknya - menukar rentetan JSON kembali menjadi objek JavaScript.",
    "JSON-Serialization-W3Schools": "Siri JSON pada W3Schools",
    "JSON-Syntax-004": "Apakah sintaks asas JSON?",
    "JSON-Syntax-Example-f005": "Objek JSON terdiri daripada pasangan nilai kunci yang disertakan dalam pendakap kerinting {0}. Setiap kunci mestilah rentetan yang disertakan dalam petikan berganda, diikuti dengan titik bertindih, dan kemudian nilainya.",
    "JSON-Syntax-Reference": "Dokumen Web MDN pada JSON",
    "JSON-Value-Types-006": "Nilai boleh berupa rentetan, nombor, boolean, tatasusunan (disertakan dalam kurungan segi empat sama",
    "JSON-vs-XML-010": "Bagaimanakah JSON dibandingkan dengan XML?",
    "JSON-vs-XML-Article": "Membandingkan JSON dan XML",
    "MDN-JSON-in-JavaScript": "Dokumen Web MDN - Bekerja dengan JSON",
    "OWASP-JSON-Injection": "OWASP - Suntikan JSON",
    "XML-Advantages-012": "XML menyediakan lebih banyak fleksibiliti struktur dan menyokong ruang nama, yang boleh memberi manfaat untuk struktur dokumen kompleks dan kesalingoperasian merentas sistem."
}
{
    "41ev7": "MD2",
    "5-S-B": "MD4 dal file",
    "6wtIW": "MD2 (Message-Digest Algorithm 2) è una funzione hash crittografica che accetta un input e produce un valore hash a 128 bit (16 byte). È stato sviluppato da Ronald Rivest nel 1989 come successore di MD1. MD2 è ottimizzato per computer a 8 bit ed è relativamente semplice rispetto ad altre funzioni hash. Tuttavia, MD2 ha dimostrato di essere vulnerabile agli attacchi di collisione e non è più considerato sicuro per scopi crittografici. MD2 è ancora utilizzato in alcune applicazioni, ma viene gradualmente eliminato a favore di funzioni hash più sicure come SHA-256 e SHA-3.",
    "70PnM": "MD4",
    "7gKzt": "MD4 (Message-Digest Algorithm 4) è una funzione hash crittografica che accetta un input e produce un valore hash a 128 bit (16 byte). È stato sviluppato da Ronald Rivest nel 1990 come successore di MD2 e MD3. Tuttavia, è stato dimostrato che MD4 è vulnerabile agli attacchi di collisione e non è più considerato sicuro per scopi crittografici. MD4 è ancora utilizzato in alcune applicazioni, ma viene gradualmente eliminato a favore di funzioni hash più sicure come SHA-256 e SHA-3.",
    "AWqXD": "MD5",
    "E88Ej": "Fare clic qui per crittografare il testo immesso",
    "ECm8j": "Fare clic qui per crittografare il testo immesso",
    "IP8-V": "MD2 dal testo",
    "IPtV": "MD4 dal testo",
    "P56UK": "Fare clic qui per crittografare il testo immesso",
    "PJNze": "Fare clic qui per crittografare il testo immesso",
    "REFy8": "Fare clic qui per crittografare il testo immesso",
    "TtyeA": "SHA1",
    "TtyeA.sha224": "SHA224",
    "TtyeA.sha256": "SHA256",
    "TtyeA.sha384": "SHA384",
    "TtyeA.sha512": "SHA512",
    "cPS6q": "Tutti gli strumenti",
    "eNNrM": "MD2 dal file",
    "g0QB9": "L'algoritmo message-digest MD5 è una funzione hash ampiamente utilizzata che produce un valore hash a 128 bit. MD5 è stato progettato da Ronald Rivest nel 1991 per sostituire una precedente funzione hash MD4,[3] ed è stato specificato nel 1992 come RFC 1321. MD5 può essere utilizzato come checksum per verificare l'integrità dei dati contro la corruzione involontaria. Storicamente è stato ampiamente utilizzato come funzione hash crittografica; tuttavia è stato riscontrato che soffre di ampie vulnerabilità. Rimane adatto per altri scopi non crittografici, ad esempio per determinare la partizione per una particolare chiave in un database partizionato, e può essere preferito a causa dei requisiti computazionali inferiori rispetto ai più recenti algoritmi Secure Hash.[4]",
    "gh9zA": "SHA-1 o Secure Hash Algorithm 1 è un algoritmo crittografico che accetta un input e produce un valore hash di 160 bit (20 byte).",
    "gh9zA.sha224": "SHA-224 è una funzione hash crittografica che accetta un input e produce un valore hash a 224 bit (28 byte). Fa parte della famiglia di funzioni hash SHA-2, che include anche SHA-256, SHA-384 e SHA-512. SHA-224 è progettato per essere più sicuro del suo predecessore, SHA-1, che ha dimostrato di essere vulnerabile agli attacchi di collisione. SHA-224 è ampiamente utilizzato nelle firme digitali, nei codici di autenticazione dei messaggi e in altre applicazioni in cui l'integrità dei dati è fondamentale.",
    "gh9zA.sha256": "SHA-256 è una funzione hash crittografica che accetta un input e produce un valore hash a 256 bit (32 byte). Fa parte della famiglia di funzioni hash SHA-2, che include anche SHA-224, SHA-384 e SHA-512. SHA-256 è progettato per essere più sicuro del suo predecessore, SHA-1, che ha dimostrato di essere vulnerabile agli attacchi di collisione. SHA-256 è ampiamente utilizzato nelle firme digitali, nei codici di autenticazione dei messaggi e in altre applicazioni in cui l'integrità dei dati è fondamentale.",
    "gh9zA.sha384": "SHA-384 è una funzione hash crittografica che accetta un input e produce un valore hash a 384 bit (48 byte). Fa parte della famiglia di funzioni hash SHA-2, che include anche SHA-224, SHA-256, SHA-512, SHA-512/224 e SHA-512/256. SHA-384 è progettato per essere più sicuro del suo predecessore, SHA-1, che ha dimostrato di essere vulnerabile agli attacchi di collisione. SHA-384 è ampiamente utilizzato nelle firme digitali, nei codici di autenticazione dei messaggi e in altre applicazioni in cui l'integrità dei dati è fondamentale.",
    "gh9zA.sha512": "SHA-512 è una funzione hash crittografica che accetta un input e produce un valore hash a 512 bit (64 byte). Fa parte della famiglia di funzioni hash SHA-2, che include anche SHA-224, SHA-256, SHA-384, SHA-512/224 e SHA-512/256. SHA-512 è progettato per essere più sicuro del suo predecessore, SHA-1, che ha dimostrato di essere vulnerabile agli attacchi di collisione. SHA-512 è ampiamente utilizzato nelle firme digitali, nei codici di autenticazione dei messaggi e in altre applicazioni in cui l'integrità dei dati è fondamentale.",
    "gwo79": "SHA1 dal file",
    "gwo79.sha224": "SHA224 dal file",
    "gwo79.sha256": "SHA256 dal file",
    "gwo79.sha384": "SHA384 dal file",
    "gwo79.sha512": "SHA512 dal file",
    "jjhid": "questo è ciao, mondo",
    "m0105": "Codec",
    "m0106": "Convertitore",
    "m0107": "Generatore",
    "m0108": "Formattatore",
    "m0109": "Centro documenti",
    "o3poi": "SHA1 dal testo",
    "o3poi.sha224": "SHA224 dal testo",
    "o3poi.sha256": "SHA256 dal testo",
    "o3poi.sha384": "SHA384 dal testo",
    "o3poi.sha512": "SHA512 dal testo",
    "pl8S6": "Fare clic qui per crittografare il testo immesso",
    "qjQvD": "Fare clic qui per crittografare il testo immesso",
    "vQq9v": "MD5 dal testo",
    "vhgr3": "Fare clic qui per selezionare un file e crittografarlo direttamente.",
    "vu10K": "MD5 dal file",
    "wqp_4": "Fare clic qui per selezionare un file e crittografarlo direttamente.",
    "y_2Q1": "Codificare e decodificare",
    "y_2Q2": "Criptovaluta simmetrica",
    "y_2Q3": "Criptovaluta asimmetrica",
    "y_2Q4": "Algoritmi nazionali cinesi",
    "y_2Q5": "Aut. Web",
    "y_BN6": "Algoritmo di digestione"
}
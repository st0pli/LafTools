{
  "result": "Below is the TypeScript conversion of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `GOSTHash` class, following the pattern of the provided example.\n2. The description at the top of the file has been updated to reflect the functionality of the code.\n3. Natural text has been wrapped with the `Dot` function as requested.\n4. The import statements remain unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The GOSTHash class provides a hashing operation using the GOST cryptographic hash function.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\nimport GostDigest from \"../vendor/gost/gostDigest.mjs\";\nimport { toHexFast } from \"../lib/Hex.mjs\";\n\n/**\n * GOST hash operation\n */\nclass GOSTHash extends Operation {\n  /**\n   * GOSTHash constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"gostHash.name\", \"GOST Hash\");\n    this.module = \"Hashing\";\n    this.description = Dot(\n      \"gostHash.desc\",\n      \"The GOST hash function, defined in the standards GOST R 34.11-94 and GOST 34.311-95 is a 256-bit cryptographic hash function. It was initially defined in the Russian national standard GOST R 34.11-94 <i>Information Technology – Cryptographic Information Security – Hash Function</i>. The equivalent standard used by other member-states of the CIS is GOST 34.311-95.<br><br>This function must not be confused with a different Streebog hash function, which is defined in the new revision of the standard GOST R 34.11-2012.<br><br>The GOST hash function is based on the GOST block cipher.\"\n    );\n    this.infoURL = \"https://wikipedia.org/wiki/GOST_(hash_function)\";\n    this.inputType = \"ArrayBuffer\";\n    this.outputType = \"string\";\n    this.args = [\n      {\n        name: Dot(\"gostHash.arg.algorithm\", \"Algorithm\"),\n        type: \"argSelector\",\n        value: [\n          {\n            name: \"GOST 28147 (1994)\",\n            off: [1],\n            on: [2],\n          },\n          {\n            name: \"GOST R 34.11 (Streebog, 2012)\",\n            on: [1],\n            off: [2],\n          },\n        ],\n      },\n      {\n        name: Dot(\"gostHash.arg.length\", \"Digest length\"),\n        type: \"option\",\n        value: [\"256\", \"512\"],\n      },\n      {\n        name: Dot(\"gostHash.arg.sBox\", \"sBox\"),\n        type: \"option\",\n        value: [\n          \"E-TEST\",\n          \"E-A\",\n          \"E-B\",\n          \"E-C\",\n          \"E-D\",\n          \"E-SC\",\n          \"E-Z\",\n          \"D-TEST\",\n          \"D-A\",\n          \"D-SC\",\n        ],\n      },\n    ];\n  }\n\n  /**\n   * @param {ArrayBuffer} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  run(input, args) {\n    const [version, length, sBox] = args;\n\n    const versionNum = version === \"GOST 28147 (1994)\" ? 1994 : 2012;\n    const algorithm = {\n      name: versionNum === 1994 ? \"GOST 28147\" : \"GOST R 34.10\",\n      version: versionNum,\n      mode: \"HASH\",\n    };\n\n    if (versionNum === 1994) {\n      algorithm.sBox = sBox;\n    } else {\n      algorithm.length = parseInt(length, 10);\n    }\n\n    try {\n      const gostDigest = new GostDigest(algorithm);\n\n      return toHexFast(gostDigest.digest(input));\n    } catch (err) {\n      throw new OperationError(err);\n    }\n  }\n\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Crypto\",\n        \"description\": Dot(\n          \"gostHash.optDetail.desc\",\n          \"The GOST hash function is a 256-bit cryptographic hash function defined in the GOST R 34.11-94 and GOST 34.311-95 standards.\"\n        ),\n        \"infoURL\": \"https://wikipedia.org/wiki/GOST_(hash_function)\",\n        \"inputType\": \"Array",
  "response": {
    "choices": [
      {
        "finish_reason": "length",
        "index": 0,
        "message": {
          "content": "Below is the TypeScript conversion of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `GOSTHash` class, following the pattern of the provided example.\n2. The description at the top of the file has been updated to reflect the functionality of the code.\n3. Natural text has been wrapped with the `Dot` function as requested.\n4. The import statements remain unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The GOSTHash class provides a hashing operation using the GOST cryptographic hash function.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\nimport GostDigest from \"../vendor/gost/gostDigest.mjs\";\nimport { toHexFast } from \"../lib/Hex.mjs\";\n\n/**\n * GOST hash operation\n */\nclass GOSTHash extends Operation {\n  /**\n   * GOSTHash constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"gostHash.name\", \"GOST Hash\");\n    this.module = \"Hashing\";\n    this.description = Dot(\n      \"gostHash.desc\",\n      \"The GOST hash function, defined in the standards GOST R 34.11-94 and GOST 34.311-95 is a 256-bit cryptographic hash function. It was initially defined in the Russian national standard GOST R 34.11-94 <i>Information Technology – Cryptographic Information Security – Hash Function</i>. The equivalent standard used by other member-states of the CIS is GOST 34.311-95.<br><br>This function must not be confused with a different Streebog hash function, which is defined in the new revision of the standard GOST R 34.11-2012.<br><br>The GOST hash function is based on the GOST block cipher.\"\n    );\n    this.infoURL = \"https://wikipedia.org/wiki/GOST_(hash_function)\";\n    this.inputType = \"ArrayBuffer\";\n    this.outputType = \"string\";\n    this.args = [\n      {\n        name: Dot(\"gostHash.arg.algorithm\", \"Algorithm\"),\n        type: \"argSelector\",\n        value: [\n          {\n            name: \"GOST 28147 (1994)\",\n            off: [1],\n            on: [2],\n          },\n          {\n            name: \"GOST R 34.11 (Streebog, 2012)\",\n            on: [1],\n            off: [2],\n          },\n        ],\n      },\n      {\n        name: Dot(\"gostHash.arg.length\", \"Digest length\"),\n        type: \"option\",\n        value: [\"256\", \"512\"],\n      },\n      {\n        name: Dot(\"gostHash.arg.sBox\", \"sBox\"),\n        type: \"option\",\n        value: [\n          \"E-TEST\",\n          \"E-A\",\n          \"E-B\",\n          \"E-C\",\n          \"E-D\",\n          \"E-SC\",\n          \"E-Z\",\n          \"D-TEST\",\n          \"D-A\",\n          \"D-SC\",\n        ],\n      },\n    ];\n  }\n\n  /**\n   * @param {ArrayBuffer} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  run(input, args) {\n    const [version, length, sBox] = args;\n\n    const versionNum = version === \"GOST 28147 (1994)\" ? 1994 : 2012;\n    const algorithm = {\n      name: versionNum === 1994 ? \"GOST 28147\" : \"GOST R 34.10\",\n      version: versionNum,\n      mode: \"HASH\",\n    };\n\n    if (versionNum === 1994) {\n      algorithm.sBox = sBox;\n    } else {\n      algorithm.length = parseInt(length, 10);\n    }\n\n    try {\n      const gostDigest = new GostDigest(algorithm);\n\n      return toHexFast(gostDigest.digest(input));\n    } catch (err) {\n      throw new OperationError(err);\n    }\n  }\n\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Crypto\",\n        \"description\": Dot(\n          \"gostHash.optDetail.desc\",\n          \"The GOST hash function is a 256-bit cryptographic hash function defined in the GOST R 34.11-94 and GOST 34.311-95 standards.\"\n        ),\n        \"infoURL\": \"https://wikipedia.org/wiki/GOST_(hash_function)\",\n        \"inputType\": \"Array",
          "role": "assistant"
        }
      }
    ],
    "created": 1713889608,
    "id": "8596362818125707467",
    "model": "glm-4",
    "request_id": "8596362818125707467",
    "usage": {
      "completion_tokens": 1024,
      "prompt_tokens": 1331,
      "total_tokens": 2355
    }
  }
}
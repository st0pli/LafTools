{
    "JSON-Advantages-011": "JSON, как правило, меньше по размеру и быстрее анализируется, чем XML, что делает его идеальным для связи клиент-сервер, где пропускная способность и скорость имеют решающее значение.",
    "JSON-Basics-001": "Что такое JSON?",
    "JSON-Beautify-007": "Что такое украшение JSON?",
    "JSON-Beautify-Def-008": "Украшение JSON — это процесс форматирования данных JSON в более удобочитаемую форму с правильными отступами и разрывами строк, что упрощает анализ и отладку.",
    "JSON-Beautify-Example-009": "До: '{\\\"ключ\\\":\\\"значение\\\",\\\"массив\\\":[1,2,3]}', После: '{\\n \\\"ключ\\\": \\\"значение\\\", \\n \\\"массив\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (нотация объектов JavaScript) — это легкий текстовый формат обмена данными, который легко читать и писать людям, а машинам легко анализировать и генерировать.",
    "JSON-JavaScript-Support-020": "JSON изначально поддерживается JavaScript через глобальные объекты JSON.parse() и JSON.stringify(). Любой действительный JSON также является допустимым литеральным объектом или массивом JavaScript, что обеспечивает плавное преобразование между двумя форматами.",
    "JSON-JavaScript-Usage-021": "В веб-разработке JSON обычно используется для запросов AJAX, рендеринга на стороне сервера и хранения данных (например, локальное хранилище или IndexedDB).",
    "JSON-Linting-022": "Что такое линтинг JSON и почему это важно?",
    "JSON-Linting-Benefit-024": "Линтеры могут предотвратить ошибки во время выполнения из-за недопустимого JSON, обеспечивая плавный обмен данными и экономя время на отладку потенциальных проблем.",
    "JSON-Linting-Explanation-023": "Линтинг JSON — это процесс проверки соответствия документа JSON спецификации JSON. Это помогает выявить синтаксические ошибки перед попыткой анализа данных.",
    "JSON-Path-013": "Что такое путь JSON?",
    "JSON-Path-Example-015": "$.store.book[0].title выбирает название первой книги в объекте JSON с магазином, содержащим массив книг.",
    "JSON-Path-Explanation-014": "JSON Path — это язык запросов, аналогичный XPath для XML, позволяющий извлекать данные из документов JSON, используя нотацию, подобную пути.",
    "JSON-Path-Guide": "JSONPath — XPath для JSON.",
    "JSON-Purpose-003": "Он в основном используется для передачи данных между сервером и веб-приложением в качестве альтернативы XML, со встроенной поддержкой JavaScript через методы JSON.parse() и JSON.stringify().",
    "JSON-Scope-in-JavaScript-019": "Как JSON вписывается в JavaScript?",
    "JSON-Security-025": "Какие проблемы безопасности возникают при работе с JSON?",
    "JSON-Security-Impact-026": "Потенциальные угрозы безопасности включают атаки с использованием JSON-инъекций, при которых отправляются вредоносные данные, которые могут вызвать непреднамеренное поведение при анализе/выполнении.",
    "JSON-Security-Prevention-027": "Чтобы снизить эти риски, всегда очищайте вводимые пользователем данные и используйте библиотеки, которые безопасно анализируют JSON, не выполняя его содержимое (например, встроенный в JavaScript JSON.parse()). Кроме того, избегайте использования eval() для анализа JSON.",
    "JSON-Serialization-016": "Что такое сериализация и десериализация JSON?",
    "JSON-Serialization-Def-017": "Сериализация JSON — это процесс преобразования объекта JavaScript в строку JSON, а десериализация — это обратный процесс — превращение строки JSON обратно в объект JavaScript.",
    "JSON-Serialization-W3Schools": "Сериализация JSON в W3Schools",
    "JSON-Syntax-004": "Каков основной синтаксис JSON?",
    "JSON-Syntax-Example-f005": "Объект JSON состоит из пар ключ-значение, заключенных в фигурные скобки {0}. Каждый ключ должен представлять собой строку, заключенную в двойные кавычки, за которой следует двоеточие, а затем его значение.",
    "JSON-Syntax-Reference": "Веб-документы MDN в формате JSON",
    "JSON-Value-Types-006": "Значения могут быть строками, числами, логическими значениями, массивами (заключенными в квадратные скобки).",
    "JSON-vs-XML-010": "Чем JSON отличается от XML?",
    "JSON-vs-XML-Article": "Сравнение JSON и XML",
    "MDN-JSON-in-JavaScript": "Веб-документы MDN — Работа с JSON",
    "OWASP-JSON-Injection": "OWASP — внедрение JSON",
    "XML-Advantages-012": "XML обеспечивает большую гибкость структуры и поддерживает пространства имен, что может быть полезно для сложных структур документов и обеспечения совместимости между системами."
}
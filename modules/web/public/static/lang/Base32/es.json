{
    "a4s6x": "¿Cómo funciona Base32?",
    "a8b7z": "Por lo tanto, el relleno sólo es necesario si el último grupo de bits que se codifican no es divisible por 40 bits (ya que 8 caracteres Base32 representan 40 bits). El relleno constará de cero a seis caracteres '=\" al final de la cadena codificada.",
    "b8g2k": "Escenarios de uso para Base32",
    "c0v2p": "Operaciones comunes con Base32",
    "d1x7v": "Otro ejemplo es Git, donde los objetos hash a veces se almacenan en formato Base32 para evitar problemas con finales de línea y restricciones de nombres de archivos. Además, HashiCorp Vault utiliza Base32 para la derivación de claves.",
    "d9w7m": "Además, debido a que solo usa letras mayúsculas, no puede utilizar todas las combinaciones posibles de distinción entre mayúsculas y minúsculas como medida de seguridad adicional, como lo hace a veces Base64 con el plegado de mayúsculas y minúsculas durante la decodificación.",
    "e5c7r": "Base32 es un esquema de codificación de binario a texto que representa datos en una cadena ASCII utilizando un subconjunto de 32 caracteres. Está diseñado para ser legible por humanos y seguro para URL.",
    "f0q4w": "Un escenario de uso popular es la generación de claves secretas para la autenticación de dos factores (2FA), donde servicios como Google Authenticator y Yubikey utilizan secretos codificados en Base32.",
    "f5a0s": "Además, Base32 produce resultados más largos, pero puede ser más adecuado para aplicaciones específicas como nombres de archivos debido a su falta de caracteres especiales que podrían entrar en conflicto con las reglas del sistema de archivos.",
    "g8r3e": "La principal desventaja de Base32 es su eficiencia espacial relativamente pobre; expande los datos de entrada en aproximadamente un 25% más que Base64. Esto significa que ocupa más almacenamiento o ancho de banda para la misma cantidad de datos codificados.",
    "h4e1b": "También es útil para situaciones en las que las cadenas alfanuméricas que distinguen entre mayúsculas y minúsculas son más fáciles de manejar que las hexadecimales o base64, que pueden contener caracteres no alfanuméricos que podrían causar problemas en ciertos contextos (como URL o nombres de archivos).",
    "h9j3m": "Relleno en Base32",
    "i9o7k": "Ventajas de Base32 sobre Base64",
    "j1b5k": "Las operaciones más comunes que involucran Base32 incluyen codificar datos binarios en una cadena Base32 y decodificar una cadena Base32 nuevamente a su formato binario original.",
    "k7g0n": "En Base32, cada 5 bits de datos de entrada se asignan a uno de los 32 caracteres del conjunto 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='.",
    "l1p9z": "¿Qué es Base32?",
    "m6d8b": "Cada valor de 5 bits está representado por un solo carácter, lo que permite una codificación y decodificación eficiente para sistemas que prefieren trabajar con octetos (unidades de 8 bits).",
    "n3e7r": "Historia de Base32",
    "p9s5t": "Base32 fue desarrollado por Douglas Crockford, conocido por sus contribuciones a JavaScript, en 2001. Fue creado como una alternativa más confiable a las codificaciones existentes como Base64, especialmente para situaciones que requieren representaciones de datos binarios basadas en texto.",
    "q2w5m": "¿Propósito de usar Base32?",
    "r6tq9z": "<b>Ejemplo:</b> Para codificar 'TEST12345' en Base32, puede usar bibliotecas como base32-encode en Node.js o funciones integradas en otros lenguajes como base64.b32encode de Python.",
    "s5t0n": "El relleno en Base32 implica agregar caracteres '=\" para garantizar que el fragmento final de datos codificados todavía contenga un múltiplo de 8 bits. Sin embargo, a diferencia de Base64, el relleno de Base32 es mínimo porque cada carácter de Base32 ya codifica 5 bits.",
    "t8z1v": "Cuando no quedan suficientes bits al final para llenar un grupo completo de 5 bits, se agregan caracteres de relleno '=\". Por ejemplo, un byte requiere dos caracteres Base32 y una secuencia de 3 bytes necesitaría cuatro caracteres Base32.",
    "u3j9p": "Base32 se utiliza a menudo cuando se necesita una representación textual compacta de datos binarios que se puedan escribir o imprimir sin perder información, como en comprobaciones de integridad de archivos, geocaching y generación segura de contraseñas.",
    "y6t1n": "Desventajas de Base32",
    "z2x8c": "Base32 tiene menos ambigüedades visuales ya que utiliza sólo letras mayúsculas y dígitos, lo que hace que sea más fácil de leer y transcribir a mano o por teléfono en comparación con Base64, que incluye '+', '/' y letras minúsculas.",
    "z6m1c": "Se introdujeron variaciones posteriores como z-base-32 para mejorar la usabilidad, reemplazando algunos caracteres menos memorables por otros, pero la especificación original de Crockford sigue siendo ampliamente utilizada en la actualidad."
}
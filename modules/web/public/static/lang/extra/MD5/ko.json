{
    "BLAKE2-021": "BLAKE2는 높은 보안 수준을 유지하면서 SHA-2에 비해 더 빠른 속도를 제공하는 또 다른 현대적인 대안입니다. BLAKE2b 및 BLAKE2s를 포함한 다양한 변형을 제공합니다.",
    "BLAKE2_Info-023": "블레이크2 정보",
    "MD5-Advantages-012": "MD5를 사용하면 어떤 이점이 있나요?",
    "MD5-AlgorithmDetails-011": "MD5 알고리즘 세부정보",
    "MD5-Alternatives-019": "보안 해싱을 위한 MD5의 대안은 무엇입니까?",
    "MD5-Applications-024": "MD5를 사용하고 있거나 사용해 온 다른 응용 프로그램은 무엇입니까?",
    "MD5-Breakdown-017": "시간이 지남에 따라 MD5에서 몇 가지 암호화 약점이 발견되었으며 연구자들은 충돌을 발생시켜 무결성과 보안을 더욱 손상시키는 실제 사례를 보여주었습니다.",
    "MD5-Collision-016": "MD5는 충돌 공격에 취약합니다. 즉, 두 개의 서로 다른 입력이 동일한 해시 출력을 생성할 수 있습니다. 이로 인해 디지털 서명이나 비밀번호 저장과 같은 애플리케이션에는 안전하지 않습니다.",
    "MD5-CollisionExample-007": "MD5 충돌 예",
    "MD5-DataIntegrity-026": "또한 파일 동기화를 위해 rsync를 사용하거나 대규모 데이터 세트를 체크섬할 때와 같이 전송 및 저장 중에 데이터의 무결성을 확인하는 데 일반적으로 사용되었습니다.",
    "MD5-Def-002": "MD5(Message-Digest Algorithm 5)는 입력 메시지를 가져와 고정 크기 128비트 해시 값을 생성하는 널리 사용되는 암호화 해시 함수입니다.",
    "MD5-DigitalSignature-Risks-027": "디지털 서명에 MD5를 사용할 때의 위험",
    "MD5-Disadvantages-015": "MD5의 단점과 보안 문제는 무엇입니까?",
    "MD5-FAQ-001": "MD5란 무엇입니까?",
    "MD5-FileChecksum-005": "MD5는 소프트웨어나 대용량 파일을 다운로드할 때 파일 무결성을 확인하는 데 자주 사용됩니다. 다운로드한 파일이 변조되지 않았는지 확인하기 위해 소스에서 제공한 것과 비교할 수 있는 체크섬을 생성합니다.",
    "MD5-Future-028": "MD5는 오늘날에도 여전히 관련이 있습니까?",
    "MD5-InsecurityExamples-018": "MD5 보안 분석 예",
    "MD5-Operation-008": "MD5 작동은 어떻게 작동하나요?",
    "MD5-PKI-025": "MD5는 디지털 서명 생성을 위해 PKI(공개 키 인프라)에 사용되었지만 보안 문제로 인해 사용이 거의 중단되었습니다. MD5로 서명된 인증서는 대부분의 최신 시스템에서 더 이상 신뢰되지 않습니다.",
    "MD5-PasswordHashing-006": "이는 역사적으로 비밀번호 해싱에도 사용되었지만 현재는 충돌에 대한 취약성과 크래킹 용이성으로 인해 안전하지 않은 것으로 간주됩니다. 최신 시스템은 bcrypt 또는 Argon2와 같은 더 강력한 대안으로 전환되었습니다.",
    "MD5-Process-009": "MD5는 입력 메시지를 청크로 나누고 각 청크를 논리 기능, 모듈식 산술 및 비트 연산과 관련된 여러 라운드의 처리를 통해 전달하는 방식으로 작동합니다. 결과는 연결되어 최종 128비트 해시 값을 생성합니다.",
    "MD5-Purpose-003": "그 목적은 특정 데이터에 대해 고유한 디지털 지문을 생성하여 데이터 무결성을 보장하는 것입니다. 원본 데이터의 단일 비트라도 변경되면 MD5 해시는 완전히 달라집니다.",
    "MD5-Relevance-029": "MD5는 더 이상 암호화 목적으로 안전한 것으로 간주되지 않으며, 특히 충돌 저항이나 강력한 메시지 무결성이 필요한 새로운 응용 프로그램의 경우 더욱 그렇습니다. 그러나 속도가 보안보다 우선시되는 레거시 시스템이나 비암호화 애플리케이션에서는 여전히 발견될 수 있습니다.",
    "MD5-Rounds-010": "알고리즘은 상수로 초기화되는 128비트 내부 상태에서 수행되는 4개의 주요 단계로 구성됩니다. 총 64개의 처리 라운드가 있으며, 각 라운드는 입력 메시지 블록을 기반으로 내부 상태를 변환합니다.",
    "MD5-Speed-013": "MD5는 상대적으로 빠르기 때문에 빠른 해싱이 필수적인 애플리케이션에 널리 사용됩니다.",
    "MD5-Standardization-014": "다양한 프로그래밍 언어와 플랫폼으로 널리 표준화되고 구현되어 기존 시스템 및 도구에 쉽게 통합할 수 있습니다.",
    "MD5-Summary-031": "요약하자면, MD5에 대해 어떤 핵심 사항을 기억해야 합니까?",
    "MD5-Summary-Point1-032": "MD5는 충돌 공격에 취약한 빠르지만 안전하지 않은 암호화 해시 함수입니다.",
    "MD5-Summary-Point2-033": "주요 용도는 데이터 무결성을 보장하고 일부 암호화 작업을 수행하는 것이었지만 대부분 SHA-256 및 BLAKE2와 같은 더 강력한 대안으로 대체되었습니다.",
    "MD5-Summary-Point3-034": "레거시 시스템이나 보안에 민감하지 않은 시나리오에서 MD5가 발생할 수 있지만 암호화 보안이 필요한 새 프로젝트에는 MD5를 사용하지 않는 것이 중요합니다.",
    "MD5-Transition-030": "SHA-256 및 BLAKE2와 같은 더욱 새롭고 안전한 알고리즘이 널리 사용 가능해지고 이해도가 높아짐에 따라 보안이 우려되는 모든 상황에서는 MD5에서 전환하는 것이 좋습니다.",
    "MD5-Usage-004": "MD5는 실제로 어떻게 사용됩니까?",
    "SHA-256-020": "SHA-256(Secure Hash Algorithm)은 MD5보다 강력한 보안을 제공하는 널리 사용되는 대안입니다. 더 큰 256비트 해시 값을 생성하며 SHA-2 제품군의 일부입니다.",
    "SHA-2_Info-022": "SHA-2 정보"
}
{
    "R_S7_CLAo": "Eksempel: For at kode 'TEST12345' i Base32 kan du bruge biblioteker som base32-encode i Node.js eller indbyggede funktioner på andre sprog såsom Pythons base64.b32encode.",
    "a4s6x": "Hvordan virker Base32?",
    "a8b7z": "Udfyldning er således kun nødvendig, hvis den sidste gruppe af bit, der kodes, ikke er delelig med 40 bit (da 8 Base32-tegn repræsenterer 40 bit). Padding vil bestå af nul til seks '='-tegn i slutningen af ​​den kodede streng.",
    "b8g2k": "Brugsscenarier for Base32",
    "c0v2p": "Almindelige operationer med Base32",
    "d1x7v": "Et andet eksempel er i Git, hvor hash-objekter nogle gange gemmes i Base32-format for at undgå problemer med linjeafslutninger og filnavnsbegrænsninger. HashiCorp Vault bruger også Base32 til nøgleudledning.",
    "d9w7m": "Desuden, fordi den kun bruger store bogstaver, kan den ikke bruge alle mulige kombinationer af følsomhed over for store og små bogstaver som en ekstra sikkerhedsforanstaltning, som Base64 nogle gange gør med sagsfoldning under afkodning.",
    "e5c7r": "Base32 er et binært-til-tekst-kodningsskema, der repræsenterer data i en ASCII-streng ved hjælp af et undersæt på 32 tegn. Den er designet til at være læsbar og URL-sikker.",
    "f0q4w": "Et populært brugsscenarie er at generere hemmelige nøgler til Two-Factor Authentication (2FA), hvor tjenester som Google Authenticator og Yubikey bruger Base32-kodede hemmeligheder.",
    "f5a0s": "Derudover producerer Base32 længere output, men kan være mere egnet til specifikke applikationer som filnavne på grund af dens mangel på specialtegn, der kan være i konflikt med filsystemreglerne.",
    "g8r3e": "Den største ulempe ved Base32 er dens relativt ringe pladseffektivitet; den udvider inputdata med cirka 25 % mere end Base64. Det betyder, at den optager mere lagerplads eller båndbredde for den samme mængde kodede data.",
    "h4e1b": "Det er også nyttigt i situationer, hvor store og små bogstaver er nemmere at håndtere end hexadecimale eller base64, som kan indeholde ikke-alfanumeriske tegn, der kan forårsage problemer i visse sammenhænge (såsom URL'er eller filnavne).",
    "h9j3m": "Polstring i Base32",
    "i9o7k": "Fordele ved Base32 frem for Base64",
    "j1b5k": "De mest almindelige operationer, der involverer Base32, omfatter indkodning af binære data til en Base32-streng og afkodning af en Base32-streng tilbage til dets originale binære format.",
    "k7g0n": "I Base32 er hver 5. bit af inputdata afbildet til et af de 32 tegn fra sættet 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='.",
    "l1p9z": "Hvad er Base32?",
    "m6d8b": "Hver 5-bit værdi er repræsenteret af et enkelt tegn, hvilket muliggør effektiv kodning og afkodning for systemer, der foretrækker at arbejde med oktetter (8-bit enheder).",
    "n3e7r": "Historien om Base32",
    "p9s5t": "Base32 blev udviklet af Douglas Crockford, kendt for sine bidrag til JavaScript, i 2001. Det blev skabt som et mere pålideligt alternativ til eksisterende kodninger som Base64, især til situationer, der kræver tekstbaserede repræsentationer af binære data.",
    "q2w5m": "Formål med at bruge Base32?",
    "s5t0n": "Padding i Base32 involverer tilføjelse af '='-tegn for at sikre, at den sidste del af kodede data stadig indeholder et multiplum af 8 bit. I modsætning til Base64 er Base32-polstring dog minimal, fordi hvert Base32-tegn allerede koder for 5 bit.",
    "t8z1v": "Når der ikke er nok bit tilbage i slutningen til at fylde en hel 5-bit gruppe, tilføjes udfyldningstegn '='. For eksempel kræver en byte to Base32-tegn, og en 3-byte-sekvens kræver fire Base32-tegn.",
    "u3j9p": "Base32 bruges ofte, når du har brug for en kompakt tekstlig repræsentation af binære data, der kan skrives eller udskrives uden at miste information, som i filintegritetstjek, geocaching og sikker adgangskodegenerering.",
    "y6t1n": "Ulemper ved Base32",
    "z2x8c": "Base32 har færre visuelle uklarheder, da den kun bruger store bogstaver og cifre, hvilket gør det nemmere at læse og transskribere i hånden eller over telefonen sammenlignet med Base64, som inkluderer '+', '/' og små bogstaver.",
    "z6m1c": "Senere variationer som z-base-32 blev introduceret for at forbedre brugervenligheden og erstatte nogle mindre mindeværdige karakterer med andre, men Crockfords originale specifikation er stadig meget brugt i dag."
}
{
    "MySQL-Performance-Tuning": "Советы по настройке производительности MySQL",
    "OWASP-SQL-Injection": "Руководство по внедрению SQL-кода OWASP",
    "SQL-Basics-001": "Что такое SQL?",
    "SQL-Beautifier-Example": "Онлайн-форматировщик SQL",
    "SQL-Beautify-006": "Что такое улучшение SQL?",
    "SQL-Beautify-Def-007": "Украшение SQL — это процесс форматирования кода SQL для улучшения читаемости путем применения согласованных соглашений об отступах, интервалах и регистре.",
    "SQL-Beautify-Purpose-008": "Подобно общим средствам улучшения кода, он помогает разработчикам легче понимать сложные запросы и поддерживать согласованность в своих SQL-скриптах или проектах.",
    "SQL-Commands-005": "SQL включает в себя несколько типов команд: DDL (язык определения данных — CREATE, ALTER, DROP), DML (язык манипулирования данными — SELECT, INSERT, UPDATE, DELETE) и DCL (язык управления данными — GRANT, REVOKE).",
    "SQL-Components-004": "Каковы основные компоненты SQL?",
    "SQL-Components-Wikipedia": "Компоненты SQL в Википедии",
    "SQL-Def-002": "SQL (язык структурированных запросов) — это стандартный язык программирования для управления реляционными базами данных и выполнения запросов.",
    "SQL-Indexing-016": "Что такое индексы в SQL и почему они важны?",
    "SQL-Indexing-Benefit-018": "Создание индекса по часто используемым столбцам для условий предложения WHERE значительно ускоряет запросы SELECT, но может замедлить операции INSERT, UPDATE и DELETE из-за необходимости поддерживать структуру индекса.",
    "SQL-Indexing-Explanation-017": "Индексы — это структуры данных (например, B-деревья), которые повышают скорость операций поиска данных в таблице, позволяя ядру базы данных быстро находить строки на основе значений определенных столбцов.",
    "SQL-Indexing-MDN": "Веб-документы MDN по индексам",
    "SQL-Injection-019": "Что такое SQL-инъекция и как ее предотвратить?",
    "SQL-Injection-Def-020": "SQL-инъекция — это уязвимость безопасности, позволяющая злоумышленнику вставить вредоносный код SQL в поля ввода для манипулирования данными из базы данных или их извлечения.",
    "SQL-Injection-Prevention-021": "Методы предотвращения включают использование параметризованных запросов, подготовленных операторов или библиотек ORM, которые автоматически исключают ввод пользователя, а также ограничение разрешений базы данных и применение принципов наименьших привилегий.",
    "SQL-Joins-011": "Что такое JOIN в SQL?",
    "SQL-Joins-Explanation-012": "JOIN используются для объединения строк из двух или более таблиц на основе связанного между ними столбца. Например, INNER JOIN, LEFT JOIN, RIGHT JOIN и FULL JOIN.",
    "SQL-Joins-Tutorial": "Учебное пособие по SQL-соединениям",
    "SQL-Perf-Tuning-Methods-024": "Другие методы включают секционирование больших таблиц, использование соответствующих типов данных и кэширование результатов, когда это возможно.",
    "SQL-Perf-Tuning-Overview-023": "Оптимизация производительности SQL-запросов включает в себя анализ планов выполнения, соответствующую индексацию, минимизацию ненужных соединений и подзапросов и написание эффективных предложений WHERE.",
    "SQL-Performance-Tuning-022": "Как оптимизировать производительность SQL-запросов?",
    "SQL-Purpose-003": "Он используется для создания, чтения, обновления, удаления и запроса данных в таблицах, а также для управления структурой базы данных и разрешениями.",
    "SQL-Select-009": "Как написать базовый оператор SELECT?",
    "SQL-Transactions-013": "Что такое транзакции в SQL?",
    "SQL-Transactions-Def-014": "Транзакция — это логическая единица работы, содержащая один или несколько операторов SQL. Он гарантирует, что все операции внутри него выполняются успешно (атомарность), изолированы от других транзакций и долговечны даже в случае сбоя системы.",
    "SQL-Transactions-W3Schools": "SQL-транзакции в W3Schools"
}
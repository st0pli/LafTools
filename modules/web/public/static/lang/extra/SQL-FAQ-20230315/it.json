{
    "MySQL-Performance-Tuning": "Suggerimenti per l'ottimizzazione delle prestazioni di MySQL",
    "OWASP-SQL-Injection": "Guida all'iniezione SQL OWASP",
    "SQL-Basics-001": "Cos'è l'SQL?",
    "SQL-Beautifier-Example": "Formattatore SQL in linea",
    "SQL-Beautify-006": "Cos'è l'abbellimento SQL?",
    "SQL-Beautify-Def-007": "L'abbellimento SQL è il processo di formattazione del codice SQL per migliorare la leggibilità applicando convenzioni di rientro, spaziatura e maiuscole e minuscole coerenti.",
    "SQL-Beautify-Purpose-008": "Proprio come gli abbellitori di codice generici, aiuta gli sviluppatori a comprendere più facilmente query complesse e a mantenere la coerenza tra i loro script o progetti SQL.",
    "SQL-Commands-005": "SQL include diversi tipi di comandi: DDL (Data Definition Language - CREATE, ALTER, DROP), DML (Data Manipulation Language - SELECT, INSERT, UPDATE, DELETE) e DCL (Data Control Language - GRANT, REVOKE).",
    "SQL-Components-004": "Quali sono i componenti principali di SQL?",
    "SQL-Components-Wikipedia": "Componenti SQL su Wikipedia",
    "SQL-Def-002": "SQL (Structured Query Language) è un linguaggio di programmazione standard per la gestione e l'interrogazione di database relazionali.",
    "SQL-Indexing-016": "Cosa sono gli indici in SQL e perché sono importanti?",
    "SQL-Indexing-Benefit-018": "La creazione di un indice sulle colonne utilizzate di frequente per le condizioni della clausola WHERE accelera notevolmente le query SELECT ma può rallentare le operazioni INSERT, UPDATE e DELETE a causa della necessità di mantenere la struttura dell'indice.",
    "SQL-Indexing-Explanation-017": "Gli indici sono strutture di dati (ad esempio, alberi B) che migliorano la velocità delle operazioni di recupero dei dati in una tabella consentendo al motore del database di individuare rapidamente le righe in base a valori di colonna specifici.",
    "SQL-Indexing-MDN": "Documenti Web MDN sugli indici",
    "SQL-Injection-019": "Cos'è l'SQL Injection e come può essere prevenuto?",
    "SQL-Injection-Def-020": "SQL Injection è una vulnerabilità della sicurezza in cui un utente malintenzionato può inserire codice SQL dannoso nei campi di input per manipolare o estrarre dati da un database.",
    "SQL-Injection-Prevention-021": "I metodi di prevenzione includono l'utilizzo di query parametrizzate, istruzioni preparate o librerie ORM che sfuggono automaticamente all'input dell'utente, nonché la limitazione delle autorizzazioni del database e l'applicazione dei principi dei privilegi minimi.",
    "SQL-Joins-011": "Cosa sono i JOIN in SQL?",
    "SQL-Joins-Explanation-012": "I JOIN vengono utilizzati per combinare righe di due o più tabelle in base a una colonna correlata tra di loro. Ad esempio, INNER JOIN, LEFT JOIN, RIGHT JOIN e FULL JOIN.",
    "SQL-Joins-Tutorial": "Esercitazione sui join SQL",
    "SQL-Perf-Tuning-Methods-024": "Altre tecniche includono il partizionamento di tabelle di grandi dimensioni, l'utilizzo di tipi di dati appropriati e la memorizzazione nella cache dei risultati quando fattibile.",
    "SQL-Perf-Tuning-Overview-023": "L'ottimizzazione delle prestazioni delle query SQL implica l'analisi dei piani di esecuzione, l'indicizzazione appropriata, la riduzione al minimo di join e sottoquery non necessari e la scrittura di clausole WHERE efficienti.",
    "SQL-Performance-Tuning-022": "Come posso ottimizzare le prestazioni delle query SQL?",
    "SQL-Purpose-003": "Viene utilizzato per creare, leggere, aggiornare, eliminare ed eseguire query sui dati nelle tabelle, nonché per gestire la struttura e le autorizzazioni del database.",
    "SQL-Select-009": "Come scrivo un'istruzione SELECT di base?",
    "SQL-Select-Example-0210": "Una semplice istruzione SELECT recupera i dati da una tabella. Ad esempio: {0}', 'SELECT colonna1, colonna2 FROM mia_tabella;",
    "SQL-Transactions-013": "Cosa sono le transazioni in SQL?",
    "SQL-Transactions-Def-014": "Una transazione è un'unità di lavoro logica che contiene una o più istruzioni SQL. Garantisce che tutte le operazioni al suo interno siano completate con successo (atomicità), isolate da altre transazioni e durevoli anche in caso di guasto del sistema.",
    "SQL-Transactions-Example-015": "Per avviare una transazione, utilizzare il comando START TRANSACTION; confermare le modifiche con COMMIT o ripristinare lo stato precedente con ROLLBACK.",
    "SQL-Transactions-W3Schools": "Transazioni SQL su W3Schools"
}
{
    "MySQL-Performance-Tuning": "MySQL 성능 조정 팁",
    "OWASP-SQL-Injection": "OWASP SQL 인젝션 가이드",
    "SQL-Basics-001": "SQL이란 무엇입니까?",
    "SQL-Beautifier-Example": "온라인 SQL 포맷터",
    "SQL-Beautify-006": "SQL 미화란 무엇입니까?",
    "SQL-Beautify-Def-007": "SQL 미화는 일관된 들여쓰기, 간격 및 대소문자 규칙을 적용하여 가독성을 높이기 위해 SQL 코드 형식을 지정하는 프로세스입니다.",
    "SQL-Beautify-Purpose-008": "일반 코드 미화 도구와 마찬가지로 개발자가 복잡한 쿼리를 더 쉽게 이해하고 SQL 스크립트 또는 프로젝트 전체에서 일관성을 유지하는 데 도움이 됩니다.",
    "SQL-Commands-005": "SQL에는 DDL(데이터 정의 언어 - CREATE, ALTER, DROP), DML(데이터 조작 언어 - SELECT, INSERT, UPDATE, DELETE) 및 DCL(데이터 제어 언어 - GRANT, REVOKE)과 같은 여러 유형의 명령이 포함됩니다.",
    "SQL-Components-004": "SQL의 주요 구성 요소는 무엇입니까?",
    "SQL-Components-Wikipedia": "Wikipedia의 SQL 구성 요소",
    "SQL-Def-002": "SQL(Structured Query Language)은 관계형 데이터베이스를 관리하고 쿼리하기 위한 표준 프로그래밍 언어입니다.",
    "SQL-Indexing-016": "SQL의 인덱스란 무엇이며 왜 중요한가요?",
    "SQL-Indexing-Benefit-018": "WHERE 절 조건에 대해 자주 사용되는 열에 인덱스를 생성하면 SELECT 쿼리 속도가 크게 향상되지만 인덱스 구조를 유지해야 하기 때문에 INSERT, UPDATE 및 DELETE 작업 속도가 느려질 수 있습니다.",
    "SQL-Indexing-Explanation-017": "인덱스는 데이터베이스 엔진이 특정 열 값을 기반으로 행을 빠르게 찾을 수 있도록 하여 테이블의 데이터 검색 작업 속도를 향상시키는 데이터 구조(예: B-트리)입니다.",
    "SQL-Indexing-MDN": "인덱스에 대한 MDN 웹 문서",
    "SQL-Injection-019": "SQL 주입이란 무엇이며 어떻게 방지할 수 있나요?",
    "SQL-Injection-Def-020": "SQL 주입은 공격자가 입력 필드에 악성 SQL 코드를 삽입하여 데이터베이스에서 데이터를 조작하거나 추출할 수 있는 보안 취약점입니다.",
    "SQL-Injection-Prevention-021": "예방 방법에는 매개변수화된 쿼리, 준비된 문 또는 사용자 입력을 자동으로 이스케이프하는 ORM 라이브러리 사용, 데이터베이스 권한 제한 및 최소 권한 원칙 적용이 포함됩니다.",
    "SQL-Joins-011": "SQL의 JOIN이란 무엇입니까?",
    "SQL-Joins-Explanation-012": "JOIN은 두 개 이상의 테이블 사이의 관련 열을 기반으로 행을 결합하는 데 사용됩니다. 예: INNER JOIN, LEFT JOIN, RIGHT JOIN 및 FULL JOIN.",
    "SQL-Joins-Tutorial": "SQL 조인 튜토리얼",
    "SQL-Perf-Tuning-Methods-024": "다른 기술로는 대규모 테이블 분할, 적절한 데이터 유형 사용, 가능한 경우 결과 캐싱 등이 있습니다.",
    "SQL-Perf-Tuning-Overview-023": "SQL 쿼리 성능 최적화에는 실행 계획 분석, 적절한 인덱싱, 불필요한 조인 및 하위 쿼리 최소화, 효율적인 WHERE 절 작성이 포함됩니다.",
    "SQL-Performance-Tuning-022": "SQL 쿼리 성능을 최적화하려면 어떻게 해야 합니까?",
    "SQL-Purpose-003": "테이블의 데이터를 생성, 읽기, 업데이트, 삭제 및 쿼리하고 데이터베이스 구조 및 권한을 관리하는 데 사용됩니다.",
    "SQL-Select-009": "기본 SELECT 문을 어떻게 작성합니까?",
    "SQL-Select-Example-0210": "간단한 SELECT 문은 테이블에서 데이터를 검색합니다. 예를 들면 다음과 같습니다. {0}', 'SELECT 컬럼1, 컬럼2 FROM my_table;",
    "SQL-Transactions-013": "SQL의 트랜잭션이란 무엇입니까?",
    "SQL-Transactions-Def-014": "트랜잭션은 하나 이상의 SQL 문을 포함하는 논리적 작업 단위입니다. 이는 내부의 모든 작업이 성공적으로 완료되고(원자성) 다른 트랜잭션과 격리되며 시스템 오류가 발생하는 경우에도 내구성을 보장합니다.",
    "SQL-Transactions-Example-015": "트랜잭션을 시작하려면 START TRANSACTION 명령을 사용하십시오. COMMIT를 사용하여 변경 사항을 커밋하거나 ROLLBACK을 사용하여 이전 상태로 롤백합니다.",
    "SQL-Transactions-W3Schools": "W3Schools의 SQL 트랜잭션"
}
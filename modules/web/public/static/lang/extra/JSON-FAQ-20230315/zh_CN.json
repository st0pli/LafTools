{
    "JSON-Advantages-011": "JSON 通常比 XML 更小且解析速度更快，因此非常适合带宽和速度至关重要的客户端-服务器通信。",
    "JSON-Basics-001": "什么是 JSON？",
    "JSON-Beautify-007": "什么是 JSON 美化？",
    "JSON-Beautify-Def-008": "JSON 美化是指将 JSON 数据格式化为更易于人类阅读的形式并具有适当的缩进和换行符的过程，使其更易于分析和调试。",
    "JSON-Beautify-Example-009": "之前： '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}'，之后： '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"数组\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON（JavaScript 对象表示法）是一种轻量级、基于文本的数据交换格式，易于人类阅读和编写，也易于机器解析和生成。",
    "JSON-JavaScript-Support-020": "JavaScript 通过全局对象“JSON.parse()”和“JSON.stringify()”原生支持 JSON。任何有效的 JSON 也是有效的 JavaScript 文字对象或数组，它允许两种格式之间的无缝转换。",
    "JSON-JavaScript-Usage-021": "在 Web 开发中，JSON 通常用于 AJAX 请求、服务器端渲染和数据存储（例如本地存储或 IndexedDB）。",
    "JSON-Linting-022": "什么是 JSON linting？为什么它很重要？",
    "JSON-Linting-Benefit-024": "Linters 可以防止由于无效 JSON 导致的运行时错误，确保数据交换顺利并节省调试潜在问题的时间。",
    "JSON-Linting-Explanation-023": "JSON linting 是检查 JSON 文档是否符合 JSON 规范的过程。它有助于在尝试解析数据之前识别语法错误。",
    "JSON-Path-013": "什么是 JSON 路径？",
    "JSON-Path-Example-015": "$.store.book[0].title 选择 JSON 对象中第一本书的标题，该对象的商店包含 books 数组。",
    "JSON-Path-Explanation-014": "JSON Path 是一种类似于 XML 的 XPath 的查询语言，允许您使用类似路径的表示法从 JSON 文档中提取数据。",
    "JSON-Path-Guide": "JSONPath - JSON 的 XPath",
    "JSON-Purpose-003": "它主要用于在服务器和 Web 应用程序之间传输数据，作为 XML 的替代方案，并通过“JSON.parse()”和“JSON.stringify()”方法在 JavaScript 中提供本机支持。",
    "JSON-Scope-in-JavaScript-019": "JSON 如何适应 JavaScript？",
    "JSON-Security-025": "使用 JSON 时有哪些安全问题？",
    "JSON-Security-Impact-026": "潜在的安全风险包括 JSON 注入攻击，其中发送的恶意数据可能在解析/执行时导致意外行为。",
    "JSON-Security-Prevention-027": "为了减轻这些风险，请始终清理用户输入并使用安全解析 JSON 而不执行其内容的库（例如 JavaScript 的内置 JSON.parse()）。另外，避免使用 eval() 来解析 JSON。",
    "JSON-Serialization-016": "什么是 JSON 序列化和反序列化？",
    "JSON-Serialization-Def-017": "JSON 序列化是将 JavaScript 对象转换为 JSON 字符串的过程，而反序列化则相反，将 JSON 字符串转换回 JavaScript 对象。",
    "JSON-Serialization-W3Schools": "W3Schools 上的 JSON 序列化",
    "JSON-Syntax-004": "JSON 的基本语法是什么？",
    "JSON-Syntax-Reference": "JSON 上的 MDN Web 文档",
    "JSON-Value-Types-006": "值可以是字符串、数字、布尔值、数组（用方括号括起来）",
    "JSON-vs-XML-010": "JSON 与 XML 相比如何？",
    "JSON-vs-XML-Article": "比较 JSON 和 XML",
    "MDN-JSON-in-JavaScript": "MDN 网络文档 - 使用 JSON",
    "OWASP-JSON-Injection": "OWASP - JSON 注入",
    "XML-Advantages-012": "XML 提供了更多的结构灵活性并支持命名空间，这有利于复杂的文档结构和跨系统的互操作性。"
}
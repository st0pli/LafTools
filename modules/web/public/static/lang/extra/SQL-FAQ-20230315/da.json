{
    "MySQL-Performance-Tuning": "MySQL Performance Tuning Tips",
    "OWASP-SQL-Injection": "OWASP SQL Injection Guide",
    "SQL-Basics-001": "Hvad er SQL?",
    "SQL-Beautifier-Example": "Online SQL Formater",
    "SQL-Beautify-006": "Hvad er SQL Beautification?",
    "SQL-Beautify-Def-007": "SQL-forskønnelse er processen med at formatere SQL-kode for at forbedre læsbarheden ved at anvende konsekvente indrykning, mellemrum og kasuskonventioner.",
    "SQL-Beautify-Purpose-008": "Ligesom generiske kodeforskønnere hjælper det udviklere med nemmere at forstå komplekse forespørgsler og opretholde konsistens på tværs af deres SQL-scripts eller projekter.",
    "SQL-Commands-005": "SQL omfatter flere typer kommandoer: DDL (Data Definition Language - CREATE, ALTER, DROP), DML (Data Manipulation Language - SELECT, INSERT, UPDATE, DELETE) og DCL (Data Control Language - GRANT, REVOKE).",
    "SQL-Components-004": "Hvad er hovedkomponenterne i SQL?",
    "SQL-Components-Wikipedia": "SQL-komponenter på Wikipedia",
    "SQL-Def-002": "SQL (Structured Query Language) er et standardprogrammeringssprog til styring og forespørgsel i relationelle databaser.",
    "SQL-Indexing-016": "Hvad er indekser i SQL, og hvorfor er de vigtige?",
    "SQL-Indexing-Benefit-018": "Oprettelse af et indeks på hyppigt anvendte kolonner til WHERE-sætningsbetingelser fremskynder SELECT-forespørgsler markant, men kan sænke INSERT-, UPDATE- og DELETE-operationerne på grund af behovet for at vedligeholde indeksstrukturen.",
    "SQL-Indexing-Explanation-017": "Indekser er datastrukturer (f.eks. B-træer), der forbedrer hastigheden af ​​datahentningsoperationer i en tabel ved at tillade databasemotoren hurtigt at lokalisere rækker baseret på specifikke kolonneværdier.",
    "SQL-Indexing-MDN": "MDN Web Docs om indekser",
    "SQL-Injection-019": "Hvad er SQL Injection, og hvordan kan det forhindres?",
    "SQL-Injection-Def-020": "SQL Injection er en sikkerhedssårbarhed, hvor en hacker kan indsætte ondsindet SQL-kode i inputfelter for at manipulere eller udtrække data fra en database.",
    "SQL-Injection-Prevention-021": "Forebyggelsesmetoder omfatter brug af parametriserede forespørgsler, forberedte sætninger eller ORM-biblioteker, der automatisk undslipper brugerinput, samt begrænsning af databasetilladelser og anvendelse af mindste privilegerede principper.",
    "SQL-Joins-011": "Hvad er JOINs i SQL?",
    "SQL-Joins-Explanation-012": "JOINs bruges til at kombinere rækker fra to eller flere tabeller baseret på en relateret kolonne mellem dem. F.eks. INNER JOIN, LEFT JOIN, HØJRE JOIN og FULD JOIN.",
    "SQL-Joins-Tutorial": "Selvstudium til SQL joins",
    "SQL-Perf-Tuning-Methods-024": "Andre teknikker omfatter partitionering af store tabeller, brug af passende datatyper og caching af resultater, når det er muligt.",
    "SQL-Perf-Tuning-Overview-023": "Optimering af SQL-forespørgselsydeevne involverer at analysere eksekveringsplaner, indeksere korrekt, minimere unødvendige joinforbindelser og underforespørgsler og skrive effektive WHERE-klausuler.",
    "SQL-Performance-Tuning-022": "Hvordan optimerer jeg SQL-forespørgselsydeevne?",
    "SQL-Purpose-003": "Det bruges til at oprette, læse, opdatere, slette og forespørge data i tabeller samt administrere databasestruktur og tilladelser.",
    "SQL-Select-009": "Hvordan skriver jeg en grundlæggende SELECT-sætning?",
    "SQL-Transactions-013": "Hvad er transaktioner i SQL?",
    "SQL-Transactions-Def-014": "En transaktion er en logisk arbejdsenhed, der indeholder en eller flere SQL-sætninger. Det sikrer, at alle operationer i den er gennemført med succes (atomicitet), isoleret fra andre transaktioner og holdbare, selv i tilfælde af systemfejl.",
    "SQL-Transactions-W3Schools": "SQL-transaktioner på W3Schools"
}
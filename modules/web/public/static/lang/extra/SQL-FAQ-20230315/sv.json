{
    "MySQL-Performance-Tuning": "MySQL Performance Tuning Tips",
    "OWASP-SQL-Injection": "OWASP SQL Injection Guide",
    "SQL-Basics-001": "Vad är SQL?",
    "SQL-Beautifier-Example": "Online SQL-formaterare",
    "SQL-Beautify-006": "Vad är SQL-försköning?",
    "SQL-Beautify-Def-007": "SQL-försköning är processen att formatera SQL-kod för att förbättra läsbarheten genom att tillämpa konsekventa indrag, mellanrum och skiftlägeskonventioner.",
    "SQL-Beautify-Purpose-008": "Precis som generiska kodförskönare hjälper det utvecklare att förstå komplexa frågor lättare och bibehålla konsistens i sina SQL-skript eller projekt.",
    "SQL-Commands-005": "SQL innehåller flera typer av kommandon: DDL (Data Definition Language - CREATE, ALTER, DROP), DML (Data Manipulation Language - SELECT, INSERT, UPDATE, DELETE) och DCL (Data Control Language - GRANT, REVOKE).",
    "SQL-Components-004": "Vilka är huvudkomponenterna i SQL?",
    "SQL-Components-Wikipedia": "SQL-komponenter på Wikipedia",
    "SQL-Def-002": "SQL (Structured Query Language) är ett standardprogrammeringsspråk för hantering och sökning av relationsdatabaser.",
    "SQL-Indexing-016": "Vad är index i SQL och varför är de viktiga?",
    "SQL-Indexing-Benefit-018": "Att skapa ett index på ofta använda kolumner för WHERE-satsvillkor snabbar upp SELECT-frågor avsevärt men kan sakta ner INSERT-, UPDATE- och DELETE-operationerna på grund av behovet av att underhålla indexstrukturen.",
    "SQL-Indexing-Explanation-017": "Index är datastrukturer (t.ex. B-träd) som förbättrar hastigheten för datahämtning i en tabell genom att tillåta databasmotorn att snabbt lokalisera rader baserat på specifika kolumnvärden.",
    "SQL-Indexing-MDN": "MDN Web Docs om index",
    "SQL-Injection-019": "Vad är SQL Injection och hur kan det förhindras?",
    "SQL-Injection-Def-020": "SQL Injection är en säkerhetsrisk där en angripare kan infoga skadlig SQL-kod i inmatningsfält för att manipulera eller extrahera data från en databas.",
    "SQL-Injection-Prevention-021": "Förebyggande metoder inkluderar användning av parametriserade frågor, förberedda satser eller ORM-bibliotek som automatiskt undkommer användarinmatning, samt begränsning av databasbehörigheter och tillämpning av minsta privilegieprinciper.",
    "SQL-Joins-011": "Vad är JOINs i SQL?",
    "SQL-Joins-Explanation-012": "JOINs används för att kombinera rader från två eller flera tabeller baserat på en relaterad kolumn mellan dem. T.ex. INNER JOIN, LEFT JOIN, RIGHT JOIN och FULL JOIN.",
    "SQL-Joins-Tutorial": "Handledning för SQL-anslutningar",
    "SQL-Perf-Tuning-Methods-024": "Andra tekniker inkluderar partitionering av stora tabeller, användning av lämpliga datatyper och cachning av resultat när det är möjligt.",
    "SQL-Perf-Tuning-Overview-023": "Att optimera SQL-frågeprestanda innebär att analysera exekveringsplaner, indexera på lämpligt sätt, minimera onödiga kopplingar och underfrågor och skriva effektiva WHERE-satser.",
    "SQL-Performance-Tuning-022": "Hur optimerar jag SQL-frågeprestanda?",
    "SQL-Purpose-003": "Den används för att skapa, läsa, uppdatera, ta bort och fråga data i tabeller samt hantera databasstruktur och behörigheter.",
    "SQL-Select-009": "Hur skriver jag en grundläggande SELECT-sats?",
    "SQL-Transactions-013": "Vad är transaktioner i SQL?",
    "SQL-Transactions-Def-014": "En transaktion är en logisk arbetsenhet som innehåller en eller flera SQL-satser. Det säkerställer att alla operationer inom den slutförs framgångsrikt (atomicitet), isolerade från andra transaktioner och varaktiga även i händelse av systemfel.",
    "SQL-Transactions-W3Schools": "SQL-transaktioner på W3Schools"
}
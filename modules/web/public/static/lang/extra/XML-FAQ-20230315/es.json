{
    "Diff-XML-JSON-Article": "Diferencia entre XML y JSON",
    "MDN-XML-Syntax": "Documentos web de MDN: sintaxis XML",
    "W3Schools-XML-Validation": "W3Schools - Validación XML",
    "XML-Advantage-Readable-018": "Su naturaleza legible por humanos permite una fácil inspección y depuración, y la capacidad de definir estructuras personalizadas lo hace flexible para múltiples casos de uso.",
    "XML-Advantage-Standardized-017": "XML es un estándar ampliamente adoptado, lo que lo hace compatible con diversas plataformas y sistemas, promoviendo la interoperabilidad y el intercambio de datos.",
    "XML-Advantages-016": "¿Cuáles son las ventajas de utilizar XML?",
    "XML-Attributes-006": "Los elementos pueden tener atributos que proporcionan información adicional sobre el elemento dentro de la etiqueta de apertura, como {0}",
    "XML-Basics-001": "¿Qué es XML?",
    "XML-Def-002": "XML (lenguaje de marcado extensible) es un lenguaje de marcado que define un conjunto de reglas para codificar documentos en un formato que sea legible tanto por humanos como por máquinas.",
    "XML-Disadvantage-Size-020": "XML puede ser relativamente detallado, lo que genera archivos de mayor tamaño en comparación con alternativas como JSON, lo que afecta la velocidad de transmisión y los requisitos de almacenamiento.",
    "XML-Disadvantages-019": "¿Cuáles son algunas de las desventajas de utilizar XML?",
    "XML-JSON-Diff-Structure-014": "XML utiliza etiquetas jerárquicas y detalladas para la estructura, mientras que JSON se basa en matrices y pares clave-valor. Ejemplo: XML {0} frente a JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML tiene una sintaxis más estricta con etiquetas y atributos de cierre, mientras que la sintaxis de JSON es más ligera y más cercana a la notación de objetos de JavaScript. Generalmente se considera que JSON es más fácil de analizar y transmitir a través de la web.",
    "XML-JSON-Difference-013": "¿Cuál es la diferencia entre XML y JSON?",
    "XML-Nesting-007": "¿Cómo funciona el anidamiento en XML?",
    "XML-Nesting-Example-009": "Por ejemplo, `<book><title>Título de mi libro</title><author>John Doe</author></book>` representa un libro con su título y autor como elementos anidados.",
    "XML-Nesting-Explanation-008": "En XML, los elementos se pueden anidar unos dentro de otros para representar relaciones jerárquicas. Los elementos secundarios se colocan entre las etiquetas de apertura y cierre de su elemento principal.",
    "XML-Processing-Speed-021": "El análisis y la generación de XML pueden ser más lentos debido a su estricta sintaxis y a la necesidad de validación, especialmente cuando se trata de documentos complejos.",
    "XML-Purpose-003": "Está diseñado para transportar datos, en lugar de mostrarlos como HTML, lo que permite utilizarlo como un formato común para compartir información estructurada entre diferentes plataformas y aplicaciones.",
    "XML-Syntax-004": "¿Cuál es la sintaxis básica de XML?",
    "XML-Syntax-Example-005": "Un documento XML simple consta de elementos en una estructura similar a un árbol. Cada elemento comienza con una etiqueta entre corchetes angulares (<element>) y termina con una etiqueta de cierre (</element>).",
    "XML-Validation-010": "¿Qué es la validación XML y cómo funciona?",
    "XML-Validation-Def-011": "La validación XML garantiza que un documento XML cumpla con un conjunto específico de reglas definidas en una definición de tipo de documento (DTD) o un esquema XML (XSD).",
    "XML-Validation-Process-012": "Los validadores verifican si todos los elementos y atributos requeridos están presentes, validan los tipos de datos y aplican las restricciones especificadas en el esquema antes de procesar el documento."
}
name: Build on Tags

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      LAFTOOLS_ROOT: /home/runner/work/LafTools/LafTools

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.21

      - name: Get dependencies
        run: go mod download

      - name: Run build script
        run: |
          npm i -g typescript
          cd ./modules/web2
          cd ../../
          cd ./pipeline
          chmod +x ./build-all.sh
          ./build-all.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Upload Release Asset for linux-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools/dist/pkg/linux-x64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-linux-x64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for linux-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools/dist/pkg/linux-arm64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-linux-arm64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for darwin-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools/dist/pkg/darwin-x64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-darwin-x64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for darwin-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools/dist/pkg/darwin-arm64.tar.gz
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-darwin-arm64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset for windows-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools/dist/pkg/windows-x64.zip
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-windows-x64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset for window-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/LafTools/LafTools/dist/pkg/windows-arm64.zip
          asset_name: LafTools-${{steps.get_version.outputs.VERSION}}-windows-arm64.zip
          asset_content_type: application/zip

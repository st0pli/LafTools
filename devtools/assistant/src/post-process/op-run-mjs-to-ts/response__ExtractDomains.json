{
  "result": "Below is the TypeScript (TS) version of the provided code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `ExtractDomains` class, following the pattern of the provided example.\n2. The description of the code's function has been added to the top comment.\n3. Natural text has been wrapped with the `Dot` function as shown in the example.\n4. Import statements have been left unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: This code defines a class ExtractDomains that is used to extract fully qualified domain names from a given string. It provides options to display the total count, sort the results, and ensure uniqueness.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport { search, DOMAIN_REGEX } from \"../lib/Extract.mjs\";\nimport { caseInsensitiveSort } from \"../lib/Sort.mjs\";\n\n/**\n * Extract domains operation\n */\nclass ExtractDomains extends Operation {\n  /**\n   * ExtractDomains constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"extractDomains.name\", \"Extract domains\");\n    this.module = \"Regex\";\n    this.description = Dot(\n      \"extractDomains.desc\",\n      \"Extracts fully qualified domain names.<br>Note that this will not include paths. Use <strong>Extract URLs</strong> to find entire URLs.\"\n    );\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [\n      {\n        name: Dot(\"extractDomains.args.displayTotal\", \"Display total\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"extractDomains.args.sort\", \"Sort\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"extractDomains.args.unique\", \"Unique\"),\n        type: \"boolean\",\n        value: false,\n      },\n    ];\n  }\n\n  /**\n   * @param {string} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  run(input, args) {\n    const [displayTotal, sort, unique] = args;\n\n    const results = search(\n      input,\n      DOMAIN_REGEX,\n      null,\n      sort ? caseInsensitiveSort : null,\n      unique,\n    );\n\n    if (displayTotal) {\n      return Dot(\"extractDomains.result.total\", `Total found: {0}\\n\\n{1}`, [results.length, results.join(\"\\n\")]);\n    } else {\n      return results.join(\"\\n\");\n    }\n  }\n\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Regex\",\n        \"description\": Dot(\n          \"extractDomains.config.desc\",\n          \"Extracts fully qualified domain names from a given string.\"\n        ),\n        \"inputType\": \"string\",\n        \"outputType\": \"string\",\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": this.args,\n      },\n      infoURL: '',\n      nousenouseID: 'extractDomains',\n      optName: Dot(\"extractDomains.optName\", \"Extract {0}\", \"domains\"),\n      optDescription: Dot(\n        \"extractDomains.optDescription\",\n        \"This operation extracts domain names from the input string.\"\n      ),\n      exampleInput: \"\", // Fill it if possible\n      exampleOutput: \"\", // Fill it if possible\n    }\n  }\n}\n\nexport default ExtractDomains;\n```\n\nPlease note that the `exampleInput` and `exampleOutput` fields have been left empty as the example values are not provided. The `infoURL` has also been left empty since no relevant URL is provided in the original code.\n\nAlso, the `Dot` function is used here as a placeholder for internationalization or text management. The actual implementation of the `Dot` function is not provided and would need to be defined elsewhere in your codebase.",
  "response": {
    "choices": [
      {
        "finish_reason": "stop",
        "index": 0,
        "message": {
          "content": "Below is the TypeScript (TS) version of the provided code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `ExtractDomains` class, following the pattern of the provided example.\n2. The description of the code's function has been added to the top comment.\n3. Natural text has been wrapped with the `Dot` function as shown in the example.\n4. Import statements have been left unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: This code defines a class ExtractDomains that is used to extract fully qualified domain names from a given string. It provides options to display the total count, sort the results, and ensure uniqueness.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport { search, DOMAIN_REGEX } from \"../lib/Extract.mjs\";\nimport { caseInsensitiveSort } from \"../lib/Sort.mjs\";\n\n/**\n * Extract domains operation\n */\nclass ExtractDomains extends Operation {\n  /**\n   * ExtractDomains constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"extractDomains.name\", \"Extract domains\");\n    this.module = \"Regex\";\n    this.description = Dot(\n      \"extractDomains.desc\",\n      \"Extracts fully qualified domain names.<br>Note that this will not include paths. Use <strong>Extract URLs</strong> to find entire URLs.\"\n    );\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [\n      {\n        name: Dot(\"extractDomains.args.displayTotal\", \"Display total\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"extractDomains.args.sort\", \"Sort\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"extractDomains.args.unique\", \"Unique\"),\n        type: \"boolean\",\n        value: false,\n      },\n    ];\n  }\n\n  /**\n   * @param {string} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  run(input, args) {\n    const [displayTotal, sort, unique] = args;\n\n    const results = search(\n      input,\n      DOMAIN_REGEX,\n      null,\n      sort ? caseInsensitiveSort : null,\n      unique,\n    );\n\n    if (displayTotal) {\n      return Dot(\"extractDomains.result.total\", `Total found: {0}\\n\\n{1}`, [results.length, results.join(\"\\n\")]);\n    } else {\n      return results.join(\"\\n\");\n    }\n  }\n\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Regex\",\n        \"description\": Dot(\n          \"extractDomains.config.desc\",\n          \"Extracts fully qualified domain names from a given string.\"\n        ),\n        \"inputType\": \"string\",\n        \"outputType\": \"string\",\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": this.args,\n      },\n      infoURL: '',\n      nousenouseID: 'extractDomains',\n      optName: Dot(\"extractDomains.optName\", \"Extract {0}\", \"domains\"),\n      optDescription: Dot(\n        \"extractDomains.optDescription\",\n        \"This operation extracts domain names from the input string.\"\n      ),\n      exampleInput: \"\", // Fill it if possible\n      exampleOutput: \"\", // Fill it if possible\n    }\n  }\n}\n\nexport default ExtractDomains;\n```\n\nPlease note that the `exampleInput` and `exampleOutput` fields have been left empty as the example values are not provided. The `infoURL` has also been left empty since no relevant URL is provided in the original code.\n\nAlso, the `Dot` function is used here as a placeholder for internationalization or text management. The actual implementation of the `Dot` function is not provided and would need to be defined elsewhere in your codebase.",
          "role": "assistant"
        }
      }
    ],
    "created": 1713888108,
    "id": "8596355774379088956",
    "model": "glm-4",
    "request_id": "8596355774379088956",
    "usage": {
      "completion_tokens": 858,
      "prompt_tokens": 962,
      "total_tokens": 1820
    }
  }
}
{
    "Diff-XML-JSON-Article": "Rozdíl mezi XML a JSON",
    "MDN-XML-Syntax": "Webové dokumenty MDN – syntaxe XML",
    "W3Schools-XML-Validation": "W3Schools - XML ​​Validace",
    "XML-Advantage-Readable-018": "Jeho lidsky čitelný charakter umožňuje snadnou kontrolu a ladění a možnost definovat vlastní struktury jej činí flexibilním pro více případů použití.",
    "XML-Advantage-Standardized-017": "XML je široce přijímaný standard, díky kterému je kompatibilní s různými platformami a systémy, podporuje interoperabilitu a výměnu dat.",
    "XML-Advantages-016": "Jaké jsou výhody používání XML?",
    "XML-Attributes-006": "Prvky mohou mít atributy, které poskytují další informace o prvku v úvodní značce, například {0}",
    "XML-Basics-001": "Co je XML?",
    "XML-Def-002": "XML (eXtensible Markup Language) je značkovací jazyk, který definuje sadu pravidel pro kódování dokumentů ve formátu, který je čitelný jak pro člověka, tak pro stroj.",
    "XML-Disadvantage-Size-020": "XML může být relativně podrobný, což má za následek větší velikosti souborů ve srovnání s alternativami, jako je JSON, což ovlivňuje přenosovou rychlost a požadavky na úložiště.",
    "XML-Disadvantages-019": "Jaké jsou některé nevýhody používání XML?",
    "XML-JSON-Diff-Structure-014": "XML používá pro strukturu podrobné, hierarchické značky, zatímco JSON se spoléhá na páry klíč-hodnota a pole. Příklad: XML {0} vs. JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML má přísnější syntaxi s uzavíracími značkami a atributy, zatímco syntaxe JSON je lehčí a blíže k zápisu objektů JavaScriptu. JSON se obecně považuje za jednodušší na analýzu a přenos přes web.",
    "XML-JSON-Difference-013": "Jaký je rozdíl mezi XML a JSON?",
    "XML-Nesting-007": "Jak funguje vnoření v XML?",
    "XML-Nesting-Example-009": "Například `<book><title>Název mé knihy</title><author>John Doe</author></book>` představuje knihu s názvem a autorem jako vnořenými prvky.",
    "XML-Nesting-Explanation-008": "V XML mohou být prvky vnořeny do sebe, aby reprezentovaly hierarchické vztahy. Podřízené prvky jsou umístěny mezi otevírací a uzavírací značku jejich nadřazeného prvku.",
    "XML-Processing-Speed-021": "Analýza a generování XML může být pomalejší kvůli jeho striktní syntaxi a potřebě ověřování, zejména při práci se složitými dokumenty.",
    "XML-Purpose-003": "Je navržen tak, aby přenášel data spíše než zobrazoval data jako HTML, což umožňuje jeho použití jako běžného formátu pro sdílení strukturovaných informací napříč různými platformami a aplikacemi.",
    "XML-Syntax-004": "Jaká je základní syntaxe XML?",
    "XML-Syntax-Example-005": "Jednoduchý dokument XML se skládá z prvků ve stromové struktuře. Každý prvek začíná tagem v lomených závorkách (<element>) a končí uzavíracím tagem (</element>).",
    "XML-Validation-010": "Co je validace XML a jak funguje?",
    "XML-Validation-Def-011": "Ověření XML zajišťuje, že dokument XML dodržuje specifickou sadu pravidel definovaných v definici typu dokumentu (DTD) nebo schématu XML (XSD).",
    "XML-Validation-Process-012": "Validátoři před zpracováním dokumentu zkontrolují, zda jsou přítomny všechny požadované prvky a atributy, ověří datové typy a prosadí všechna omezení uvedená ve schématu."
}
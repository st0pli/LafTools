{
    "CP-Advantage-Career-014": "Обучение программированию открывает возможности карьерного роста в различных отраслях и позволяет разрабатывать инновационные решения, автоматизировать задачи и понимать сложные системы.",
    "CP-Advantages-013": "Каковы преимущества изучения компьютерного программирования?",
    "CP-Basics-001": "Что такое компьютерное программирование?",
    "CP-Def-002": "Компьютерное программирование включает в себя написание инструкций или кода на языке программирования, чтобы инструктировать компьютеры о том, как выполнять определенные задачи.",
    "CP-History-004": "Какова история компьютерного программирования?",
    "CP-History-Origin-005": "Первые программируемые машины появились во времена работы Ады Лавлейс над аналитической машиной Чарльза Бэббиджа в 19 веке. Однако современное программирование стало развиваться с изобретением первого электронного компьютера общего назначения ENIAC в 1940-х годах.",
    "CP-Lang-Choice-009": "Выбор языка зависит от таких факторов, как требования проекта, поддержка сообщества, простота обучения и требования к производительности.",
    "CP-Language-Evolution-006": "С тех пор языки программирования эволюционировали от машинного кода к ассемблеру, затем к языкам высокого уровня, таким как FORTRAN, COBOL, C, а теперь и к современным языкам, таким как Python, JavaScript и Rust.",
    "CP-Languages-007": "Какие популярные языки программирования?",
    "CP-Languages-List-008": "Популярные языки программирования включают Java, Python, JavaScript, C++, C#, Swift, Go, PHP, Ruby и Kotlin. Каждый из них имеет свои сильные стороны и варианты использования, например, Python для анализа данных, JavaScript для веб-разработки и C++ для системного программирования.",
    "CP-Process-010": "Каков процесс компьютерного программирования?",
    "CP-Process-Explanation-011": "Программирование обычно включает в себя планирование (определение проблемы и разработку решения), кодирование (написание исходного кода на выбранном языке), тестирование (отладку и проверку функциональности) и обслуживание (обновление и улучшение программы с течением времени).",
    "CP-Purpose-003": "Программисты создают алгоритмы, решают проблемы и создают программные приложения, которые могут автоматизировать процессы, манипулировать данными и взаимодействовать с пользователями или другими системами.",
    "CP-SDLC-012": "Это часто структурировано в рамках жизненного цикла разработки программного обеспечения (SDLC), который включает дополнительные этапы, такие как анализ требований, проектирование, развертывание и приемочное тестирование пользователя.",
    "CP-Skillset-015": "Это также улучшает логическое мышление, навыки решения проблем и адаптируемость к новым технологиям, что делает человека более универсальным в эпоху цифровых технологий.",
    "HistOfProg-Wikipedia": "История языков программирования — Википедия",
    "SDLC-Wikipedia": "Жизненный цикл разработки программного обеспечения — Википедия",
    "TIOBE-Index": "Индекс TIOBE - Компания по обеспечению качества программного обеспечения"
}
{
  "result": "Below is the TypeScript conversion of the provided JavaScript code, including the requested changes:\n\n1. I've added a new method `getLuhnDetail` to the `LuhnChecksum` class, based on the pattern from the provided example.\n2. I've described the purpose of the code in the top-level comment.\n3. Natural text strings have been wrapped with the `Dot` function.\n4. The import statements remain unchanged.\n5. No code has been omitted or altered, and the `run` method implementation is intact.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The LuhnChecksum class provides an implementation of the Luhn algorithm, which is used to validate identification numbers such as credit card numbers.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\n\n/**\n * Luhn Checksum operation\n */\nclass LuhnChecksum extends Operation {\n  /**\n   * LuhnChecksum constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"luhn.name\", \"Luhn Checksum\");\n    this.module = \"Default\";\n    this.description = Dot(\n      \"luhn.desc\",\n      \"The Luhn algorithm, also known as the modulus 10 or mod 10 algorithm, is a simple checksum formula used to validate a variety of identification numbers, such as credit card numbers, IMEI numbers and Canadian Social Insurance Numbers.\"\n    );\n    this.infoURL = \"https://wikipedia.org/wiki/Luhn_algorithm\";\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [];\n  }\n\n  /**\n   * Generates the Luhn Checksum from the input.\n   *\n   * @param {string} inputStr\n   * @returns {number}\n   */\n  checksum(inputStr: string) {\n    let even = false;\n    return (\n      inputStr\n        .split(\"\")\n        .reverse()\n        .reduce((acc: number, elem: string) => {\n          // Convert element to integer.\n          const temp = parseInt(elem, 10);\n\n          // If element is not an integer.\n          if (isNaN(temp))\n            throw new OperationError(Dot(\"luhn.err\", \"Character: {0} is not a digit.\", elem));\n\n          // If element is in an even position\n          if (even) {\n            // Double the element and add the quotient and remainder together.\n            const doubled = 2 * temp;\n            temp = Math.floor(doubled / 10) + (doubled % 10);\n          }\n\n          even = !even;\n          return acc + temp;\n        }, 0) % 10\n    );\n  }\n\n  /**\n   * @param {string} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  run(input: string, args: object[]) {\n    if (!input) return \"\";\n\n    const checkSum = this.checksum(input);\n    let checkDigit = this.checksum(input + \"0\");\n    checkDigit = checkDigit === 0 ? 0 : 10 - checkDigit;\n\n    return `${Dot(\"luhn.result.checksum\", \"Checksum:\")} ${checkSum}\n${Dot(\"luhn.result.checkdigit\", \"Checkdigit:\")} ${checkDigit}\n${Dot(\"luhn.result.validated\", \"Luhn Validated String:\")} ${input + checkDigit}`;\n  }\n\n  /**\n   * Get the details for the Luhn Checksum operation\n   */\n  public getLuhnDetail(): any {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Default\",\n        \"description\": Dot(\n          \"luhn.config.desc\",\n          \"The Luhn algorithm is used to validate identification numbers. It is applied to numbers such as credit card numbers, IMEI numbers, and Canadian Social Insurance Numbers.\"\n        ),\n        \"infoURL\": \"https://wikipedia.org/wiki/Luhn_algorithm\",\n        \"inputType\": \"string\",\n        \"outputType\": \"string\",\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": []\n      },\n      infoURL: 'https://en.wikipedia.org/wiki/Luhn_algorithm',\n      nousenouseID: 'luhn',\n      optName: Dot(\"luhn.optName\", \"Generate {0} Checksum\", \"Luhn\"),\n      optDescription: Dot(\n        \"luhn.optDesc\",\n        \"This operation generates a {0} checksum for the provided input.\",\n        \"Luhn\"\n      ),\n      exampleInput: \"1234567890\", // Example input for Luhn Checksum\n      exampleOutput: \"<Checksum result>\", // Placeholder for the actual checksum result\n    }\n  }\n",
  "response": {
    "choices": [
      {
        "finish_reason": "length",
        "index": 0,
        "message": {
          "content": "Below is the TypeScript conversion of the provided JavaScript code, including the requested changes:\n\n1. I've added a new method `getLuhnDetail` to the `LuhnChecksum` class, based on the pattern from the provided example.\n2. I've described the purpose of the code in the top-level comment.\n3. Natural text strings have been wrapped with the `Dot` function.\n4. The import statements remain unchanged.\n5. No code has been omitted or altered, and the `run` method implementation is intact.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The LuhnChecksum class provides an implementation of the Luhn algorithm, which is used to validate identification numbers such as credit card numbers.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\n\n/**\n * Luhn Checksum operation\n */\nclass LuhnChecksum extends Operation {\n  /**\n   * LuhnChecksum constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"luhn.name\", \"Luhn Checksum\");\n    this.module = \"Default\";\n    this.description = Dot(\n      \"luhn.desc\",\n      \"The Luhn algorithm, also known as the modulus 10 or mod 10 algorithm, is a simple checksum formula used to validate a variety of identification numbers, such as credit card numbers, IMEI numbers and Canadian Social Insurance Numbers.\"\n    );\n    this.infoURL = \"https://wikipedia.org/wiki/Luhn_algorithm\";\n    this.inputType = \"string\";\n    this.outputType = \"string\";\n    this.args = [];\n  }\n\n  /**\n   * Generates the Luhn Checksum from the input.\n   *\n   * @param {string} inputStr\n   * @returns {number}\n   */\n  checksum(inputStr: string) {\n    let even = false;\n    return (\n      inputStr\n        .split(\"\")\n        .reverse()\n        .reduce((acc: number, elem: string) => {\n          // Convert element to integer.\n          const temp = parseInt(elem, 10);\n\n          // If element is not an integer.\n          if (isNaN(temp))\n            throw new OperationError(Dot(\"luhn.err\", \"Character: {0} is not a digit.\", elem));\n\n          // If element is in an even position\n          if (even) {\n            // Double the element and add the quotient and remainder together.\n            const doubled = 2 * temp;\n            temp = Math.floor(doubled / 10) + (doubled % 10);\n          }\n\n          even = !even;\n          return acc + temp;\n        }, 0) % 10\n    );\n  }\n\n  /**\n   * @param {string} input\n   * @param {Object[]} args\n   * @returns {string}\n   */\n  run(input: string, args: object[]) {\n    if (!input) return \"\";\n\n    const checkSum = this.checksum(input);\n    let checkDigit = this.checksum(input + \"0\");\n    checkDigit = checkDigit === 0 ? 0 : 10 - checkDigit;\n\n    return `${Dot(\"luhn.result.checksum\", \"Checksum:\")} ${checkSum}\n${Dot(\"luhn.result.checkdigit\", \"Checkdigit:\")} ${checkDigit}\n${Dot(\"luhn.result.validated\", \"Luhn Validated String:\")} ${input + checkDigit}`;\n  }\n\n  /**\n   * Get the details for the Luhn Checksum operation\n   */\n  public getLuhnDetail(): any {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": \"Default\",\n        \"description\": Dot(\n          \"luhn.config.desc\",\n          \"The Luhn algorithm is used to validate identification numbers. It is applied to numbers such as credit card numbers, IMEI numbers, and Canadian Social Insurance Numbers.\"\n        ),\n        \"infoURL\": \"https://wikipedia.org/wiki/Luhn_algorithm\",\n        \"inputType\": \"string\",\n        \"outputType\": \"string\",\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": []\n      },\n      infoURL: 'https://en.wikipedia.org/wiki/Luhn_algorithm',\n      nousenouseID: 'luhn',\n      optName: Dot(\"luhn.optName\", \"Generate {0} Checksum\", \"Luhn\"),\n      optDescription: Dot(\n        \"luhn.optDesc\",\n        \"This operation generates a {0} checksum for the provided input.\",\n        \"Luhn\"\n      ),\n      exampleInput: \"1234567890\", // Example input for Luhn Checksum\n      exampleOutput: \"<Checksum result>\", // Placeholder for the actual checksum result\n    }\n  }\n",
          "role": "assistant"
        }
      }
    ],
    "created": 1713891211,
    "id": "8596361478095791853",
    "model": "glm-4",
    "request_id": "8596361478095791853",
    "usage": {
      "completion_tokens": 1024,
      "prompt_tokens": 1145,
      "total_tokens": 2169
    }
  }
}
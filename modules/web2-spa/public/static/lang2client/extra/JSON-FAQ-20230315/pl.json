{
    "JSON-Advantages-011": "JSON jest na ogół mniejszy i szybszy do analizowania niż XML, co czyni go idealnym do komunikacji klient-serwer, gdzie przepustowość i szybkość mają kluczowe znaczenie.",
    "JSON-Basics-001": "Co to jest JSON?",
    "JSON-Beautify-007": "Co to jest upiększanie JSON?",
    "JSON-Beautify-Def-008": "Upiększanie JSON odnosi się do procesu formatowania danych JSON do postaci bardziej czytelnej dla człowieka z odpowiednimi wcięciami i podziałami wierszy, co ułatwia analizę i debugowanie.",
    "JSON-Beautify-Example-009": "Przed: '{\\\"klucz\\\":\\\"wartość\\\",\\\"tablica\\\":[1,2,3]}', Po: '{\\n \\\"klucz\\\": \\\"wartość\\\", \\n \\\"tablica\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation) to lekki, tekstowy format wymiany danych, który jest łatwy do odczytu i zapisu dla ludzi oraz łatwy do analizowania i generowania przez maszyny.",
    "JSON-JavaScript-Support-020": "JSON jest natywnie obsługiwany przez JavaScript poprzez obiekty globalne `JSON.parse()` i `JSON.stringify()`. Każdy prawidłowy kod JSON jest także prawidłowym obiektem lub tablicą literału JavaScript, co umożliwia płynną konwersję między dwoma formatami.",
    "JSON-JavaScript-Usage-021": "W tworzeniu stron internetowych JSON jest powszechnie używany do żądań AJAX, renderowania po stronie serwera i przechowywania danych (np. Magazyn lokalny lub IndexedDB).",
    "JSON-Linting-022": "Co to jest linting JSON i dlaczego jest ważny?",
    "JSON-Linting-Benefit-024": "Linters może zapobiegać błędom środowiska wykonawczego wynikającym z nieprawidłowego JSON, zapewniając płynną wymianę danych i oszczędzając czas na debugowanie potencjalnych problemów.",
    "JSON-Linting-Explanation-023": "Linting JSON to proces sprawdzania, czy dokument JSON jest zgodny ze specyfikacją JSON. Pomaga zidentyfikować błędy składniowe przed próbą przeanalizowania danych.",
    "JSON-Path-013": "Co to jest ścieżka JSON?",
    "JSON-Path-Example-015": "$.store.book[0].title wybiera tytuł pierwszej książki w obiekcie JSON ze sklepem zawierającym tablicę książek.",
    "JSON-Path-Explanation-014": "JSON Path to język zapytań podobny do XPath dla XML, umożliwiający wyodrębnianie danych z dokumentów JSON przy użyciu notacji przypominającej ścieżkę.",
    "JSON-Path-Guide": "JSONPath — XPath dla JSON",
    "JSON-Purpose-003": "Służy głównie do przesyłania danych pomiędzy serwerem a aplikacją internetową jako alternatywa dla XML, z natywną obsługą JavaScript za pomocą metod `JSON.parse()` i `JSON.stringify()`.",
    "JSON-Scope-in-JavaScript-019": "Jak JSON pasuje do JavaScript?",
    "JSON-Security-025": "Jakie są pewne obawy związane z bezpieczeństwem podczas pracy z JSON?",
    "JSON-Security-Impact-026": "Potencjalne zagrożenia bezpieczeństwa obejmują ataki polegające na wstrzykiwaniu JSON, podczas których wysyłane są złośliwe dane, które mogą powodować niezamierzone zachowanie podczas analizy/wykonania.",
    "JSON-Security-Prevention-027": "Aby złagodzić to ryzyko, zawsze oczyszczaj dane wejściowe użytkownika i korzystaj z bibliotek, które bezpiecznie analizują JSON bez wykonywania jego zawartości (takich jak wbudowana w JavaScript JSON.parse()). Unikaj także używania eval() do analizowania JSON.",
    "JSON-Serialization-016": "Co to jest serializacja i deserializacja JSON?",
    "JSON-Serialization-Def-017": "Serializacja JSON to proces konwersji obiektu JavaScript na ciąg JSON, podczas gdy deserializacja jest odwrotna – zamiana ciągu JSON z powrotem w obiekt JavaScript.",
    "JSON-Serialization-W3Schools": "Serializacja JSON w W3Schools",
    "JSON-Syntax-004": "Jaka jest podstawowa składnia JSON?",
    "JSON-Syntax-Example-f005": "Obiekt JSON składa się z par klucz-wartość ujętych w nawiasy klamrowe {0}. Każdy klucz musi być ciągiem znaków ujętym w podwójny cudzysłów, po którym następuje dwukropek, a na końcu jego wartość.",
    "JSON-Syntax-Reference": "Dokumenty internetowe MDN w formacie JSON",
    "JSON-Value-Types-006": "Wartościami mogą być ciągi znaków, liczby, wartości logiczne i tablice (ujęte w nawiasy kwadratowe",
    "JSON-vs-XML-010": "Jak JSON wypada w porównaniu z XML?",
    "JSON-vs-XML-Article": "Porównanie JSON i XML",
    "MDN-JSON-in-JavaScript": "Dokumenty internetowe MDN — praca z JSON",
    "OWASP-JSON-Injection": "OWASP – wtrysk JSON",
    "XML-Advantages-012": "XML zapewnia większą elastyczność struktury i obsługuje przestrzenie nazw, co może być korzystne w przypadku złożonych struktur dokumentów i interoperacyjności między systemami."
}
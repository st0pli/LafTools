{
    "MySQL-Performance-Tuning": "Consejos para ajustar el rendimiento de MySQL",
    "OWASP-SQL-Injection": "Guía de inyección SQL OWASP",
    "SQL-Basics-001": "¿Qué es SQL?",
    "SQL-Beautifier-Example": "Formateador de SQL en línea",
    "SQL-Beautify-006": "¿Qué es el embellecimiento SQL?",
    "SQL-Beautify-Def-007": "El embellecimiento de SQL es el proceso de formatear el código SQL para mejorar la legibilidad mediante la aplicación de convenciones de sangría, espaciado y mayúsculas y minúsculas consistentes.",
    "SQL-Beautify-Purpose-008": "Al igual que los embellecedores de código genéricos, ayuda a los desarrolladores a comprender consultas complejas más fácilmente y a mantener la coherencia entre sus scripts o proyectos SQL.",
    "SQL-Commands-005": "SQL incluye varios tipos de comandos: DDL (lenguaje de definición de datos: CREATE, ALTER, DROP), DML (lenguaje de manipulación de datos: SELECT, INSERT, UPDATE, DELETE) y DCL (lenguaje de control de datos: GRANT, REVOKE).",
    "SQL-Components-004": "¿Cuáles son los principales componentes de SQL?",
    "SQL-Components-Wikipedia": "Componentes SQL en Wikipedia",
    "SQL-Def-002": "SQL (lenguaje de consulta estructurado) es un lenguaje de programación estándar para administrar y consultar bases de datos relacionales.",
    "SQL-Indexing-016": "¿Qué son los índices en SQL y por qué son importantes?",
    "SQL-Indexing-Benefit-018": "La creación de un índice en columnas utilizadas con frecuencia para las condiciones de la cláusula WHERE acelera significativamente las consultas SELECT, pero puede ralentizar las operaciones INSERT, UPDATE y DELETE debido a la necesidad de mantener la estructura del índice.",
    "SQL-Indexing-Explanation-017": "Los índices son estructuras de datos (por ejemplo, árboles B) que mejoran la velocidad de las operaciones de recuperación de datos en una tabla al permitir que el motor de la base de datos ubique rápidamente filas según valores de columnas específicos.",
    "SQL-Indexing-MDN": "MDN Web Docs sobre índices",
    "SQL-Injection-019": "¿Qué es la inyección SQL y cómo se puede prevenir?",
    "SQL-Injection-Def-020": "La inyección SQL es una vulnerabilidad de seguridad en la que un atacante puede insertar código SQL malicioso en campos de entrada para manipular o extraer datos de una base de datos.",
    "SQL-Injection-Prevention-021": "Los métodos de prevención incluyen el uso de consultas parametrizadas, declaraciones preparadas o bibliotecas ORM que escapan automáticamente de la entrada del usuario, así como limitar los permisos de la base de datos y aplicar principios de privilegios mínimos.",
    "SQL-Joins-011": "¿Qué son las JOIN en SQL?",
    "SQL-Joins-Explanation-012": "Los JOIN se utilizan para combinar filas de dos o más tablas en función de una columna relacionada entre ellas. Por ejemplo, UNIÓN INTERNA, UNIÓN IZQUIERDA, UNIÓN DERECHA y UNIÓN COMPLETA.",
    "SQL-Joins-Tutorial": "Tutorial de uniones SQL",
    "SQL-Perf-Tuning-Methods-024": "Otras técnicas incluyen particionar tablas grandes, usar tipos de datos apropiados y almacenar en caché los resultados cuando sea posible.",
    "SQL-Perf-Tuning-Overview-023": "Optimizar el rendimiento de las consultas SQL implica analizar los planes de ejecución, indexar adecuadamente, minimizar uniones y subconsultas innecesarias y escribir cláusulas WHERE eficientes.",
    "SQL-Performance-Tuning-022": "¿Cómo optimizo el rendimiento de las consultas SQL?",
    "SQL-Purpose-003": "Se utiliza para crear, leer, actualizar, eliminar y consultar datos en tablas, así como para administrar la estructura y los permisos de la base de datos.",
    "SQL-Select-009": "¿Cómo escribo una declaración SELECT básica?",
    "SQL-Select-Example-0210": "Una instrucción SELECT simple recupera datos de una tabla. Por ejemplo: {0}', 'SELECCIONE columna1, columna2 DE mi_tabla;",
    "SQL-Transactions-013": "¿Qué son las transacciones en SQL?",
    "SQL-Transactions-Def-014": "Una transacción es una unidad lógica de trabajo que contiene una o más declaraciones SQL. Garantiza que todas las operaciones dentro de él se completen con éxito (atomicidad), estén aisladas de otras transacciones y sean duraderas incluso en caso de falla del sistema.",
    "SQL-Transactions-Example-015": "Para iniciar una transacción, utilice el comando INICIAR TRANSACCIÓN; confirmar cambios con COMMIT o retroceder al estado anterior con ROLLBACK.",
    "SQL-Transactions-W3Schools": "Transacciones SQL en W3Schools"
}
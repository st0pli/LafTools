{
    "MD4-Advantages-011": "使用MD4有什麼優點？",
    "MD4-AlgorithmDetails-010": "MD4演算法詳細信息",
    "MD4-Applications-018": "哪些應用程式已經使用或仍在使用 MD4？",
    "MD4-Breakdown-016": "該演算法的設計缺陷導致了實際的攻擊，允許輕鬆的雜湊衝突甚至部分原像攻擊，使得 MD4 不適合當今的任何安全加密用例。",
    "MD4-CollisionSecurity-015": "MD4 有幾個加密弱點，包括容易受到碰撞攻擊。這意味著兩個不同的輸入可以產生相同的雜湊輸出，這對於需要抗衝突或強訊息完整性的應用程式來說是不安全的。",
    "MD4-Def-002": "MD4（訊息摘要演算法 4）是由 Ronald Rivest 於 1990 年設計的加密雜湊函數。它為任何給定的輸入訊息產生 128 位元雜湊值。",
    "MD4-DigitalSignature-Risks-021": "使用 MD4 進行數位簽章的風險",
    "MD4-Disadvantages-014": "MD4 有哪些缺點和安全性問題？",
    "MD4-FAQ-001": "MD4是什麼？",
    "MD4-HistoricalUse-019": "歷史上，MD4 用於數位簽章、文件完整性檢查和軟體更新。然而，由於其漏洞，這些應用程式在很大程度上已轉向更安全的替代方案，例如 SHA-256 和 SHA-3。",
    "MD4-History-004": "MD4是如何發展起來的，它的歷史意義是什麼？",
    "MD4-Implementation-013": "它已在各種平台和語言上廣泛實施和標準化，可以輕鬆整合到現有系統中，儘管這一優勢被現代環境中的安全問題所抵消。",
    "MD4-InsecurityExamples-017": "MD4 安全故障範例",
    "MD4-LegacySystems-020": "MD4 可能仍然存在於遺留系統中，但在所有關註安全性的環境中不鼓勵使用它。現代標準不再推薦 MD4 用於任何加密目的。",
    "MD4-Operation-007": "MD4操作是如何進行的？",
    "MD4-Origin-005": "MD4 是 MD2 和 MD3 的演變，旨在提供更快的效能，同時保持安全屬性。然而，很明顯 MD4 存在一些安全漏洞。",
    "MD4-Process-008": "MD4 透過將輸入訊息填入 512 位元的倍數並將其分割為 16 字塊來處理輸入訊息。然後，該演算法使用涉及位元運算、模加法和非線性函數的四輪處理對這些區塊進行操作。",
    "MD4-Purpose-003": "MD4的目的是透過產生固定大小的數位指紋來確保資料的完整性，可用於驗證原始資料的真實性和完整性。",
    "MD4-Rounds-009": "處理完所有區塊後，所得內部狀態將轉換為最終的 128 位元雜湊值。",
    "MD4-Speed-012": "MD4 最初被設計為比其前身更快，這使得它在推出時在需要快速散列的應用程式中很受歡迎。",
    "MD4-Successors-006": "儘管有缺陷，MD4 為後續的雜湊函數（如 MD5 和 SHA-1）奠定了基礎，MD5 和 SHA-1 改進了其設計，但隨著時間的推移也繼承了它的一些漏洞。"
}
{
    "CSS-Advantages-010": "Каковы преимущества использования CSS?",
    "CSS-Advantages-Customization-012": "Еще одним преимуществом является возможность настраивать внешний вид нескольких страниц одновременно, что экономит время и усилия при обновлении стилей всего сайта.",
    "CSS-Advantages-Separation-011": "Одним из преимуществ является разделение задач между содержанием и представлением, что улучшает удобство обслуживания и масштабируемость веб-сайтов.",
    "CSS-Animations-Transitions-019": "CSS-анимация и переходы обеспечивают плавные визуальные эффекты без использования JavaScript.",
    "CSS-Def-002": "CSS (каскадные таблицы стилей) — это язык таблиц стилей, используемый для описания представления документа, написанного на HTML или XML.",
    "CSS-Disadvantages-013": "Каковы некоторые недостатки CSS?",
    "CSS-Disadvantages-Browser-Compat-015": "Другая проблема — кроссбраузерная совместимость, поскольку разные браузеры могут по-разному интерпретировать правила CSS. Это требует от разработчиков использования префиксов поставщиков или методов обнаружения функций для единообразного рендеринга в браузерах.",
    "CSS-Disadvantages-Cascade-014": "Одной из проблем является управление каскадной природой стилей, которая иногда может привести к неожиданным проблемам с наследованием и специфичностью.",
    "CSS-Evolution-006": "С тех пор он развивался через CSS2 (1998 г.), CSS2.1 (2007 г.), CSS3 (постоянная разработка), вводя такие функции, как селекторы, анимацию, адаптивный дизайн и многое другое.",
    "CSS-Future-020": "Каково будущее технологии CSS?",
    "CSS-Future-Houdini-022": "Houdini, например, стремится предоставить низкоуровневые API для настройки процесса рендеринга браузера, предоставляя разработчикам беспрецедентный контроль над стилем и макетом.",
    "CSS-Future-Progress-021": "Рабочая группа CSS продолжает работать над новыми модулями, такими как CSS-переменные (пользовательские свойства), Houdini и контейнерные запросы.",
    "CSS-Hist-Origin-005": "CSS был впервые предложен Хоконом Виумом Лием в октябре 1994 года и стал официальной рекомендацией W3C в декабре 1996 года с CSS1.",
    "CSS-History-004": "Какова история CSS?",
    "CSS-History-W3C": "График рекомендаций W3C CSS",
    "CSS-Key-Features-016": "Каковы некоторые ключевые особенности CSS?",
    "CSS-Layouts-018": "Системы макетов Flexbox и Grid предоставляют мощные инструменты для создания адаптивных и гибких макетов страниц.",
    "CSS-MDN-Animations": "Руководство MDN по CSS-анимации",
    "CSS-MDN-Flexbox": "Руководство MDN по Flexbox",
    "CSS-MDN-Grid": "Руководство MDN по CSS Grid",
    "CSS-MDN-Houdini": "MDN Введение в Houdini",
    "CSS-Purpose-003": "Он позволяет разработчикам отделять контент от представления, определяя такие стили, как макет, цвета и шрифты, делая веб-страницы визуально привлекательными и единообразными на разных устройствах и экранах.",
    "CSS-Selectors-017": "Селекторы позволяют ориентироваться на определенные элементы HTML на основе их типа, класса, идентификатора, атрибутов и т. д.",
    "CSS-Tech-History-001": "Что такое CSS?",
    "CSS-Usage-007": "Как мне использовать CSS в своих веб-проектах?",
    "CSS-Usage-Basics-008": "Чтобы использовать CSS, вы создаете отдельный файл (например, style.css), содержащий ваши стили, а затем связываете его с вашим HTML-файлом с помощью элемента <link> в разделе <head>.",
    "CSS-Usage-Inline-009": "Альтернативно вы можете включить встроенные стили непосредственно в элементы HTML, используя атрибут style, или встроить CSS в тег <style> внутри раздела <head>.",
    "CSS-Vendor-Prefixes": "Руководство MDN по префиксам поставщиков",
    "CSS-W3C-Selectors": "Спецификация селекторов W3C уровня 4",
    "CSS-WG-Future-Modules": "Текущая работа W3C CSS"
}
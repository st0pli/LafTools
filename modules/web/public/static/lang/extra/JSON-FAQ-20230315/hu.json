{
    "JSON-Advantages-011": "A JSON általában kisebb és gyorsabban elemezhető, mint az XML, így ideális az ügyfél-szerver kommunikációhoz, ahol a sávszélesség és a sebesség kulcsfontosságú.",
    "JSON-Basics-001": "Mi az a JSON?",
    "JSON-Beautify-007": "Mi az a JSON Beautification?",
    "JSON-Beautify-Def-008": "A JSON-szépítés a JSON-adatok ember által olvashatóbb formázására utal, megfelelő behúzással és sortöréssel, megkönnyítve az elemzést és a hibakeresést.",
    "JSON-Beautify-Example-009": "Előtte: '{\\\"kulcs\\\":\\\"érték\\\",\\\"tömb\\\":[1,2,3]}', Utána: '{\\n \\\"kulcs\\\": \\\"érték\\\", \\n \\\"tömb\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "A JSON (JavaScript Object Notation) egy könnyű, szövegalapú adatcsere-formátum, amely könnyen olvasható és írható az emberek számára, a gépek pedig könnyen értelmezhetők és generálhatók.",
    "JSON-JavaScript-Support-020": "A JavaScript natív módon támogatja a JSON-t a „JSON.parse()” és a „JSON.stringify()” globális objektumok révén. Minden érvényes JSON egyben érvényes JavaScript literális objektum vagy tömb is, amely lehetővé teszi a két formátum közötti zökkenőmentes átalakítást.",
    "JSON-JavaScript-Usage-021": "A webfejlesztésben a JSON-t általában AJAX-kérésekhez, szerveroldali megjelenítéshez és adattároláshoz használják (például helyi tárhely vagy IndexedDB).",
    "JSON-Linting-022": "Mi az a JSON linting, és miért fontos?",
    "JSON-Linting-Benefit-024": "A Linters megakadályozhatja az érvénytelen JSON miatti futásidejű hibákat, biztosítva a zökkenőmentes adatcserét, és időt takaríthat meg a lehetséges hibakeresési problémák során.",
    "JSON-Linting-Explanation-023": "A JSON-beszúrás az a folyamat, amely ellenőrzi, hogy egy JSON-dokumentum megfelel-e a JSON-specifikációnak. Segít azonosítani a szintaktikai hibákat az adatok elemzése előtt.",
    "JSON-Path-013": "Mi az a JSON-útvonal?",
    "JSON-Path-Example-015": "A $.store.book[0].title kiválasztja az első könyv címét egy JSON-objektumban egy könyvtömböt tartalmazó tárolóval.",
    "JSON-Path-Explanation-014": "A JSON-útvonal az XML-hez készült XPath-hoz hasonló lekérdezési nyelv, amely lehetővé teszi az adatok kinyerését a JSON-dokumentumokból egy elérési út-szerű jelöléssel.",
    "JSON-Path-Guide": "JSONPath – XPath JSON-hoz",
    "JSON-Purpose-003": "Elsősorban adatok továbbítására szolgál a szerver és a webalkalmazás között az XML alternatívájaként, natív JavaScript-támogatással a \"JSON.parse()\" és a \"JSON.stringify()\" metódusokon keresztül.",
    "JSON-Scope-in-JavaScript-019": "Hogyan illeszkedik a JSON a JavaScriptbe?",
    "JSON-Security-025": "Milyen biztonsági aggályok merülnek fel a JSON-szal végzett munka során?",
    "JSON-Security-Impact-026": "A potenciális biztonsági kockázatok közé tartoznak a JSON injekciós támadások, amelyek során rosszindulatú adatokat küldenek, amelyek elemzéskor/végrehajtáskor nem kívánt viselkedést okozhatnak.",
    "JSON-Security-Prevention-027": "E kockázatok csökkentése érdekében mindig tisztítsa meg a felhasználói bevitelt, és használjon olyan könyvtárakat, amelyek biztonságosan elemzik a JSON-t a tartalom végrehajtása nélkül (például a JavaScript beépített JSON.parse()). Továbbá kerülje az eval() használatát a JSON elemzéséhez.",
    "JSON-Serialization-016": "Mi az a JSON szerializálás és deszerializálás?",
    "JSON-Serialization-Def-017": "A JSON-szerializálás egy JavaScript-objektum JSON-karakterláncsá alakításának folyamata, míg a deszerializálás ennek fordítottja – a JSON-karakterlánc visszaállítása JavaScript-objektummá.",
    "JSON-Serialization-W3Schools": "JSON-szerializálás a W3Schools-on",
    "JSON-Syntax-004": "Mi a JSON alapvető szintaxisa?",
    "JSON-Syntax-Reference": "MDN Web Docs a JSON-on",
    "JSON-Value-Types-006": "Az értékek lehetnek karakterláncok, számok, logikai értékek, tömbök (szögletes zárójelben",
    "JSON-vs-XML-010": "Hogyan hasonlítható össze a JSON az XML-lel?",
    "JSON-vs-XML-Article": "A JSON és az XML összehasonlítása",
    "MDN-JSON-in-JavaScript": "MDN webdokumentumok – JSON használata",
    "OWASP-JSON-Injection": "OWASP – JSON injekció",
    "XML-Advantages-012": "Az XML nagyobb szerkezeti rugalmasságot biztosít, és támogatja a névtereket, ami előnyös lehet az összetett dokumentumszerkezetek és a rendszerek közötti együttműködés szempontjából."
}
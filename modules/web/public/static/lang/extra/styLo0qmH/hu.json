{
    "CSS-Advantages-010": "Milyen előnyei vannak a CSS használatának?",
    "CSS-Advantages-Customization-012": "További előnye, hogy egyszerre több oldal kinézetét és hangulatát testre szabhatja, így időt és erőfeszítést takaríthat meg a webhelyszintű stílusok frissítése során.",
    "CSS-Advantages-Separation-011": "Az egyik előny a tartalom és a megjelenítés közötti szempontok elkülönítése, ami javítja a webhelyek karbantarthatóságát és méretezhetőségét.",
    "CSS-Animations-Transitions-019": "A CSS-animációk és átmenetek zökkenőmentes vizuális effektusokat tesznek lehetővé JavaScript használata nélkül.",
    "CSS-Def-002": "A CSS (Cascading Style Sheets) egy stíluslapnyelv, amelyet HTML vagy XML formátumban írt dokumentumok megjelenítésének leírására használnak.",
    "CSS-Disadvantages-013": "Milyen hátrányai vannak a CSS-nek?",
    "CSS-Disadvantages-Browser-Compat-015": "Egy másik probléma a böngészők közötti kompatibilitás, mivel a különböző böngészők eltérően értelmezhetik a CSS-szabályokat. Ez megköveteli a fejlesztőktől, hogy gyártói előtagokat vagy funkciófelismerő technikákat használjanak a konzisztens megjelenítés érdekében a böngészők között.",
    "CSS-Disadvantages-Cascade-014": "Az egyik kihívás a stílusok lépcsőzetes jellegének kezelése, ami néha váratlan öröklődési és specifikus problémákhoz vezethet.",
    "CSS-Evolution-006": "Azóta a CSS2 (1998), a CSS2.1 (2007), a CSS3 (folyamatos fejlesztés) révén fejlődött, olyan funkciókat vezetve be, mint a szelektorok, animációk, reszponzív tervezés és még sok más.",
    "CSS-Future-020": "Mi a CSS technológia jövője?",
    "CSS-Future-Houdini-022": "A Houdini például arra törekszik, hogy alacsony szintű API-kat biztosítson a böngésző megjelenítési folyamatának személyre szabásához, lehetővé téve a fejlesztők számára a stílus és az elrendezés soha nem látott szabályozását.",
    "CSS-Future-Progress-021": "A CSS Munkacsoport továbbra is olyan új modulokon dolgozik, mint a CSS Variables (Custom Properties), a Houdini és a Container Queries.",
    "CSS-Hist-Origin-005": "A CSS-t először Håkon Wium Lie javasolta 1994 októberében, és 1996 decemberében a CSS1-gyel hivatalos W3C-ajánlás lett.",
    "CSS-History-004": "Mi a CSS története?",
    "CSS-History-W3C": "W3C CSS ajánlások idővonala",
    "CSS-Key-Features-016": "Melyek a CSS legfontosabb funkciói?",
    "CSS-Layouts-018": "A Flexbox és a Grid elrendezési rendszerek hatékony eszközöket kínálnak az érzékeny és rugalmas oldalelrendezések létrehozásához.",
    "CSS-MDN-Animations": "MDN útmutató a CSS-animációkhoz",
    "CSS-MDN-Flexbox": "MDN útmutató a Flexboxhoz",
    "CSS-MDN-Grid": "MDN útmutató a CSS Gridhez",
    "CSS-MDN-Houdini": "Az MDN Houdini bemutatása",
    "CSS-Purpose-003": "Lehetővé teszi a fejlesztők számára, hogy elkülönítsék a tartalmat a prezentációtól, stílusokat, például elrendezést, színeket és betűtípusokat határozhassanak meg, így a weboldalak vizuálisan tetszetősek és egységesek a különböző eszközökön és képernyőkön.",
    "CSS-Selectors-017": "A szelektorok lehetővé teszik az adott HTML-elemek célzását típusuk, osztályuk, azonosítójuk, attribútumuk és egyebek alapján.",
    "CSS-Tech-History-001": "Mi az a CSS?",
    "CSS-Usage-007": "Hogyan használhatom a CSS-t webprojektjeimben?",
    "CSS-Usage-Basics-008": "A CSS használatához hozzon létre egy külön fájlt (pl. style.css), amely tartalmazza a stílusait, majd csatolja azt a HTML-fájlhoz a <link> elem segítségével a <head> részben.",
    "CSS-Usage-Inline-009": "Alternatív megoldásként beépíthet soron belüli stílusokat közvetlenül a HTML-elemekbe a \"style\" attribútum használatával, vagy beágyazhat CSS-t a <style> címkébe a <head> szakaszban.",
    "CSS-Vendor-Prefixes": "MDN útmutató a szállítói előtagokról",
    "CSS-W3C-Selectors": "W3C Selectors Level 4 Spec",
    "CSS-WG-Future-Modules": "W3C CSS Jelenlegi munka"
}
{
    "Diff-XML-JSON-Article": "XML ve JSON Arasındaki Fark",
    "MDN-XML-Syntax": "MDN Web Belgeleri - XML ​​Söz Dizimi",
    "W3Schools-XML-Validation": "W3Schools - XML ​​Doğrulaması",
    "XML-Advantage-Readable-018": "İnsan tarafından okunabilir yapısı, kolay inceleme ve hata ayıklamaya olanak tanır ve özel yapıları tanımlama yeteneği, onu birden fazla kullanım durumu için esnek hale getirir.",
    "XML-Advantage-Standardized-017": "XML, çeşitli platformlar ve sistemlerle uyumlu olmasını sağlayan, birlikte çalışabilirliği ve veri alışverişini teşvik eden, yaygın olarak benimsenen bir standarttır.",
    "XML-Advantages-016": "XML kullanmanın avantajları nelerdir?",
    "XML-Attributes-006": "Öğeler, açılış etiketi içindeki öğe hakkında ek bilgi sağlayan {0} gibi niteliklere sahip olabilir.",
    "XML-Basics-001": "XML nedir?",
    "XML-Def-002": "XML (eXtensible Markup Language), belgeleri hem insan tarafından hem de makine tarafından okunabilen bir biçimde kodlamak için bir dizi kural tanımlayan bir biçimlendirme dilidir.",
    "XML-Disadvantage-Size-020": "XML nispeten ayrıntılı olabilir, bu da JSON gibi alternatiflere kıyasla daha büyük dosya boyutlarına neden olur ve bu da aktarım hızını ve depolama gereksinimlerini etkiler.",
    "XML-Disadvantages-019": "XML kullanmanın bazı dezavantajları nelerdir?",
    "XML-JSON-Diff-Structure-014": "XML, yapı için ayrıntılı, hiyerarşik etiketler kullanırken JSON, anahtar/değer çiftlerine ve dizilerine dayanır. Örnek: XML {0} ve JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML, kapanış etiketleri ve nitelikleriyle daha katı bir sözdizimine sahipken, JSON'un sözdizimi daha hafiftir ve JavaScript nesne gösterimine daha yakındır. JSON'un genellikle web üzerinden ayrıştırılması ve iletilmesi daha kolay kabul edilir.",
    "XML-JSON-Difference-013": "XML ile JSON arasındaki fark nedir?",
    "XML-Nesting-007": "XML'de iç içe yerleştirme nasıl çalışır?",
    "XML-Nesting-Example-009": "Örneğin, `<book><title>Kitabımın Başlığı</title><author>John Doe</author></book>`, başlığı ve yazarının iç içe geçmiş öğeler olduğu bir kitabı temsil eder.",
    "XML-Nesting-Explanation-008": "XML'de öğeler hiyerarşik ilişkileri temsil edecek şekilde birbirinin içine yerleştirilebilir. Alt öğeler ana öğelerin açılış ve kapanış etiketleri arasına yerleştirilir.",
    "XML-Processing-Speed-021": "XML'in ayrıştırılması ve oluşturulması, özellikle karmaşık belgelerle uğraşırken katı sözdizimi ve doğrulama ihtiyacı nedeniyle daha yavaş olabilir.",
    "XML-Purpose-003": "HTML gibi verileri görüntülemek yerine veri taşımak üzere tasarlanmıştır ve farklı platformlar ve uygulamalar arasında yapılandırılmış bilgilerin paylaşılması için ortak bir format olarak kullanılmasına olanak tanır.",
    "XML-Syntax-004": "XML'in temel sözdizimi nedir?",
    "XML-Syntax-Example-005": "Basit bir XML belgesi ağaç benzeri bir yapıdaki öğelerden oluşur. Her öğe köşeli parantez içindeki bir etiketle (<element>) başlar ve bir kapatma etiketiyle (</element>) biter.",
    "XML-Validation-010": "XML doğrulama nedir ve nasıl çalışır?",
    "XML-Validation-Def-011": "XML doğrulaması, bir XML belgesinin Belge Türü Tanımında (DTD) veya XML Şemasında (XSD) tanımlanan belirli bir kural kümesine uymasını sağlar.",
    "XML-Validation-Process-012": "Doğrulayıcılar, gerekli tüm öğelerin ve niteliklerin mevcut olup olmadığını kontrol eder, veri türlerini doğrular ve belgeyi işlemeden önce şemada belirtilen kısıtlamaları uygular."
}
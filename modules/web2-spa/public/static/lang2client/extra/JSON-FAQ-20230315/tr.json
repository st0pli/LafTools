{
    "JSON-Advantages-011": "JSON genellikle XML'den daha küçük ve ayrıştırılması daha hızlıdır; bu da onu bant genişliği ve hızın çok önemli olduğu istemci-sunucu iletişimi için ideal kılar.",
    "JSON-Basics-001": "JSON nedir?",
    "JSON-Beautify-007": "JSON Güzelleştirme nedir?",
    "JSON-Beautify-Def-008": "JSON güzelleştirme, JSON verilerinin uygun girintiler ve satır sonları ile insanlar tarafından daha okunabilir bir biçimde biçimlendirilmesi sürecini ifade eder, bu da analiz etmeyi ve hata ayıklamayı kolaylaştırır.",
    "JSON-Beautify-Example-009": "Önce: '{\\\"anahtar\\\":\\\"değer\\\",\\\"dizi\\\":[1,2,3]}', Sonra: '{\\n \\\"anahtar\\\": \\\"değer\\\", \\n \\\"dizi\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON (JavaScript Object Notation), insanların okuması ve yazması, makinelerin ise ayrıştırması ve oluşturması kolay, hafif, metin tabanlı bir veri değişim formatıdır.",
    "JSON-JavaScript-Support-020": "JSON, \"JSON.parse()\" ve \"JSON.stringify()\" global nesneleri aracılığıyla yerel olarak JavaScript tarafından desteklenir. Geçerli herhangi bir JSON aynı zamanda geçerli bir JavaScript değişmez nesnesi veya dizisidir ve bu, iki biçim arasında kesintisiz dönüşüme olanak tanır.",
    "JSON-JavaScript-Usage-021": "Web geliştirmede JSON, AJAX istekleri, sunucu tarafı oluşturma ve veri depolama (ör. yerel depolama veya IndexedDB) için yaygın olarak kullanılır.",
    "JSON-Linting-022": "JSON linting nedir ve neden önemlidir?",
    "JSON-Linting-Benefit-024": "Linter, geçersiz JSON nedeniyle çalışma zamanı hatalarını önleyebilir, sorunsuz veri alışverişi sağlar ve olası sorunların hata ayıklamasında zamandan tasarruf sağlar.",
    "JSON-Linting-Explanation-023": "JSON linting, bir JSON belgesinin JSON spesifikasyonuna uyup uymadığını kontrol etme işlemidir. Verileri ayrıştırmaya çalışmadan önce sözdizimi hatalarının belirlenmesine yardımcı olur.",
    "JSON-Path-013": "JSON Yolu Nedir?",
    "JSON-Path-Example-015": "$.store.book[0].title, kitaplar dizisini içeren bir mağazaya sahip bir JSON nesnesindeki ilk kitabın başlığını seçer.",
    "JSON-Path-Explanation-014": "JSON Path, XML için XPath'a benzer bir sorgu dilidir ve yol benzeri bir gösterim kullanarak JSON belgelerinden veri çıkarmanıza olanak tanır.",
    "JSON-Path-Guide": "JSONPath - JSON için XPath",
    "JSON-Purpose-003": "Öncelikle, XML'e alternatif olarak bir sunucu ile web uygulaması arasında veri aktarımı yapmak için kullanılır ve JavaScript'te \"JSON.parse()\" ve \"JSON.stringify()\" yöntemleri aracılığıyla yerel destek sağlar.",
    "JSON-Scope-in-JavaScript-019": "JSON, JavaScript'e nasıl uyar?",
    "JSON-Security-025": "JSON ile çalışırken bazı güvenlik endişeleri nelerdir?",
    "JSON-Security-Impact-026": "Potansiyel güvenlik riskleri arasında, ayrıştırılırken/yürütülürken istenmeyen davranışlara neden olabilecek kötü amaçlı verilerin gönderildiği JSON enjeksiyon saldırıları yer alır.",
    "JSON-Security-Prevention-027": "Bu riskleri azaltmak için her zaman kullanıcı girişini temizleyin ve JSON içeriğini yürütmeden güvenli bir şekilde ayrıştıran kitaplıkları kullanın (JavaScript'in yerleşik JSON.parse() işlevi gibi). Ayrıca JSON'u ayrıştırmak için eval() işlevini kullanmaktan kaçının.",
    "JSON-Serialization-016": "JSON serileştirme ve seri durumdan çıkarma nedir?",
    "JSON-Serialization-Def-017": "JSON serileştirme, bir JavaScript nesnesini bir JSON dizesine dönüştürme işlemidir; seri durumdan çıkarma ise bunun tersidir; JSON dizesini tekrar bir JavaScript nesnesine dönüştürür.",
    "JSON-Serialization-W3Schools": "W3Schools'ta JSON Serileştirmesi",
    "JSON-Syntax-004": "JSON'un temel sözdizimi nedir?",
    "JSON-Syntax-Example-f005": "Bir JSON nesnesi, küme parantezleri {0} içine alınmış anahtar/değer çiftlerinden oluşur. Her anahtar, çift tırnak içine alınmış bir dize, ardından iki nokta üst üste ve ardından değeri olmalıdır.",
    "JSON-Syntax-Reference": "JSON'da MDN Web Dokümanları",
    "JSON-Value-Types-006": "Değerler dizeler, sayılar, boolean'lar, diziler (köşeli parantez içine alınmış) olabilir",
    "JSON-vs-XML-010": "JSON XML'le nasıl karşılaştırılır?",
    "JSON-vs-XML-Article": "JSON ve XML'i karşılaştırma",
    "MDN-JSON-in-JavaScript": "MDN Web Dokümanları - JSON ile Çalışmak",
    "OWASP-JSON-Injection": "OWASP - JSON Enjeksiyonu",
    "XML-Advantages-012": "XML daha fazla yapı esnekliği sağlar ve ad alanlarını destekler; bu da karmaşık belge yapıları ve sistemler arasında birlikte çalışabilirlik açısından faydalı olabilir."
}
{
    "c1p4b": "然後，每個十進製數都會轉換為由五個 Base85 字元組成的唯一序列。如果末尾剩餘的位元組少於四個位元組，則可能會套用填充。",
    "d7w2e": "Base85 的工作原理是將輸入資料分成四個位元組的群組，並將每個群組轉換為 0 到 2^32-1 之間的十進製數。",
    "f9t1z": "Base85 最初開發的目的是為了有效地表示 PostScript 文件中的二進位數據，以獲得更好的壓縮率。",
    "g3h5s": "Base85 是如何運作的？",
    "j5s7r": "如何在 JavaScript 中使用 Base85 進行編碼/解碼？",
    "k2em5e": "這會導致相同數量的輸入資料的輸出字串更短，這在最小化大小至關重要的場景中非常有用。",
    "p8eq9n": "您可以使用「base85」或「ascii85」等函式庫在 JavaScript 中進行 Base85 編碼和解碼。",
    "q2n3r": "如今，它被用於空間效率和可讀性至關重要的各種應用中，例如 PDF 文件和某些網路協定。",
    "r9qn8v": "Base85 的主要優點是由於更大的字元集（85 vs. Base64 中的 64 或 Base32 中的 32）而提高了空間效率。",
    "u1i2b": "與 Base64 或 Base32 相比，使用 Base85 有何優點？",
    "v4k6r": "與 Base64 或 Base32 相比，它透過使用更大的字元集將資料編碼為更緊湊的形式。",
    "w1x4k": "是的，有許多變體，包括 Ascii85（用於 PostScript 和 PDF）、Z85 (ZeroMQ) 和 UUencode（較舊的格式）。每個都有稍微不同的字符集和規則。",
    "x9n1b": "Base85 是一種使用一組 85 個可列印 ASCII 字元表示二進位資料的編碼方案。",
    "y6m8k": "為什麼要建立 Base85？",
    "z2t7m": "什麼是Bas​​e85？",
    "z5m6t": "用法範例：`const base85 = require('base85'); const 編碼 = base85.encode('your-data'); const 解碼 = base85.decode(編碼);`",
    "z9t7p": "Base85 有特定的變體嗎？"
}
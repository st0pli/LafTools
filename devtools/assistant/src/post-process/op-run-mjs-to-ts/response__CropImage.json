{
  "result": "Below is the TypeScript version of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `CropImage` class, following the pattern of the provided example.\n2. The description of the code's function and purpose has been added to the top comment.\n3. Natural text has been wrapped with the `Dot` function.\n4. Import statements have been left unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The CropImage class is used to crop images to specified dimensions or automatically detect and crop edges.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\nimport { isImage } from \"../lib/FileType.mjs\";\nimport { toBase64 } from \"../lib/Base64.mjs\";\nimport { isWorkerEnvironment } from \"../Utils.mjs\";\n// import jimp from \"jimp\";\nconst jimp = require(\"jimp\");\n\n/**\n * Crop Image operation\n */\nclass CropImage extends Operation {\n  /**\n   * CropImage constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"cropImage.name\", \"Crop Image\");\n    this.module = \"Image\";\n    this.description = Dot(\n      \"cropImage.desc\",\n      \"Crops an image to the specified region, or automatically crops edges.<br><br><b><u>Autocrop</u></b><br>Automatically crops same-colour borders from the image.<br><br><u>Autocrop tolerance</u><br>A percentage value for the tolerance of colour difference between pixels.<br><br><u>Only autocrop frames</u><br>Only crop real frames (all sides must have the same border)<br><br><u>Symmetric autocrop</u><br>Force autocrop to be symmetric (top/bottom and left/right are cropped by the same amount)<br><br><u>Autocrop keep border</u><br>The number of pixels of border to leave around the image.\"\n    );\n    this.infoURL = \"https://wikipedia.org/wiki/Cropping_(image)\";\n    this.inputType = \"ArrayBuffer\";\n    this.outputType = \"ArrayBuffer\";\n    this.presentType = \"html\";\n    this.args = [\n      {\n        name: Dot(\"cropImage.arg.xPos\", \"X Position\"),\n        type: \"number\",\n        value: 0,\n        min: 0,\n      },\n      {\n        name: Dot(\"cropImage.arg.yPos\", \"Y Position\"),\n        type: \"number\",\n        value: 0,\n        min: 0,\n      },\n      {\n        name: Dot(\"cropImage.arg.width\", \"Width\"),\n        type: \"number\",\n        value: 10,\n        min: 1,\n      },\n      {\n        name: Dot(\"cropImage.arg.height\", \"Height\"),\n        type: \"number\",\n        value: 10,\n        min: 1,\n      },\n      {\n        name: Dot(\"cropImage.arg.autocrop\", \"Autocrop\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoTolerance\", \"Autocrop tolerance (%)\"),\n        type: \"number\",\n        value: 0.02,\n        min: 0,\n        max: 100,\n        step: 0.01,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoFrames\", \"Only autocrop frames\"),\n        type: \"boolean\",\n        value: true,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoSymmetric\", \"Symmetric autocrop\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoBorder\", \"Autocrop keep border (px)\"),\n        type: \"number\",\n        value: 0,\n        min: 0,\n      },\n    ];\n  }\n\n  // New method following the pattern of the provided example\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": this.module,\n        \"description\": this.description,\n        \"infoURL\": this.infoURL,\n        \"inputType\": this.inputType,\n        \"outputType\": this.outputType,\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": this.args,\n      },\n      infoURL: this.infoURL,\n      nousenouseID: 'cropImage',\n      optName: Dot(\"cropImage.optName\", \"Generate Cropped Image\"),\n      optDescription: Dot(\n        \"cropImage.optDesc\",\n        \"This operation crops an image to the",
  "response": {
    "choices": [
      {
        "finish_reason": "length",
        "index": 0,
        "message": {
          "content": "Below is the TypeScript version of the provided JavaScript code, with the requested changes applied:\n\n1. A new method `getOptDetail` has been added to the `CropImage` class, following the pattern of the provided example.\n2. The description of the code's function and purpose has been added to the top comment.\n3. Natural text has been wrapped with the `Dot` function.\n4. Import statements have been left unchanged.\n\n```typescript\n// Date: Sun, 14 Jan 2024\n// Second Author: Ryan Laf\n// Description: The CropImage class is used to crop images to specified dimensions or automatically detect and crop edges.\n// License: AGPLv3\n// Copyright (C) 2024 - Present, https://laftools.dev and https://codegen.cc\n\nimport Operation from \"../Operation.tsx\";\nimport OperationError from \"../errors/OperationError.mjs\";\nimport { isImage } from \"../lib/FileType.mjs\";\nimport { toBase64 } from \"../lib/Base64.mjs\";\nimport { isWorkerEnvironment } from \"../Utils.mjs\";\n// import jimp from \"jimp\";\nconst jimp = require(\"jimp\");\n\n/**\n * Crop Image operation\n */\nclass CropImage extends Operation {\n  /**\n   * CropImage constructor\n   */\n  constructor() {\n    super();\n\n    this.name = Dot(\"cropImage.name\", \"Crop Image\");\n    this.module = \"Image\";\n    this.description = Dot(\n      \"cropImage.desc\",\n      \"Crops an image to the specified region, or automatically crops edges.<br><br><b><u>Autocrop</u></b><br>Automatically crops same-colour borders from the image.<br><br><u>Autocrop tolerance</u><br>A percentage value for the tolerance of colour difference between pixels.<br><br><u>Only autocrop frames</u><br>Only crop real frames (all sides must have the same border)<br><br><u>Symmetric autocrop</u><br>Force autocrop to be symmetric (top/bottom and left/right are cropped by the same amount)<br><br><u>Autocrop keep border</u><br>The number of pixels of border to leave around the image.\"\n    );\n    this.infoURL = \"https://wikipedia.org/wiki/Cropping_(image)\";\n    this.inputType = \"ArrayBuffer\";\n    this.outputType = \"ArrayBuffer\";\n    this.presentType = \"html\";\n    this.args = [\n      {\n        name: Dot(\"cropImage.arg.xPos\", \"X Position\"),\n        type: \"number\",\n        value: 0,\n        min: 0,\n      },\n      {\n        name: Dot(\"cropImage.arg.yPos\", \"Y Position\"),\n        type: \"number\",\n        value: 0,\n        min: 0,\n      },\n      {\n        name: Dot(\"cropImage.arg.width\", \"Width\"),\n        type: \"number\",\n        value: 10,\n        min: 1,\n      },\n      {\n        name: Dot(\"cropImage.arg.height\", \"Height\"),\n        type: \"number\",\n        value: 10,\n        min: 1,\n      },\n      {\n        name: Dot(\"cropImage.arg.autocrop\", \"Autocrop\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoTolerance\", \"Autocrop tolerance (%)\"),\n        type: \"number\",\n        value: 0.02,\n        min: 0,\n        max: 100,\n        step: 0.01,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoFrames\", \"Only autocrop frames\"),\n        type: \"boolean\",\n        value: true,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoSymmetric\", \"Symmetric autocrop\"),\n        type: \"boolean\",\n        value: false,\n      },\n      {\n        name: Dot(\"cropImage.arg.autoBorder\", \"Autocrop keep border (px)\"),\n        type: \"number\",\n        value: 0,\n        min: 0,\n      },\n    ];\n  }\n\n  // New method following the pattern of the provided example\n  public getOptDetail(): OptDetail {\n    return {\n      relatedID: 'nothing', // keep it, don't change\n      config: {\n        \"module\": this.module,\n        \"description\": this.description,\n        \"infoURL\": this.infoURL,\n        \"inputType\": this.inputType,\n        \"outputType\": this.outputType,\n        \"flowControl\": false,\n        \"manualBake\": false,\n        \"args\": this.args,\n      },\n      infoURL: this.infoURL,\n      nousenouseID: 'cropImage',\n      optName: Dot(\"cropImage.optName\", \"Generate Cropped Image\"),\n      optDescription: Dot(\n        \"cropImage.optDesc\",\n        \"This operation crops an image to the",
          "role": "assistant"
        }
      }
    ],
    "created": 1713886971,
    "id": "8596355740019350960",
    "model": "glm-4",
    "request_id": "8596355740019350960",
    "usage": {
      "completion_tokens": 1024,
      "prompt_tokens": 1660,
      "total_tokens": 2684
    }
  }
}
{
    "Diff-XML-JSON-Article": "Разница между XML и JSON",
    "MDN-XML-Syntax": "Веб-документы MDN — синтаксис XML",
    "W3Schools-XML-Validation": "W3Schools — проверка XML",
    "XML-Advantage-Readable-018": "Его удобочитаемый характер позволяет легко проверять и отлаживать, а возможность определять собственные структуры делает его гибким для различных вариантов использования.",
    "XML-Advantage-Standardized-017": "XML является широко распространенным стандартом, что делает его совместимым с различными платформами и системами, обеспечивая совместимость и обмен данными.",
    "XML-Advantages-016": "Каковы преимущества использования XML?",
    "XML-Attributes-006": "Элементы могут иметь атрибуты, которые предоставляют дополнительную информацию об элементе в открывающем теге, например {0}.",
    "XML-Basics-001": "Что такое XML?",
    "XML-Def-002": "XML (расширяемый язык разметки) — это язык разметки, который определяет набор правил для кодирования документов в формате, который является одновременно читаемым человеком и машиной.",
    "XML-Disadvantage-Size-020": "XML может быть относительно многословным, что приводит к увеличению размера файлов по сравнению с такими альтернативами, как JSON, что влияет на скорость передачи и требования к объему хранилища.",
    "XML-Disadvantages-019": "Каковы некоторые недостатки использования XML?",
    "XML-JSON-Diff-Structure-014": "XML использует подробные иерархические теги для структуры, тогда как JSON полагается на пары ключ-значение и массивы. Пример: XML {0} и JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML имеет более строгий синтаксис с закрывающими тегами и атрибутами, тогда как синтаксис JSON проще и ближе к нотации объектов JavaScript. JSON обычно считается более простым для анализа и передачи через Интернет.",
    "XML-JSON-Difference-013": "В чем разница между XML и JSON?",
    "XML-Nesting-007": "Как работает вложение в XML?",
    "XML-Nesting-Example-009": "Например, `<book><title>Название моей книги</title><author>Джон Доу</author></book>` представляет книгу с ее названием и автором в виде вложенных элементов.",
    "XML-Nesting-Explanation-008": "В XML элементы могут быть вложены друг в друга для представления иерархических отношений. Дочерние элементы размещаются между открывающим и закрывающим тегами родительского элемента.",
    "XML-Processing-Speed-021": "Анализ и генерация XML могут выполняться медленнее из-за его строгого синтаксиса и необходимости проверки, особенно при работе со сложными документами.",
    "XML-Purpose-003": "Он предназначен для переноса данных, а не для отображения данных, таких как HTML, что позволяет использовать его в качестве общего формата для обмена структурированной информацией между различными платформами и приложениями.",
    "XML-Syntax-004": "Каков основной синтаксис XML?",
    "XML-Syntax-Example-005": "Простой XML-документ состоит из элементов древовидной структуры. Каждый элемент начинается с тега в угловых скобках (<element>) и заканчивается закрывающим тегом (</element>).",
    "XML-Validation-010": "Что такое проверка XML и как она работает?",
    "XML-Validation-Def-011": "Проверка XML гарантирует, что документ XML соответствует определенному набору правил, определенных в определении типа документа (DTD) или схеме XML (XSD).",
    "XML-Validation-Process-012": "Перед обработкой документа валидаторы проверяют наличие всех необходимых элементов и атрибутов, проверяют типы данных и применяют все ограничения, указанные в схеме."
}
name: Manual Build and Upload to US for Pre-Release

on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      LAFTOOLS_ROOT: /home/runner/work/LafTools/LafTools-tag
      TAG_MODE: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.21

      - name: Get dependencies
        run: go mod download

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Run build script
        id: runbuildscript
        run: |
          npm i -g typescript
          cd ./modules/web2
          cd ../../
          cd ./pipeline
          chmod +x ./build-all.sh
          ./build-all.sh "${{steps.get_version.outputs.VERSION}}"

      - name: US Pkg Release 1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.US_APP_SSH_HOST }}
          port: ${{ secrets.US_APP_SSH_PORT }}
          username: ${{ secrets.US_APP_SSH_USERNAME }}
          key: ${{ secrets.US_APP_SSH_KEY }}
          script: |
            echo 'Running some command'
            ls -la 
            mkdir -p /home/appuser/PkgRelease-dist
            mkdir -p /home/appuser/PkgRelease-dist/${{steps.get_version.outputs.VERSION}}

      - name: US Pkg Release 2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.US_APP_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: US Pkg Release 3
        run: |
          sftp -o StrictHostKeyChecking=no -P ${{ secrets.US_APP_SSH_PORT }} ${{ secrets.US_APP_SSH_USERNAME }}@${{ secrets.US_APP_SSH_HOST }} <<EOF
            put /home/runner/work/LafTools/LafTools-tag/dist/pkg/linux-x64.tar.gz /home/appuser/PkgRelease-dist/${{steps.get_version.outputs.VERSION}}/LafTools-${{steps.get_version.outputs.VERSION}}-linux-x64.tar.gz
            put /home/runner/work/LafTools/LafTools-tag/dist/pkg/linux-arm64.tar.gz /home/appuser/PkgRelease-dist/${{steps.get_version.outputs.VERSION}}/LafTools-${{steps.get_version.outputs.VERSION}}-linux-arm64.tar.gz
            put /home/runner/work/LafTools/LafTools-tag/dist/pkg/darwin-x64.tar.gz /home/appuser/PkgRelease-dist/${{steps.get_version.outputs.VERSION}}/LafTools-${{steps.get_version.outputs.VERSION}}-darwin-x64.tar.gz
            put /home/runner/work/LafTools/LafTools-tag/dist/pkg/darwin-arm64.tar.gz /home/appuser/PkgRelease-dist/${{steps.get_version.outputs.VERSION}}/LafTools-${{steps.get_version.outputs.VERSION}}-darwin-arm64.tar.gz
            put /home/runner/work/LafTools/LafTools-tag/dist/pkg/windows-x64.zip /home/appuser/PkgRelease-dist/${{steps.get_version.outputs.VERSION}}/LafTools-${{steps.get_version.outputs.VERSION}}-windows-x64.zip
            put /home/runner/work/LafTools/LafTools-tag/dist/pkg/windows-arm64.zip /home/appuser/PkgRelease-dist/${{steps.get_version.outputs.VERSION}}/LafTools-${{steps.get_version.outputs.VERSION}}-windows-arm64.zip
          exit
          EOF
          rm ~/.ssh/id_rsa -rf

{
    "": "消息：{0}",
    "-8l11": "已复制",
    "-DqwwR": "操作完成。",
    "-GJ_72": "切换到选定的工作区 {0}",
    "-Jx4J": "本地账户",
    "-Rj3y": "主题",
    "-XZnW": "返回",
    "-Yo129I": "文本工具",
    "-nL_B5PoN": "压缩{0}",
    "01do0y": "卡纳达语",
    "04SSf": "忘记密码？",
    "07naT": "错误：{0}",
    "07ui6": "更多信息",
    "0Ceqru": "Base64 是一种使用一组受限符号对任意字节数据进行编码的表示法，这些符号可以方便地被人类使用并由计算机处理。",
    "0MO3jj": "MD5（Message-Digest 5）是一种广泛使用的哈希函数。它已用于各种安全应用程序，也常用于检查文件的完整性。但是，MD5 不具有防冲突性，并且不适合依赖此属性的 SSL/TLS 证书或数字签名等应用程序。",
    "0PgZ_": "翻译",
    "0YKce": "将二进制编码的十进制 (BCD) 字符串转换为十进制数。",
    "0gvcN": "欢迎来到概述页面，它仍在开发中。",
    "0pfdz7": "乌兹别克语",
    "123e4567": "什么是 Base64？",
    "13pmE": "支持我们",
    "1507oa": "孟加拉",
    "1JOFP": "打开我的工作区",
    "1NTgQ": "打开工作区",
    "1Npez": "请提供路径",
    "1Tuab": "已复制",
    "1X8x7": "例子",
    "1Xe82x7": "{0}压缩",
    "1Xe8wx7": "十六进制字符(Hex)",
    "1Xe8x7": "{0}格式化",
    "1Xe8x7qe": "BCD",
    "1YmJc": "选择以下选项之一作为您的首选语言：",
    "1a2b3c4d": "为什么使用 Base64？",
    "1a3Sc": "取消加载",
    "1bd": "工作流程",
    "1e3e5n": "豪萨语",
    "1h6jH": "警告，输出是一个长度为零的空值！",
    "1j62a": "其他时间执行此操作",
    "1k_44": "此操作将数据从 ASCII Base64 字符串解码回其原始格式。",
    "1th2nw": "僧伽罗语",
    "1yIQu": "您可以尝试重新处理您的操作或单击下面的按钮来消除错误。",
    "20nmcv": "拉丁",
    "22XLF": "还没有完成",
    "23fgh456": "Base64 的历史",
    "24vLI": "已创建",
    "27j7sy": "绍纳语",
    "2D9a6": "忘记密码？",
    "2D9qdk6": "足够安全吗？",
    "2IF6A": "看起来 Forge 保存存储遇到了一些问题",
    "2JyFN": "将结果复制到剪贴板",
    "2Ocbey": "版本",
    "2RhAT": "看起来伪造检索过程遇到了一些问题",
    "2Ruh6": "创建新的本地帐户",
    "2S5ap": "切换全屏模式",
    "2Y1mR": "清除文本",
    "2bcde3fg": "Base64的缺点",
    "2bqHk": "从文件加载",
    "2e4fb7": "伊博语",
    "2giYv": "测试密码：{0}",
    "2khdsv": "普什图语",
    "2qdin8": "请输入验证码",
    "30eo2v": "古吉拉特语",
    "32D9a6": "创建一个帐户",
    "33RXi": "由于参数不符合要求，请求被拒绝。",
    "346qid": "俄语",
    "34wxyz56": "如何在 JavaScript 中进行 Base64 编码/解码？",
    "39dsCt": "如果有，您将收到来自应用服务的最新通知。",
    "3ii2tt": "苏格兰盖尔语",
    "3umnB": "未知令牌",
    "441oja": "格鲁吉亚语",
    "44Ntqw-": "处理操作。",
    "46bksi": "立陶宛语",
    "4K_vhq": "复制此选项卡",
    "4PIqD": "代码审查",
    "4UYIJ": "尚未完成。",
    "4cGA_": "正在检索系统首选项数据...",
    "4hijk5lm": "大小增加：编码数据比原始二进制数据大约大 33%。",
    "4kKe4": "您的密码",
    "4tqb4x": "匈牙利",
    "4vdfwf": "好的",
    "4wlih": "由于参数不符合要求，请求被拒绝。",
    "52OiQ": "已复制 {0} 次",
    "54cwb": "系统 Websocket API 遇到错误：{0}",
    "56ibcj": "越南语",
    "58HQX": "如果您不知道其值，请联系您的管理员以获取更多详细信息，这可以在他的设置中找到。",
    "5BOhl": "邀请代码",
    "5Ih2u": "工具导航器",
    "5NCPT": "夜间模式",
    "5NJeGsu1": "通过电子邮件，您可以轻松整理收件箱、撰写和发送消息，并随时掌握您的信件。到目前为止，它仅用作用户和我们团队之间的沟通工具。",
    "5NJeddqGsu1": "本部分包括计算机材料、wiki 文章、使用指南等。",
    "5NJedqddqGsu1": "本节包括可用于构建您自己的项目的计算机资源。",
    "5Perd": "抱歉，“使用智能编辑器”功能尚不可用。我们仍在努力实施它。感谢您的耐心等待。",
    "5ZBYR": "返回",
    "5dF7o": "刷新",
    "5e6f7g8h": "当二进制数据需要通过基于文本的协议（例如电子邮件或 JSON）传输或嵌入仅允许文本的位置时，可以使用 Base64。",
    "5eXVS": "脚本内容",
    "5lW8qp": "显示此工具的示例",
    "5q-Zxqa": "脚本管理器",
    "5qPOJL": "要支持 LafTools，请考虑在 GitHub 上给我们的仓库加星，或者通过按月订阅升级到我们的专业版本。我们非常感谢您的帮助，我们承诺 LafTools将通过筹集的资金变得更好。",
    "5qV5Sf": "从列表中删除该记录",
    "5rg5mt": "马尔加什",
    "5srFq": "LafTools工具箱",
    "5v8jl7": "苗族",
    "6AumW": "默认操作",
    "6ClPV": "创造",
    "6MrfIfGc6": "代码压缩混淆",
    "6UICxHzVR.name": "格式化{0}",
    "6cOPZ": "二进制编码十进制 (BCD) 是一类十进制数的二进制编码，其中每个十进制数字由固定位数（通常为 4 或 8）表示。特殊的位模式有时用于符号",
    "6hsnqWe": "尽管 LafTools是免费且开源的，但维护它仍然需要大量的时间和精力。特别是，我们需要资金来支付某些云 API。如果您欣赏 LafTools，请考虑支持我们。",
    "6j13s3": "冰岛的",
    "6nopqrst": "无加密：Base64不是一种加密方法；它很容易被解码并且不提供任何安全性。",
    "6qT9d-N": "对于笔记本来说，LafTools不仅提供了shell命令管理器，而且在不久的将来还将添加强大的笔记工具，例如MarkDown、Latex、{0}等。",
    "6ulj8i": "尼泊尔语",
    "6wdtJ4vmg.name.0912": "压缩{0}",
    "6yOXx": "未知名称",
    "71x7x": "GitHub 上的源代码",
    "78abcdef": "JavaScript 提供了内置函数，例如 btoa() 和 atob() 分别用于 Base64 编码和解码。",
    "78ijk9lm": "Base64 首次在 RFC 1421 (1993) 中定义，后来在 RFC 4648 (2006) 中标准化。",
    "7MOO1": "登入",
    "7g5w22": "挪威",
    "7k56u3": "加利西亚语",
    "7q40W": "无法初始化管理员",
    "7u4vzu": "斯洛伐克语",
    "7x3f6": "选项卡 - 1",
    "82r0C": "管理您的待办事项列表，并更有效地完成工作。",
    "83dNp": "无法加载扩展 ID。 （参考：1dl1f）",
    "8LdRj": "概览",
    "8LdRjq": "计算",
    "8LdevRj": "服务",
    "8M1wY": "本地终端",
    "8OqB7hN1s": "此页面为 LafTools提供 IDE UI 样式，这是 LafTools的更高级别的抽象。",
    "8eeL1Kk": "关于",
    "8mn_qa": "正在从终端服务检索数据...",
    "8qzWJu": "抱歉，目前暂不支持小屏设备，请使用PC访问此页面。",
    "97um9v": "夏威夷语",
    "98KcL": "将十进制数转换为二进制编码十进制 (BCD)。",
    "9Xv8-": "另存为笔记",
    "9_qaj": "退出此表格",
    "9e4fcl": "泰米尔语",
    "9eZHM": "哎呀！我们似乎遇到了一些警告或错误。",
    "9gqo8x": "拉脱维亚语",
    "9i0j1k2l": "它还用于将小图像作为数据 URL 直接嵌入到 HTML 或 CSS 中。",
    "9m85mf": "塞索托语",
    "9qy1xn": "葡萄牙语",
    "9zCSc": "没有可用的工作区",
    "A69UZ": "变量",
    "AVUvu": "Base62 是一种使用一组受限符号对任意字节数据进行编码的表示法，这些符号可以方便地被人类使用并由计算机处理。高基数会导致比十进制或十六进制系统更短的字符串。",
    "AW9N8": "输入区域",
    "AfPC0": "您的纯文本密码",
    "Ahrjc": "该目录不存在，是否要创建它？",
    "AkXgF": "进行中：{0}%",
    "Apx8D": "如何手动重置密码？",
    "B-GCloBBt": "压缩可扩展标记语言 (XML) 代码。",
    "B0s0z": "此页面的目的：",
    "BCySSDEKL": "您当前的软件版本可能存在兼容性问题。",
    "BGd7P9": "此操作将原始数据编码为 ASCII Base64 字符串。",
    "BGd7dP9": "此操作将原始数据编码为 ASCII {0} 字符串。",
    "BGdd7dP9": "此操作将原始数据编码为 ASCII {0} 字符串。",
    "BLAKE2-021": "BLAKE2 是另一种现代替代方案，与 SHA-2 相比，它提供更快的速度，同时保持高安全级别。它提供多种变体，包括 BLAKE2b 和 BLAKE2s。",
    "BLAKE2_Info-023": "布莱克2信息",
    "BShq3M": "问题",
    "Bd9h-": "将其添加到我最喜欢的收藏中",
    "BuihG": "系统设置",
    "C3L9MmdDU7": "手册",
    "CASef": "好的，操作被触发。",
    "CEv8B": "您确定删除该记录吗？如果是，则再次单击此按钮。",
    "CFg8B": "大小必须介于 0 到 512 之间",
    "CP-Advantage-Career-014": "学习编程可以为各个行业提供职业机会，让您能够开发创新的解决方案、自动化任务并理解复杂的系统。",
    "CP-Advantages-013": "学习计算机编程有什么好处？",
    "CP-Basics-001": "什么是计算机编程？",
    "CP-Def-002": "计算机编程涉及用编程语言编写指令或代码来指导计算机如何执行特定任务。",
    "CP-History-004": "计算机编程的历史是怎样的？",
    "CP-History-Origin-005": "第一个可编程机器可以追溯到 19 世纪 Ada Lovelace 对 Charles Babbage 分析机的研究。然而，随着 20 世纪 40 年代第一台通用电子计算机 ENIAC 的发明，现代编程开始腾飞。",
    "CP-Lang-Choice-009": "语言的选择取决于项目要求、社区支持、学习难易程度和性能需求等因素。",
    "CP-Language-Evolution-006": "从那时起，编程语言从机器代码发展到汇编语言，然后发展到 FORTRAN、COBOL、C 等高级语言，现在发展到 Python、JavaScript 和 Rust 等现代语言。",
    "CP-Languages-007": "有哪些流行的编程语言？",
    "CP-Languages-List-008": "流行的编程语言包括 Java、Python、JavaScript、C++、C#、Swift、Go、PHP、Ruby 和 Kotlin。每个都有自己的优势和用例，例如用于数据科学的 Python、用于 Web 开发的 JavaScript 和用于系统编程的 C++。",
    "CP-Process-010": "计算机编程的过程是怎样的？",
    "CP-Process-Explanation-011": "编程通常涉及规划（定义问题和设计解决方案）、编码（用所选语言编写源代码）、测试（调试和验证功能）和维护（随着时间的推移更新和改进程序）。",
    "CP-Purpose-003": "程序员创建算法、解决问题并构建可以自动化流程、操作数据以及与用户或其他系统交互的软件应用程序。",
    "CP-SDLC-012": "这通常是在软件开发生命周期 (SDLC) 中构建的，其中包括需求分析、设计、部署和用户验收测试等附加阶段。",
    "CP-Skillset-015": "它还可以提高逻辑思维、解决问题的能力以及对新技术的适应能力，使人在数字时代更加多才多艺。",
    "CSS-Advantages-010": "使用 CSS 有什么优点？",
    "CSS-Advantages-Customization-012": "另一个优点是它能够同时自定义多个页面的外观，从而在更新站点范围的样式时节省时间和精力。",
    "CSS-Advantages-Separation-011": "优点之一是内容和表示之间的关注点分离，这提高了网站的可维护性和可扩展性。",
    "CSS-Animations-Transitions-019": "CSS 动画和过渡无需 JavaScript 即可实现流畅的视觉效果。",
    "CSS-Def-002": "CSS（层叠样式表）是一种样式表语言，用于描述以 HTML 或 XML 编写的文档的表示形式。",
    "CSS-Disadvantages-013": "CSS 有哪些缺点？",
    "CSS-Disadvantages-Browser-Compat-015": "另一个问题是跨浏览器兼容性，因为不同的浏览器可能以不同的方式解释 CSS 规则。这要求开发人员使用供应商前缀或功能检测技术来实现跨浏览器的一致渲染。",
    "CSS-Disadvantages-Cascade-014": "一项挑战是管理样式的级联性质，这有时会导致意外的继承和特殊性问题。",
    "CSS-Evolution-006": "从那时起，它经历了 CSS2 (1998)、CSS2.1 (2007)、CSS3（持续开发）的演变，引入了选择器、动画、响应式设计等功能。",
    "CSS-Future-020": "CSS技术的未来是什么？",
    "CSS-Future-Houdini-022": "例如，Houdini 的目标是提供低级 API 来定制浏览器的渲染过程，使开发人员能够对样式和布局进行前所未有的控制。",
    "CSS-Future-Progress-021": "CSS 工作组继续致力于新模块的开发，例如 CSS 变量（自定义属性）、Houdini 和容器查询。",
    "CSS-Hist-Origin-005": "CSS 最初由 Håkon Wium Lie 于 1994 年 10 月提出，并于 1996 年 12 月随 CSS1 成为 W3C 官方推荐标准。",
    "CSS-History-004": "CSS 的历史是怎样的？",
    "CSS-History-W3C": "W3C CSS 建议时间表",
    "CSS-Key-Features-016": "CSS 有哪些关键特性？",
    "CSS-Layouts-018": "Flexbox 和网格布局系统提供了强大的工具来创建响应灵敏且灵活的页面布局。",
    "CSS-MDN-Animations": "MDN CSS 动画指南",
    "CSS-MDN-Flexbox": "MDN Flexbox 指南",
    "CSS-MDN-Grid": "MDN CSS 网格指南",
    "CSS-MDN-Houdini": "MDN Houdini 简介",
    "CSS-Purpose-003": "它允许开发人员将内容与表示分离，定义布局、颜色和字体等样式，使网页在不同设备和屏幕上具有视觉吸引力并保持一致。",
    "CSS-Selectors-017": "选择器允许根据类型、类、ID、属性等定位特定的 HTML 元素。",
    "CSS-Tech-History-001": "什么是CSS？",
    "CSS-Usage-007": "如何在我的 Web 项目中使用 CSS？",
    "CSS-Usage-Basics-008": "要使用 CSS，您需要创建一个包含样式的单独文件（例如 style.css），然后使用 <head> 部分中的 <link> 元素将其链接到您的 HTML 文件。",
    "CSS-Usage-Inline-009": "或者，您可以使用“style”属性直接在 HTML 元素中包含内联样式，或在 <head> 部分内的 <style> 标记中嵌入 CSS。",
    "CSS-Vendor-Prefixes": "MDN 供应商前缀指南",
    "CSS-W3C-Selectors": "W3C 选择器 4 级规范",
    "CSS-WG-Future-Modules": "W3C CSS 当前工作",
    "CSSNano": "cssnano - GitHub",
    "CVUl0": "LafTools工具箱",
    "CfZAX": "已选择文件 {0}，我们正在将其上传到核心服务。",
    "CidOqAZ": "作为 LafTools的创建者，我很感动您愿意支持我们。我们的团队中有优秀的人才，他们努力不断改进 LafTools。",
    "Cide2w": "查看执行操作时是否存在任何问题。",
    "DIQFq": "请检查 URL 参数是否提供正确，您似乎没有填写此表单的权限。默认情况下，当服务刚刚启动时，您应该能够在服务的输出中看到以下消息。",
    "DIweGq": "保护您的 LafTools",
    "DSEtLTxUU": "时间是您生命的货币，明智地使用它。",
    "DTTPW": "重置状态",
    "DVoKw": "退出该系统",
    "DadYp": "实时延时处理",
    "Diff-XML-JSON-Article": "XML 和 JSON 之间的区别",
    "DqFI5": "级别必须大于 0",
    "DrXAq": "欢迎使用LafTools工具箱！",
    "DrbEr": "您提供的密码为空，请检查并重试。",
    "DtlAc": "加载系统资源",
    "Dxlw0": "完成",
    "E62ej": "过滤 Shell 命令",
    "E6F9B": "将其添加到工作流程中",
    "EEQkeW": "MD6（Message-Digest 6）算法是一种加密哈希函数。它使用 Merkle 树状结构，允许对很长的输入进行大量并行哈希计算。",
    "EO6Qv5dCA": "缩小 JSON 代码，减少 JSON 代码的包大小。",
    "ERK7E": "如果您在使用LafTools时遇到任何问题或有任何建议，请随时通过EMail或GitHub与我们联系，我们愿意紧急对其进行改进。",
    "EgBXL": "选择或提供标签。",
    "Ewvgo": "还没开始。",
    "ExqvX": "热键列表",
    "Eyq856": "我们还没有完成 - 我们致力于提供最新和最好的功能，并且我们将不断发布更新以确保您获得最佳体验。",
    "F-OUm": "LafTools快速设置",
    "F0CCF": "热键列表",
    "F4uS2": "新建文件",
    "FBVyc": "请重新输入验证码",
    "FDlRI": "命名这个新选项卡并单击以确认。",
    "FLsbFsOZq": "集成开发环境",
    "FOyHW": "到处搜索",
    "FQzhg": "忽略空输入",
    "FYRoL": "缩进和美化层叠样式表 (CSS) 代码。",
    "FhVWl": "加密您的密码",
    "FjYbR": "输出",
    "Fv-zz": "复制结果",
    "Fy217": "配置此工具",
    "Fzp3t": "请提供该字段的值",
    "G3MJN": "显示输出面板",
    "G9QVo": "管理选项卡",
    "GR7jK": "类型",
    "Ggob_": "取消",
    "H-Ae75": "请确认您的本地密码。",
    "H-qA75": "请提供本地密码。",
    "H8fQ4": "切换到浅色或深色模式",
    "HEAhr": "翻译后，结果将出现在此处。",
    "HIc3c": "完全的",
    "HNDat": "要进行更改，请单击“{0}”按钮。否则，请单击“{1}”以应用更改。祝您使用这个工具箱玩得愉快！",
    "HTMLMinifier": "HTMLMinifier - GitHub 上的",
    "HistOfProg-Wikipedia": "编程语言的历史 - 维基百科",
    "HjvV3": "我们不会删除它在磁盘上的文件，只是从列表中删除这条记录。",
    "HyIC_": "斜杠键 (/)",
    "HyIC_d": "斜杠键 (/)",
    "I8FLi": "现在，是时候设置您的管理员了，请设置尽可能复杂的密码，这样您就可以迷惑那些不礼貌的攻击者。",
    "IAC0A": "搜索工具",
    "ICefi": "已取消",
    "IKqqATS": "刷新当前页面数据",
    "IWUH5": "使用示例",
    "IaSyO": "取消",
    "IfsdGO": "收藏夹",
    "ImUmf": "新建",
    "IxAJswoSh": "解析并漂亮地打印有效的 JavaScript 代码。也适用于 JavaScript 对象表示法 (JSON)。",
    "J-3KA": "请提供此脚本的名称，这会更有帮助。",
    "J164i": "例如将文件复制到远程服务器",
    "J2xoL": "请查看错误：{0}",
    "JA_Bp": "请首先提供新标签的名称。",
    "JQEVK": "代码",
    "JQLmS": "调整了尺寸",
    "JQLmSq": "完全的。",
    "JS-Basics-001": "什么是 JavaScript？",
    "JS-DOM-API-007": "JavaScript 如何与 DOM 交互？",
    "JS-DOM-API-Explanation-008": "JavaScript 提供文档对象模型 (DOM) API 来操作 HTML 和 CSS，使开发人员能够动态更改内容、样式和事件侦听器。",
    "JS-DOM-Example-009": "例如，您可以选择一个元素并更改其文本内容：`document.getElementById('myElement').textContent = 'New Text';`",
    "JS-Data-Types-010": "JavaScript 中有哪些数据类型？",
    "JS-Data-Types-List-011": "JavaScript 支持各种数据类型，包括字符串、数字、布尔值、null、未定义和符号等原始数据类型，以及对象和数组等复杂类型。",
    "JS-Def-002": "JavaScript (JS) 是一种高级解释性编程语言，广泛用于创建 Web 应用程序、增强用户界面以及使用 Node.js 构建服务器端逻辑。",
    "JS-Event-Loop-013": "JavaScript 中的事件循环是什么？",
    "JS-Event-Loop-Explanation-014": "事件循环是 JavaScript 并发模型的核心部分，它允许通过回调、promise 和 async/await 进行异步执行。",
    "JS-Event-Loop-Process-015": "它首先运行主脚本，然后在相关事件（如用户输入或网络响应）发生时执行任何回调函数，并通过队列系统管理它们。",
    "JS-Function-Syntax-006": "函数是使用“function”关键字定义的，后跟函数名称和括在括号中的参数。函数体用大括号括起来： `functiongreet(name) { console.log(`Hello, ${name}!`); }`",
    "JS-Purpose-003": "它最初由 Netscape 的 Brendan Eich 于 1995 年开发，现已发展成为最流行的语言之一，受到所有主要 Web 浏览器和平台（如 Electron 和 React Native）的支持。",
    "JS-Syntax-004": "JavaScript 的基本语法是什么？",
    "JS-Type-Checking-012": "类型检查可以使用构造函数（`typeof value === 'string'`）或从内置构造函数继承的对象的`instanceof`运算符（例如，`value instanceof Array`）来完成。",
    "JSON-Advantages-011": "JSON 通常比 XML 更小且解析速度更快，因此非常适合带宽和速度至关重要的客户端-服务器通信。",
    "JSON-Basics-001": "什么是 JSON？",
    "JSON-Beautify-007": "什么是 JSON 美化？",
    "JSON-Beautify-Def-008": "JSON 美化是指将 JSON 数据格式化为更易于人类阅读的形式并具有适当的缩进和换行符的过程，使其更易于分析和调试。",
    "JSON-Beautify-Example-009": "之前： '{\\\"key\\\":\\\"value\\\",\\\"array\\\":[1,2,3]}'，之后： '{\\n \\\"key\\\": \\\"value\\\", \\n \\\"数组\\\": [\\n 1,\\n 2,\\n 3\\n ]\\n}'",
    "JSON-Def-002": "JSON（JavaScript 对象表示法）是一种轻量级、基于文本的数据交换格式，易于人类阅读和编写，也易于机器解析和生成。",
    "JSON-JavaScript-Support-020": "JavaScript 通过全局对象“JSON.parse()”和“JSON.stringify()”原生支持 JSON。任何有效的 JSON 也是有效的 JavaScript 文字对象或数组，它允许两种格式之间的无缝转换。",
    "JSON-JavaScript-Usage-021": "在 Web 开发中，JSON 通常用于 AJAX 请求、服务器端渲染和数据存储（例如本地存储或 IndexedDB）。",
    "JSON-Linting-022": "什么是 JSON linting？为什么它很重要？",
    "JSON-Linting-Benefit-024": "Linters 可以防止由于无效 JSON 导致的运行时错误，确保数据交换顺利并节省调试潜在问题的时间。",
    "JSON-Linting-Explanation-023": "JSON linting 是检查 JSON 文档是否符合 JSON 规范的过程。它有助于在尝试解析数据之前识别语法错误。",
    "JSON-Path-013": "什么是 JSON 路径？",
    "JSON-Path-Example-015": "$.store.book[0].title 选择 JSON 对象中第一本书的标题，该对象的商店包含 books 数组。",
    "JSON-Path-Explanation-014": "JSON Path 是一种类似于 XML 的 XPath 的查询语言，允许您使用类似路径的表示法从 JSON 文档中提取数据。",
    "JSON-Path-Guide": "JSONPath - JSON 的 XPath",
    "JSON-Purpose-003": "它主要用于在服务器和 Web 应用程序之间传输数据，作为 XML 的替代方案，并通过“JSON.parse()”和“JSON.stringify()”方法在 JavaScript 中提供本机支持。",
    "JSON-Scope-in-JavaScript-019": "JSON 如何适应 JavaScript？",
    "JSON-Security-025": "使用 JSON 时有哪些安全问题？",
    "JSON-Security-Impact-026": "潜在的安全风险包括 JSON 注入攻击，其中发送的恶意数据可能在解析/执行时导致意外行为。",
    "JSON-Security-Prevention-027": "为了减轻这些风险，请始终清理用户输入并使用安全解析 JSON 而不执行其内容的库（例如 JavaScript 的内置 JSON.parse()）。另外，避免使用 eval() 来解析 JSON。",
    "JSON-Serialization-016": "什么是 JSON 序列化和反序列化？",
    "JSON-Serialization-Def-017": "JSON 序列化是将 JavaScript 对象转换为 JSON 字符串的过程，而反序列化则相反，将 JSON 字符串转换回 JavaScript 对象。",
    "JSON-Serialization-W3Schools": "W3Schools 上的 JSON 序列化",
    "JSON-Syntax-004": "JSON 的基本语法是什么？",
    "JSON-Syntax-Example-f005": "JSON 对象由括在大括号 {0} 中的键值对组成。每个键必须是用双引号括起来的字符串，后跟冒号，然后是其值。",
    "JSON-Syntax-Reference": "JSON 上的 MDN Web 文档",
    "JSON-Value-Types-006": "值可以是字符串、数字、布尔值、数组（用方括号 [] 括起来）、其他对象或 null。",
    "JSON-vs-XML-010": "JSON 与 XML 相比如何？",
    "JSON-vs-XML-Article": "比较 JSON 和 XML",
    "JYqxz2": "欢迎使用 LafTools，这是内部版本。",
    "JdqiUE8": "此操作将 ASCII 字符串（带有您选择的字母表，包括预设）中的数据解码回其原始形式。",
    "JdqidUE8": "此操作将 ASCII 字符串（带有您选择的字母表，包括预设）中的数据解码回其原始形式。",
    "JiUE8": "此操作将数据从 ASCII {0} 字符串解码回其原始格式。",
    "K1qJZI": "阁下，欢迎使用 LafTools。",
    "KIc63": "尚不支持的功能",
    "KYh1N": "所有笔记",
    "KcqrRr": "参考",
    "KcrRr": "检索代码实施数据",
    "KmEUF": "提供当前系统工具的快速概述。",
    "Kw4OJr": "终端",
    "Kyd9H": "GitHub 上的源代码",
    "L-p-Y": "将当前shell命令的内容复制到剪贴板",
    "L3zEM": "使用示例",
    "L42mxa": "请在此字段中输入您的源文本。",
    "L49kCq": "请在此表格中提供并确认锁定密码，以保护您的 LafTools。",
    "L71q_N": "您提供的密码为空，请检查并重试。",
    "L9bQku": "解码{0}",
    "L9qbQku": "解码{0}",
    "LAc1m": "刷新了应用程序视图。",
    "LFdvM": "未登录",
    "LM715": "从本地服务器 API 检索 i18n 配置",
    "LNvUuKmHR": "应用程序缺少必要的依赖项或库。",
    "LPJrV": "复制结果",
    "LSohY6eZW": "十六进制字符串是由分隔符分隔的十六进制字节字符串，分隔符可以是空格、逗号、分号或冒号。",
    "LU9Jj": "Base85（也称为 Ascii85）是一种用于编码任意字节数据的表示法。它通常比 Base64 更有效。此操作从 ASCII 字符串（使用您选择的字母表，包括预设）解码数据。 Base85 常用于 Adob​​e 的 PostScript 和 PDF 文件格式。",
    "LWaeFqd": "切换到您的首选语言",
    "Le71_N-": "您输入的密码与确认的密码不一致，请检查后重试。",
    "LnJ4H": "请注意，本地帐户与我们网站上的注册用户完全不同，前者仅在您的电脑上定义，而后者可用于云同步。",
    "LqWaFd": "系统设置",
    "LxaEFHbfa": "缩小 SQL 代码，减少 SQL 代码包的大小。",
    "M3qytc": "编码{0}",
    "M3ytc": "编码{0}",
    "M4ywN1": "计算器、日历、时钟、天气等。",
    "M6MrW": "好的",
    "M7jct": "进入全屏模式",
    "MD2-Advantages-011": "使用MD2有什么优点？",
    "MD2-AlgorithmDetails-010": "MD2算法详细信息",
    "MD2-Applications-018": "哪些应用程序已经使用或仍在使用 MD2？",
    "MD2-Breakdown-016": "随着时间的推移，MD2 中的加密弱点被发现，现在建议所有需要安全散列的应用程序使用 SHA-256 和 SHA-3 等更强大的替代方案。",
    "MD2-CollisionSecurity-015": "MD2 被认为抵御现代加密攻击的能力较弱。按照今天的标准，它的哈希大小（128 位）很小，因此很容易受到碰撞攻击。",
    "MD2-Def-002": "MD2（消息摘要算法 2）是由 Ronald Rivest 于 1989 年设计的加密哈希函数。它为任何给定的输入消息生成 128 位哈希值。",
    "MD2-DigitalSignature-Risks-021": "使用 MD2 进行数字签名的风险",
    "MD2-Disadvantages-014": "MD2 有哪些缺点和安全问题？",
    "MD2-FAQ-001": "什么是MD2？",
    "MD2-HistoricalUse-020": "从历史上看，MD2 曾用于文件完整性检查和软件更新，尽管这些应用程序已在很大程度上转变为更安全的哈希函数，例如 SHA-256 和 SHA-512。）",
    "MD2-History-004": "MD2 是如何开发的以及它的历史是什么？",
    "MD2-Implementation-013": "它已在各种平台和语言上得到广泛实施和标准化，这意味着将 MD2 集成到现有系统中可以相对简单。",
    "MD2-InsecurityExamples-017": "MD2 安全故障示例",
    "MD2-Operation-007": "MD2操作是如何进行的？",
    "MD2-Origin-005": "MD2 最初是作为 MD1 的改进而创建的，解决了早期算法中发现的一些弱点。它在当时因其相对简单和速度而受到欢迎。",
    "MD2-PKI-019": "MD2 曾经在公钥基础设施 (PKI) 中用于数字签名，但由于其易受攻击而已被弃用。大多数系统不再信任使用 MD2 签名的证书。",
    "MD2-Process-008": "MD2 的工作原理是将输入消息填充为 16 字节的倍数，然后通过一系列异或运算、位循环和加法对其进行处理。最终输出是一个128位的哈希值。",
    "MD2-Purpose-003": "MD2的目的是通过生成可用于验证数据的原始性和真实性的唯一数字指纹来确保数据完整性。",
    "MD2-Rounds-009": "该算法采用四轮流程，对 128 位状态变量执行特定操作。每轮都会接收填充消息的块并更新状态，直到处理整个消息。",
    "MD2-Speed-012": "MD2 在当时被认为是快速的，并且在某些场景中仍然具有可接受的性能，这使其适合计算资源有限的环境。",
    "MD2-Successors-006": "然而，它已被 MD5 和 SHA-1 等更强大的算法所取代，它们属于同一哈希函数系列，但提供了改进的安全功能。",
    "MD4-Advantages-011": "使用MD4有什么优点？",
    "MD4-AlgorithmDetails-010": "MD4算法详细信息",
    "MD4-Applications-018": "哪些应用程序已经使用或仍在使用 MD4？",
    "MD4-Breakdown-016": "该算法的设计缺陷导致了实际的攻击，允许轻松的哈希冲突甚至部分原像攻击，使得 MD4 不适合当今的任何安全加密用例。",
    "MD4-CollisionSecurity-015": "MD4 有几个加密弱点，包括容易受到碰撞攻击。这意味着两个不同的输入可以产生相同的哈希输出，这对于需要抗冲突性或强消息完整性的应用程序来说是不安全的。",
    "MD4-Def-002": "MD4（消息摘要算法 4）是由 Ronald Rivest 于 1990 年设计的加密哈希函数。它为任何给定的输入消息生成 128 位哈希值。",
    "MD4-DigitalSignature-Risks-021": "使用 MD4 进行数字签名的风险",
    "MD4-Disadvantages-014": "MD4 有哪些缺点和安全问题？",
    "MD4-FAQ-001": "MD4是什么？",
    "MD4-HistoricalUse-019": "历史上，MD4 用于数字签名、文件完整性检查和软件更新。然而，由于其漏洞，这些应用程序在很大程度上已转向更安全的替代方案，例如 SHA-256 和 SHA-3。",
    "MD4-History-004": "MD4是如何发展起来的，它的历史意义是什么？",
    "MD4-Implementation-013": "它已在各种平台和语言上得到广泛实施和标准化，可以轻松集成到现有系统中，尽管这一优势被现代环境中的安全问题所抵消。",
    "MD4-InsecurityExamples-017": "MD4 安全故障示例",
    "MD4-LegacySystems-020": "MD4 可能仍然存在于遗留系统中，但在所有关注安全性的环境中不鼓励使用它。现代标准不再推荐 MD4 用于任何加密目的。",
    "MD4-Operation-007": "MD4操作是如何进行的？",
    "MD4-Origin-005": "MD4 是 MD2 和 MD3 的演变，旨在提供更快的性能，同时保持安全属性。然而，很明显 MD4 存在一些安全漏洞。",
    "MD4-Process-008": "MD4 通过将输入消息填充为 512 位的倍数并将其划分为 16 字块来处理输入消息。然后，该算法使用涉及按位运算、模加法和非线性函数的四轮处理对这些块进行操作。",
    "MD4-Purpose-003": "MD4的目的是通过生成固定大小的数字指纹来确保数据的完整性，该数字指纹可用于验证原始数据的真实性和完整性。",
    "MD4-Rounds-009": "处理完所有块后，所得内部状态将转换为最终的 128 位哈希值。",
    "MD4-Speed-012": "MD4 最初被设计为比其前身更快，这使得它在推出时在需要快速散列的应用程序中很受欢迎。",
    "MD4-Successors-006": "尽管存在缺陷，MD4 为后续的哈希函数（如 MD5 和 SHA-1）奠定了基础，MD5 和 SHA-1 改进了其设计，但随着时间的推移也继承了它的一些漏洞。",
    "MD5-Advantages-012": "使用MD5有什么优点？",
    "MD5-AlgorithmDetails-011": "MD5算法详情",
    "MD5-Alternatives-019": "MD5 安全散列的替代方案有哪些？",
    "MD5-Applications-024": "还有哪些其他应用程序使用或已经使用过 MD5？",
    "MD5-Breakdown-017": "随着时间的推移，MD5 中发现了一些加密弱点，研究人员也展示了产生冲突的实际例子，进一步损害了其完整性和安全性。",
    "MD5-Collision-016": "MD5 容易受到碰撞攻击，这意味着两个不同的输入可以产生相同的哈希输出。这使得数字签名或密码存储等应用程序不安全。",
    "MD5-CollisionExample-007": "MD5冲突示例",
    "MD5-DataIntegrity-026": "它还通常用于验证传输和存储过程中数据的完整性，例如使用 rsync 进行文件同步或对大型数据集进行校验和时。",
    "MD5-Def-002": "MD5（消息摘要算法 5）是一种广泛使用的加密哈希函数，它接受输入消息并生成固定大小的 128 位哈希值。",
    "MD5-DigitalSignature-Risks-027": "使用 MD5 进行数字签名的风险",
    "MD5-Disadvantages-015": "MD5 有哪些缺点和安全问题？",
    "MD5-FAQ-001": "MD5是什么？",
    "MD5-FileChecksum-005": "MD5通常用于在下载软件或大文件时验证文件完整性。它会生成一个校验和，可以与源提供的校验和进行比较，以确保下载的文件未被篡改。",
    "MD5-Future-028": "MD5 在今天仍然适用吗？",
    "MD5-InsecurityExamples-018": "MD5 安全故障示例",
    "MD5-Operation-008": "MD5运算是如何进行的？",
    "MD5-PKI-025": "MD5 已在公钥基础设施 (PKI) 中用于创建数字签名，但由于安全问题，它的使用在很大程度上已被弃用。大多数现代系统不再信任使用 MD5 签名的证书。",
    "MD5-PasswordHashing-006": "它历史上也用于密码散列，但现在由于其易受碰撞和易于破解而被认为是不安全的。现代系统已经转向更强大的替代方案，例如 bcrypt 或 Argon2。",
    "MD5-Process-009": "MD5 的工作原理是将输入消息分解为块，并将每个块传递给涉及逻辑函数、模算术和按位运算的多轮处理。结果被连接起来生成最终的 128 位哈希值。",
    "MD5-Purpose-003": "其目的是通过为任何给定数据生成唯一的数字指纹来确保数据完整性。即使原始数据中的单个位发生变化，MD5 哈希值也会完全不同。",
    "MD5-Relevance-029": "对于加密目的，MD5 不再被认为是安全的，特别是对于需要抗冲突性或强消息完整性的新应用程序。然而，它仍然可能出现在旧系统或非加密应用程序中，其中速度优先于安全性。",
    "MD5-Rounds-010": "该算法由四个主要阶段组成，这些阶段在 128 位内部状态上执行，并使用常量进行初始化。总共有 64 轮处理，每轮根据输入消息块转换内部状态。",
    "MD5-Speed-013": "MD5 相对较快，这使得它在需要快速散列的应用程序中很受欢迎。",
    "MD5-Standardization-014": "它已被广泛标准化并在各种编程语言和平台中实现，使其易于集成到现有系统和工具中。",
    "MD5-Summary-031": "综上所述，关于MD5我应该记住哪些要点？",
    "MD5-Summary-Point1-032": "MD5 是一种快速但不安全的加密哈希函数，容易受到碰撞攻击。",
    "MD5-Summary-Point2-033": "它的主要用途是确保数据完整性和某些加密操作，但它在很大程度上已被 SHA-256 和 BLAKE2 等更强大的替代方案所取代。",
    "MD5-Summary-Point3-034": "虽然您可能会在遗留系统或非安全敏感场景中遇到 MD5，但避免将其用于任何需要加密安全的新项目至关重要。",
    "MD5-Transition-030": "随着 SHA-256 和 BLAKE2 等更新、更安全的算法变得广泛使用并得到更好的理解，建议在所有关注安全的环境中放弃 MD5。",
    "MD5-Usage-004": "MD5在实际中是如何使用的？",
    "MD6-AlgorithmDetails-010": "MD6算法详细信息",
    "MD6-ComparisonSHA3-020": "MD6 与 SHA-3 (Keccak) 相比如何？",
    "MD6-Def-002": "MD6（消息摘要算法 6）是由 Ronald Rivest 于 2008 年设计的一种加密哈希函数。它是 MD 系列的演变，提供从 128 位到 512 位的可变输出大小。",
    "MD6-FAQ-001": "MD6是什么？",
    "MD6-FutureDevelopments-028": "MD6 未来是否有任何开发或改进计划？",
    "MD6-FutureUnknown-029": "截至目前，还没有任何有关正在进行的开发或改进 MD6 算法的计划的公开信息。密码学研究不断发展，可能会出现新的算法来解决新出现的威胁或要求。",
    "MD6-History-004": "MD6 是如何开发的以及它的诞生的原因是什么？",
    "MD6-Operation-007": "MD6运算是如何进行的？",
    "MD6-Origin-005": "MD6 的创建是为了应对当时广泛使用的 MD5 和 SHA-1 中发现的漏洞。它的目的是提供一种更安全的替代方案，并提高输出大小的灵活性。",
    "MD6-PKI-Alternatives-027": "对于 PKI 和数字签名应用程序，通常使用 RSA/SHA-256 或具有 SHA-2 或 SHA-3 变体的 ECDSA 等标准。这些都经过了广泛的分析，并在密码学界建立了信任。",
    "MD6-PKI-Considerations-026": "虽然 MD6 旨在提供比 MD5 等早期哈希函数更强的安全性，但由于其相对新颖且缺乏广泛的加密社区接受度，它尚未广泛应用于 PKI 或数字签名方案。",
    "MD6-Process-008": "MD6 通过一系列应用于树状结构的压缩函数来处理输入消息。该算法可以并行运行，这有助于提高其针对较大输入的性能。",
    "MD6-Purpose-003": "与之前的版本相比，MD6 旨在提供强大的安全功能和改进的性能，使其适用于需要防冲突散列和消息完整性检查的各种应用程序。",
    "MD6-Rounds-009": "MD6树中的每个节点都会经历多轮混合操作，包括模加法、按位异或和非线性排列。最终的根节点值表示输入消息的哈希摘要。",
    "MD6-SecurityUpgrade-006": "MD6 的设计建立在基于树的哈希概念之上，使其能够比以前的 MD 算法提供更好的原像和碰撞攻击保护，同时还为大型数据集提供更高的吞吐量。",
    "MD6-StayingCurrent-030": "在为任何应用程序选择哈希函数时，必须了解最新的研究成果和加密专家的建议，尤其是随着加密安全形势的不断发展。",
    "MD6-UseInPKI-025": "MD6 可以用于公钥基础设施 (PKI) 或数字签名吗？",
    "MD6-vs-SHA3-Adoption-023": "SHA-3 已被采纳为 NIST 官方标准，并因其强大的安全性和性能而得到广泛应用。 MD6 尽管理论上是安全的，但尚未达到同等水平的采用或标准化水平。",
    "MD6-vs-SHA3-DiffDesign-021": "MD6 和 SHA-3 的设计都考虑到了安全性，但它们采用了不同的哈希技术。 MD6 使用基于树的设计来提高并行性，而 SHA-3 基于海绵结构。",
    "MD6-vs-SHA3-Flexibility-022": "MD6 提供可变的输出长度，这对于需要自定义哈希大小的应用程序来说非常有利。 SHA-3 还支持可变输出长度，尽管其最常见的变体 SHAKE 通过任意长度输出提供了更大的灵活性。",
    "MDN-DOM-API": "MDN Web 文档 - 操作文档",
    "MDN-Event-Loop": "MDN 网络文档 - 事件循环",
    "MDN-JS-Guide": "MDN 网络文档 - JavaScript 指南",
    "MDN-JS-Types": "MDN Web 文档 - 数据类型和数据结构",
    "MDN-JSON-in-JavaScript": "MDN 网络文档 - 使用 JSON",
    "MDN-Minification": "MDN Web 文档 - 缩小",
    "MDN-XML-Syntax": "MDN 网络文档 - XML 语法",
    "MN2lT": "密码长度不能小于6",
    "Ma5mv": "切换工具栏选项卡的可见性",
    "Minify-Basics-001": "缩小代码或文件的含义是什么？",
    "Minify-CLI-Usage-009": "大多数这些工具都具有命令行界面 (CLI) 和 API，允许开发人员在开发和部署期间自动执行缩小过程。",
    "Minify-Def-002": "缩小是通过删除不必要的字符（例如空格、注释和换行符）来减小代码（HTML、CSS、JavaScript 等）大小而不影响其功能的过程。",
    "Minify-Example-007k": "例如，缩小后，{0} 可能会变成 {1}。",
    "Minify-How-Works-004": "代码精简是如何工作的？",
    "Minify-Process-005": "压缩器使用算法来分析源代码的结构，消除多余的元素，并尽可能缩短变量名称。这会导致文件大小更小，同时保持代码的原始行为。",
    "Minify-Purpose-003": "缩小的主要目的是通过减少服务器和客户端之间需要传输的数据量来提高网站性能并减少页面加载时间。",
    "Minify-Tools-007": "有哪些流行的压缩代码工具？",
    "Minify-Tools-List-008": "用于缩小代码的流行工具包括用于 JavaScript 的 UglifyJS、UglifyJS 的演变版 Terser、用于 HTML 的 HTMLMinifier 和用于 CSS 的 CSSNano。这些工具通常可以使用 Gulp 或 Webpack 等任务运行程序集成到构建过程中。",
    "Mq9pdpT": "列出您选择的功能菜单的所有相关资源。",
    "Mq9ppT": "快速查看您的服务状态",
    "Mqq9pdpT": "帮助您开始使用 LafTools。",
    "MrgmU": "确认",
    "MySQL-Performance-Tuning": "MySQL 性能调优技巧",
    "NMLOn": "复制文件路径",
    "NMLOn1": "打开工作区",
    "NNfJo": "从文件加载数据",
    "Nq1IR": "无法加载扩展虚拟机",
    "Nqc0LqwX": "如果您认为此过程中存在漏洞，请随时通过电子邮件或 GitHub 与我们联系，我们将紧急对其进行增强。",
    "NrQc8OJfZ": "压缩 JavaScript 对象表示法 (JSON) 代码。",
    "NvOqE3B9Vxd": "以下是您可以参考的可能解决方案",
    "O94Yx": "开启(on)",
    "OO0qPN": "示例已加载",
    "OQWm4": "报告错误",
    "OSHOI": "欢迎页面",
    "OSqZQM": "本地密码",
    "OWASP-JSON-Injection": "OWASP - JSON 注入",
    "OWASP-SQL-Injection": "OWASP SQL 注入指南",
    "OeO0PeN": "好的，示例已显示在输入编辑器中。",
    "OeOQY": "待办事项",
    "Ol1ZcWomT": "{0}格式化",
    "OpPFe": "如果您喜欢LafTools工具箱，请分享给您的朋友并给我们一个star，谢谢！",
    "Opcty": "文件",
    "OqqGx2qg": "正在加载静态资源，请稍候...",
    "OrCt5": "正在重定向到工作台...",
    "Ot6EP": "文笔润色工具",
    "P4ROa": "输出区域",
    "PM_N5": "会话 - {0}",
    "PUxuU": "正在检索语言包数据...",
    "PapkF": "如果您对LafTools有任何疑问或建议，请随时告诉我们。我们一直在寻找改进我们的产品并为用户提供最佳体验的方法。您可以通过 work7z@outlook.com 联系我们。感谢您使用 LafTools！",
    "PpCHA": "问号键(?)",
    "QL9Sn": "目前，似乎没有可用的描述。",
    "QLKzF": "它包含的功能可以满足新手和经验丰富的开发人员的需求，使其成为任何程序员的必备工具。",
    "QM2Ob": "最近使用的工具",
    "QM2Oq": "最近的笔记",
    "QRAdA": "英译汉",
    "QZK58Gemi": "压缩结构化查询语言 (SQL) 代码。",
    "QhdpH": "社区版",
    "QkJ-TOduip6z_": "LafTools IDE",
    "QzlA3": "发生错误",
    "R12bq": "列出未显示的选项卡",
    "RNBze0": "工具",
    "RNeBze0": "打开的选项卡",
    "RNewBze0": "工具配置",
    "RO4ZP": "发生错误",
    "RPVRl": "该扩展似乎与当前版本的 LafTools不兼容。请考虑安装最新版本以支持此扩展，或者随时通过在 GitHub 上提出问题来联系我们。",
    "R_S7_CLAo": "示例：要使用 Base32 编码“TEST12345”，您可以使用 Node.js 中的 base32-encode 等库，或其他语言中的内置函数（例如 Python 的 base64.b32encode）。",
    "RhqzcdD": "系统设置",
    "RjCO3": "工作区列表",
    "S4MMV": "哎呀！我们在加载文件时发现了一些问题。",
    "SAnnQ": "正在加载文件{0}",
    "SBsDz": "设置您的管理员帐户。",
    "SDLC-Wikipedia": "软件开发生命周期 - 维基百科",
    "SETxuObyB": "在 GitHub 上针对此错误提出问题，以便 LafTools团队进一步调查该问题。",
    "SGs7B": "快速设置您的 LafTools",
    "SHA-256-020": "SHA-256（安全哈希算法）是一种广泛使用的替代方案，提供比 MD5 更强的安全性。它生成更大的 256 位哈希值，是 SHA-2 系列的一部分。",
    "SHA-2_Info-022": "SHA-2 信息",
    "SHA3-NISTStandard-024": "SHA-3 标准化",
    "SMqD13": "键入进行过滤",
    "SPem9": "该字段尚未准备好。",
    "SQAw7": "源语言",
    "SQL-Basics-001": "什么是 SQL？",
    "SQL-Beautifier-Example": "在线 SQL 格式化程序",
    "SQL-Beautify-006": "什么是SQL美化？",
    "SQL-Beautify-Def-007": "SQL 美化是通过应用一致的缩进、间距和大小写约定来格式化 SQL 代码以提高可读性的过程。",
    "SQL-Beautify-Purpose-008": "就像通用代码美化器一样，它可以帮助开发人员更轻松地理解复杂查询并保持 SQL 脚本或项目的一致性。",
    "SQL-Commands-005": "SQL 包括多种类型的命令：DDL（数据定义语言 - CREATE、ALTER、DROP）、DML（数据操作语言 - SELECT、INSERT、UPDATE、DELETE）和 DCL（数据控制语言 - GRANT、REVOKE）。",
    "SQL-Components-004": "SQL的主要组成部分是什么？",
    "SQL-Components-Wikipedia": "维基百科上的 SQL 组件",
    "SQL-Def-002": "SQL（结构化查询语言）是一种用于管理和查询关系数据库的标准编程语言。",
    "SQL-Indexing-016": "SQL 中的索引是什么以及它们为何如此重要？",
    "SQL-Indexing-Benefit-018": "在 WHERE 子句条件的常用列上创建索引可显着加快 SELECT 查询的速度，但由于需要维护索引结构，可能会减慢 INSERT、UPDATE 和 DELETE 操作的速度。",
    "SQL-Indexing-Explanation-017": "索引是一种数据结构（例如 B 树），它允许数据库引擎根据特定列值快速定位行，从而提高表中数据检索操作的速度。",
    "SQL-Indexing-MDN": "有关索引的 MDN Web 文档",
    "SQL-Injection-019": "什么是 SQL 注入以及如何防止它？",
    "SQL-Injection-Def-020": "SQL 注入是一种安全漏洞，攻击者可以将恶意 SQL 代码插入输入字段以操纵数据库或从数据库中提取数据。",
    "SQL-Injection-Prevention-021": "预防方法包括使用参数化查询、预准备语句或自动转义用户输入的 ORM 库，以及限制数据库权限和应用最小权限原则。",
    "SQL-Joins-011": "SQL 中的 JOIN 是什么？",
    "SQL-Joins-Explanation-012": "JOIN 用于根据两个或多个表之间的相关列来组合两个或多个表中的行。例如，内连接、左连接、右连接和全连接。",
    "SQL-Joins-Tutorial": "SQL 连接教程",
    "SQL-Perf-Tuning-Methods-024": "其他技术包括对大型表进行分区、使用适当的数据类型以及在可行时缓存结果。",
    "SQL-Perf-Tuning-Overview-023": "优化 SQL 查询性能包括分析执行计划、适当索引、最小化不必要的联接和子查询以及编写高效的 WHERE 子句。",
    "SQL-Performance-Tuning-022": "如何优化 SQL 查询性能？",
    "SQL-Purpose-003": "它用于创建、读取、更新、删除和查询表中的数据以及管理数据库结构和权限。",
    "SQL-Select-009": "如何编写基本的 SELECT 语句？",
    "SQL-Select-Example-0210": "一个简单的 SELECT 语句从表中检索数据。例如：{0}', '从 my_table 中选择列 1, 列 2;",
    "SQL-Transactions-013": "SQL 中的事务是什么？",
    "SQL-Transactions-Def-014": "事务是包含一个或多个 SQL 语句的逻辑工作单元。它确保其中的所有操作都成功完成（原子性），与其他事务隔离，并且即使在系统故障的情况下也能持久。",
    "SQL-Transactions-Example-015": "要启动事务，请使用 START TRANSACTION 命令；使用 COMMIT 提交更改或使用 ROLLBACK 回滚到之前的状态。",
    "SQL-Transactions-W3Schools": "W3Schools 上的 SQL 事务",
    "SYSq1": "例子",
    "SZgXb": "设置本地密码",
    "SdGcT": "其他部分",
    "Sm9tq": "请在此提供帐户密码",
    "Sm9tqq": "请提供密码以解锁您的 LafTools",
    "Spcfdee": "浅色或深色模式",
    "TBPqy7": "语言",
    "TD7DA": "语言",
    "TIOBE-Index": "TIOBE 指数 - 软件质量公司",
    "TNoePE": "LafTools云",
    "Terser": "Terser-GitHub",
    "Ttrqqet": "在这里写下并保存您的想法！",
    "TwFcr": "目标语言",
    "TyqvWY3": "本地文件",
    "U2ZNl": "在维基百科上了解更多信息",
    "U4qqq9": "从列表中删除此选项卡",
    "U5Eiy7ZRZ": "如果该错误与敏感信息相关，请向LafTools工具箱团队 ({0}) 发送电子邮件以报告此错误。",
    "U7zP2": "请在此处提供帐户用户名",
    "UF_Dp": "发生错误：{0}，拒绝时间为 {1}",
    "UVvJp-vtF": "{0}压缩",
    "UZ2Ig": "新建本地帐户",
    "UglifyJS": "UglifyJS - GitHub",
    "Ugpng": "收藏",
    "V6U_f": "服务条款",
    "V6XEO": "输入用户名或电子邮件",
    "VAZq8r": "它允许开发人员在编辑器中执行各种命令，例如运行脚本、安装包和导航文件系统。",
    "VEfeqZG": "笔记",
    "VI6VT": "历史",
    "VOsZc": "报告问题",
    "VSZ": "点击重新触发",
    "VZtqg6": "创建新的脚本表单",
    "Vaf2y": "选项卡名称不能为空。",
    "VeY9K": "使用条款",
    "VgG5y": "单击此处刷新您的扩展程序的状态",
    "Vvt09V2Qo": "通用代码",
    "W3Schools-XML-Validation": "W3Schools - XML 验证",
    "WFUWzv_px": "解析并漂亮地打印有效的 JavaScript 代码。也适用于 JavaScript 对象表示法 (JSON)。",
    "WPrTW": "官方网站",
    "WXo6D": "已刷新",
    "WYCVL": "快速设置",
    "X4L_Z": "不提供扩展VM。",
    "X6Fq4j": "经过多年的专注开发和完善，我们相信 LafTools可以为您的工作流程带来更多便利和效率，从而显着增强您的编程体验。",
    "XKpI0": "单击以处理输入区域中的文本",
    "XLWoR": "选择您喜欢的一项并继续",
    "XML-Advantage-Readable-018": "其人类可读的特性允许轻松检查和调试，并且定义自定义结构的能力使其能够灵活地适应多种用例。",
    "XML-Advantage-Standardized-017": "XML 是一种广泛采用的标准，使其与各种平台和系统兼容，促进互操作性和数据交换。",
    "XML-Advantages-012": "XML 提供了更多的结构灵活性并支持命名空间，这有利于复杂的文档结构和跨系统的互操作性。",
    "XML-Advantages-016": "使用 XML 有哪些优点？",
    "XML-Attributes-006": "元素可以具有属性，这些属性提供有关开始标记内的元素的附加信息，例如 {0}",
    "XML-Basics-001": "什么是XML？",
    "XML-Def-002": "XML（可扩展标记语言）是一种标记语言，它定义了一组用于以人类可读和机器可读的格式对文档进行编码的规则。",
    "XML-Disadvantage-Size-020": "XML 可能相对冗长，与 JSON 等替代方案相比，会导致文件大小更大，从而影响传输速度和存储要求。",
    "XML-Disadvantages-019": "使用 XML 有哪些缺点？",
    "XML-JSON-Diff-Structure-014": "XML 使用详细的分层标签来构建结构，而 JSON 则依赖于键值对和数组。示例：XML {0} 与 JSON {1}。",
    "XML-JSON-Diff-Syntax-015": "XML 具有更严格的语法（包含结束标记和属性），而 JSON 的语法更轻，更接近 JavaScript 对象表示法。 JSON 通常被认为更容易在网络上解析和传输。",
    "XML-JSON-Difference-013": "XML 和 JSON 有什么区别？",
    "XML-Nesting-007": "XML 中的嵌套如何工作？",
    "XML-Nesting-Example-009": "例如，“<book><title>My Book Title</title><author>John Doe</author></book>”表示一本书，其标题和作者为嵌套元素。",
    "XML-Nesting-Explanation-008": "在 XML 中，元素可以相互嵌套以表示层次关系。子元素放置在其父元素的开始标签和结束标签之间。",
    "XML-Processing-Speed-021": "由于严格的语法和验证需要，解析和生成 XML 可能会比较慢，尤其是在处理复杂文档时。",
    "XML-Purpose-003": "它旨在承载数据，而不是像 HTML 那样显示数据，使其能够用作跨不同平台和应用程序共享结构化信息的通用格式。",
    "XML-Syntax-004": "XML 的基本语法是什么？",
    "XML-Syntax-Example-005": "简单的 XML 文档由树状结构中的元素组成。每个元素都以尖括号 (<element>) 中的标记开始，并以结束标记 (</element>) 结束。",
    "XML-Validation-010": "什么是 XML 验证？它是如何工作的？",
    "XML-Validation-Def-011": "XML 验证可确保 XML 文档遵守文档类型定义 (DTD) 或 XML 架构 (XSD) 中定义的一组特定规则。",
    "XML-Validation-Process-012": "验证器检查是否存在所有必需的元素和属性，验证数据类型，并在处理文档之前强制执行架构中指定的任何约束。",
    "XQxJB": "我的工作区",
    "X_HGx": "LafTools是一个多功能工具箱，旨在满足各种需求。它是完全开源的，确保透明度和安全性。尽管运行时轻量级，但它提供完整的平台支持，包括 ARMv8 和类似于 ChatGPT 的本机 AI 支持。 LafTools与高效的 UI 高度集成，并不断更新新工具。它可以通过网络并与 Docker 一起使用，并提供附加资源，例如注释和手册。",
    "XeXF77": "设置",
    "XikdD": "请稍等片刻，我们就快到了！",
    "Y5GAC": "您的用户名",
    "Y9mQ2": "请在此处提供帐户用户名",
    "YAAU3q": "本地密码",
    "YHCjT": "LafTools支持全局浅色和深色主题，它对于夜班编码员特别有用。",
    "YNwKz": "不支持的语言：{0}，默认使用英语。",
    "YOYTp": "快速设置",
    "YPPPL": "切换工具栏选项卡的可见性",
    "YQN9u": "加载 {0} 时发生错误，请检查以下详细信息。",
    "Y__Zb1_4Q": "缩小级联样式表 (CSS) 代码，删除所有不必要的字符。",
    "Y_k0z": "忘记密码？",
    "Ye3TXses": "配置当输入文本改变时是否自动执行转换。",
    "Ylq2X": "纠错",
    "YquQqTXq": "自动运行？",
    "YrTdq": "全部",
    "YrVq683": "邮件",
    "YrVqdd683": "手册",
    "Z2QTU": "关于",
    "Z3rhY": "信息",
    "Z7ALO": "切换到选定的工作区",
    "Z7OTt": "您选择的文件太大，请选择小于 30MB 的文件。",
    "ZAGva": "您确定要删除该工作区吗？",
    "ZAKaFq": "我的云账户",
    "ZXRGC": "请查看错误：{0}",
    "ZbD3F": "{0}，由LafTools工具箱团队倾力打造",
    "Zk7JI": "尚不支持",
    "ZrbduC": "关闭所有选项卡",
    "ZrbuC": "关闭选项卡",
    "_-JigU2Fg": "意外的输入或数据格式导致了异常。",
    "_5OqeG": "取消标记",
    "_LFF3": "如果您在使用LafTools时遇到任何问题或有任何建议，请随时通过EMail或GitHub与我们联系，我们愿意对其进行改进。",
    "_trez": "交换文本",
    "_trqL": "正在检索系统资源数据...",
    "_z3lR": "刷新代码",
    "a3yqoz": "波斯语",
    "a3z-3k12": "IP地址工具",
    "a4r9t": "Base45 是否可以解码任何 Base45 编码的字符串，无论其来源如何？",
    "a4s6x": "Base32 是如何工作的？",
    "a8b7z": "因此，仅当编码的最后一组位不能被 40 位整除时才需要填充（因为 8 个 Base32 字符代表 40 位）。填充将由编码字符串末尾的零到六个“=”字符组成。",
    "aCkOP": "退出",
    "aHAfR": "正在获取 {0} 的数据...",
    "aSOpr": "数据模型生成器",
    "ab9c0d1e": "主要操作包括编码（将二进制转换为 Base64）和解码（将 Base64 转换回二进制）。",
    "abc12345": "Base64 是一种将二进制数据表示为 ASCII 字符序列的编码方案。",
    "abcdef12": "Base64 是如何工作的？",
    "about_LafTools_toolbox": "关于LafTools",
    "adpgq": "创建新工作区",
    "ah-C4": "新笔记",
    "aked6": "参考",
    "aked61": "介绍",
    "asElV": "移除",
    "az4uS2": "您确定退出该系统吗？请注意，您将被重定向到登录页面。",
    "azpNX": "完全的。",
    "b6sx9b": "菲律宾人",
    "b8g2k": "Base32的使用场景",
    "bP_6qG": "忘记密码的提示",
    "bT4R6": "新标签",
    "bVlBN": "汉译英",
    "bcdef01a": "Base64 的工作原理是将二进制数据分为 6 位组，并将每个组映射到 64 个字符的字母表 (A-Za-z0-9+/) 中的特定字符。",
    "bhojei1": "繁体中文",
    "bjZyW": "翻译",
    "bors14": "土耳其",
    "bp_-b": "要完全管理 LafTools，您需要在设置流程开始时设置管理员。我们已通过 URL 参数令牌验证了您的身份，请放心，除非获得设置令牌，否则没有其他人可以设置您的 root 权限。",
    "bqqrij": "斯瓦希里语",
    "bsWpBA73s": "压缩 JavaScript 代码。",
    "c0eCw": "将您的文本翻译成您想要的任何语言。",
    "c0v2p": "Base32的常见操作",
    "c1p3b": "集成后，将提供的模板复制到您的 C++ 程序中，并在运行程序之前将占位符替换为实际编码值。",
    "c1p4b": "然后，每个十进制数都会转换为由五个 Base85 字符组成的唯一序列。如果末尾剩余的字节少于四个字节，则可能会应用填充。",
    "c2tpr": "Apache Commons Codec 库在 Java 中提供 Base32 编码和解码功能。",
    "c2vw9k": "虽然 Base45 的实现不如 Base64 或 Base32 广泛，但存在多种语言的开源库。",
    "c5m1b": "另一种变体 Base58Flickr 的字符集略有不同。它将“+”替换为“,”，将“/”替换为“-”，以适应 Flickr 的 URL 需求。",
    "c5meku": "巽他语",
    "c5p1b": "不使用填充；编码输出的长度直接取决于输入数据的大小。",
    "c6p4n": "在提供的模板中，将解码部分中的占位符替换为实际的 Base85 编码字节（前缀为“b”），然后执行脚本。",
    "c6p9b": "如果输入数据的长度不能被8整除，则不使用填充；相反，每个非完整组都被独立处理。",
    "c7Uoqqe": "在使用LafTools工具箱之前，请提供并确认您的本地密码，如下所示。",
    "c8me6b": "自定义类似 Base62 的方案可能是针对特定应用程序定制的，但它们通常遵循使用比 Base64 或 Base32 更大的字符集的相同原则。",
    "c9j5k": "下载“base32.h”标头及其相应的实现并将其包含在您的项目中。",
    "c9j5v": "通过将“composer require christian-riesen/base32”添加到您的项目中，通过 Composer 安装它。",
    "c9q7w": "为什么要创建 Base45？",
    "cMBqyyFae": "缩进和美化结构化查询语言 (SQL) 代码。",
    "cNQp_": "资源",
    "cOYuMrncv": "未知 翻译失败",
    "cPS6q": "所有工具",
    "cQqwI8r": "加载终端服务的状态",
    "cU0YAMbxU": "在侧边栏中显示文本",
    "cbaq54321": "不，Base64 不是一种压缩技术，它仅更改数据的表示形式，而不更改其大小。",
    "cdefg234": "最后添加填充字符（=）以保证编码数据长度为4个字符的倍数。",
    "cfYYN": "发现更多",
    "ciZV2": "Base32 是一种使用一组受限符号对任意字节数据进行编码的表示法，这些符号可以方便地被人类使用并由计算机处理。它使用比 Base64 更小的字符集，通常是大写字母和数字 2 到 7。",
    "ciZV21": "Base45 是一种使用一组受限符号对任意字节数据进行编码的表示法，这些符号可以方便地被人类使用并由计算机处理。高基数会导致比十进制或十六进制系统更短的字符串。 Base45 针对 QR 码的使用进行了优化。",
    "ciZV2deq1": "Base58（类似于 Base64）是一种用于编码任意字节数据的表示法。它与 Base64 的不同之处在于删除了容易误读的字符（即 l、I、0 和 O）以提高人类可读性。 Base58 常用于加密货币（比特币、瑞波币等）。",
    "cj1pd": "刷新操作",
    "cjzqj9": "波斯尼亚语",
    "cmxzpg": "马拉雅拉姆语",
    "coM2I": "使用智能编辑器",
    "crD7I": "配置转换是否应忽略长度为零的空输入文本。",
    "cuRCqb": "类别不存在",
    "cxqhqa": "缅甸（缅语）",
    "d-l2l": "确认",
    "d-qPr": "未知布局：{0}",
    "d1x7v": "另一个例子是在 Git 中，散列对象有时以 Base32 格式存储，以避免行结尾和文件名限制问题。此外，HashiCorp Vault 使用 Base32 进行密钥派生。",
    "d2w4e": "与其他基数转换系统类似，Base62 的工作原理是将输入字节转换为大整数，然后将其表示为 62 字符集中的字符组合。",
    "d2w6e": "下载源代码并将 base62.h 头文件包含在您的项目中。根据项目的说明编译/链接源文件。",
    "d3w2e": "Base58 的工作原理是将输入字节转换为大整数，然后将该整数表示为 58 个字符集（A-Z、a-z、1-9）中的字符组合。",
    "d5KZH": "感谢您使用 LafTools！",
    "d5LAU": "基于AGPLv3许可",
    "d5fmq2": "意大利语",
    "d5hit": "会话 - {0}",
    "d6g0w": "此代码片段可以在任何 Python 环境中执行，包括脚本、交互式会话或更大的应用程序。",
    "d6y9k": "如果没有足够的字节来填充最后一组，则不使用填充；相反，剩余的位将被处理并映射到其相应的字符。",
    "d7w2e": "Base85 的工作原理是将输入数据分为四个字节的组，并将每个组转换为 0 到 2^32-1 之间的十进制数。",
    "d8w1b": "不需要额外安装，因为它是标准库的一部分。确保您的 Python 版本足够新以包含此功能。",
    "d9w7m": "此外，由于它仅使用大写字母，因此它无法像 Base64 有时在解码期间使用大小写折叠那样利用所有可能的区分大小写组合作为附加安全措施。",
    "dCFIC": "代码格式化",
    "dCFIwC": "代码生成器",
    "dGKMx": "输出",
    "dGVUB": "网络工具",
    "dQwjNbi0y": "了解有关文档的更多信息",
    "dV5Eq": "刷新工作区列表",
    "dWbBm": "C# 包含“System.Convert”类，该类具有内置方法 ToBase64String 和 FromBase64String，允许您对 Base64 数据进行编码和解码。输入字符串首先使用 UTF-8 编码转换为字节数组，然后进行相应的编码和解码。",
    "dk122q": "管理您的工作流程以将多个工具组合在一起。",
    "dkarh": "好的，工具箱打开了目录。如果没有弹出窗口，请检查您的平台是否支持此功能，或者该目录是否在服务器中。",
    "dkjk12": "这是测试",
    "dkkq12": "在此选项卡中配置您的工具。",
    "dl4kr": "忘记密码？",
    "dpRY4": "词典",
    "dqTqyvWY": "抽屉式菜单",
    "dsdpA_eJ": "适应宽高",
    "dtjdt4": "哈萨克语",
    "dxLQq": "根权限",
    "dzjTo": "请在此提供帐户密码",
    "e--gB": "未提供扩展 ID。",
    "e3WgQaZlb": "压缩{0}",
    "e4Cd8t": "Base85",
    "e5c7r": "Base32 是一种二进制到文本的编码方案，使用 32 个字符的子集表示 ASCII 字符串中的数据。它被设计为人类可读且 URL 安全。",
    "e5rycw": "吉尔吉斯斯坦",
    "e8Crq": "请填写下面的用户名和密码字段以继续。",
    "e8x2v": "Base45 的工作原理是将输入数据分为每组 5 个字节的组。然后，它将每个组转换为十进制数，并将其映射到 45 个字符集中的相应字符。",
    "eN4fM": "在 Rust 中，您可以使用“base64”包进行 Base64 编码和解码。将 'base64 = \\\"1.x\\\"' 添加到 [依赖项] 部分下的 Cargo.toml 文件中，运行 'cargo build'，并在代码中包含必要的导入以利用这些函数。",
    "eTmq": "CodeGen工具箱 的历史",
    "e_8pZ": "为开发人员提高生产力的多功能工具箱。",
    "efg45678": "与Base32的比较",
    "efghi678": "此变体通常用于文件名、URL 或必须避免特殊字符的情况。",
    "egkqC8t": "Base58",
    "egkqCd8t": "Base62",
    "eifoni": "加泰罗尼亚语",
    "eqkqd4W": "请提供新标签的名称",
    "etV-l": "将文件复制到 SIT2",
    "eu5mh0": "白俄罗斯语",
    "euaI8": "创建新的本地帐户",
    "euhy9v": "爱沙尼亚语",
    "f0q4w": "一种流行的使用场景是为双因素身份验证 (2FA) 生成密钥，其中 Google Authenticator 和 Yubikey 等服务使用 Base32 编码的密钥。",
    "f1t2z": "Base62 的开发目的是为 Base64 提供更短、URL 安全的替代方案，特别是对于唯一标识符和短 URL。",
    "f3ttw8": "毛利人",
    "f4t7z": "Base58 最初是为比特币开发的，用于明确表示公共地址和私钥。",
    "f5a0s": "此外，Base32 会产生更长的输出，但由于缺少可能与文件系统规则冲突的特殊字符，因此更适合特定应用程序（例如文件名）。",
    "f5bLC": "使用文档",
    "f7t1z": "手动或通过 Swift Package Manager (SPM) 等包管理器将库添加到您的 Xcode 项目中。",
    "f8n4m": "其紧凑性允许更有效地利用 QR 码空间，同时保持标准条形码扫描仪的可读性。",
    "f8wne": "通过在包管理器控制台中运行“Install-Package BouncyCastle”或将其添加到 .csproj 文件中来包含该包。",
    "f9t1z": "Base85 最初开发的目的是为了有效地表示 PostScript 文档中的二进制数据，以获得更好的压缩率。",
    "f9t2z": "通过在您的 Maven 项目中添加“<dependency> <groupId>commons-codec</groupId> <artifactId>commons-codec</artifactId> <version>...</version> </dependency>”，将依赖项添加到您的 Maven 项目中。具有最新版本号的 pom.xml 文件。",
    "fBP5h": "用户名",
    "fEr5j": "创建新脚本",
    "fTt2N": "Perl 需要“MIME::Base64”模块来进行 Base64 编码和解码。如果尚未安装，请运行“cpan install MIME::Base64”来安装它。",
    "fV_1P": "登入",
    "fdxluz": "罗马尼亚语",
    "ff02c": "已取消",
    "fghi6789": "它用于传输或存储基于文本格式的二进制文件，确保跨各种系统的兼容性。",
    "fgj880": "泰卢固语",
    "fqV_1P": "解锁您的 LafTools",
    "g1h5n": "Base45 是如何工作的？",
    "g2_aX": "将加密的密码复制到文件中",
    "g3h5s": "Base85 是如何工作的？",
    "g4h7s": "对于 C++，您可以使用提供 Base62 功能的“cpp-base62”库。",
    "g5SK9": "最近打开",
    "g5ybh": "将依赖项添加到您的项目中（Maven：'org.apache.commons：commons-codec'）。",
    "g6f0r": "Ruby 的核心库不需要额外安装。只需将“TEST12345”替换为您想要的值即可。",
    "g6f0t": "运行“go get github.com/mitchellh/go-base32”将依赖项添加到您的项目中。",
    "g6v3b": "然而，Base45 较大的字符集可能会增加处理非字母数字字符时出错的可能性，这在某些环境或传输通道中可能会成为问题。",
    "g7h5k": "Base58 是如何工作的？",
    "g8h7s": "Base62 是如何工作的？",
    "g8r3e": "Base32的主要缺点是空间效率相对较差；它比 Base64 将输入数据扩展了大约 25%。这意味着相同数量的编码数据会占用更多的存储或带宽。",
    "gDjbs": "历史数据",
    "gK3dNQ": "复制",
    "gQhfS": "文件工具",
    "gT6re": "C++ 没有本机 Base64 实现。本示例使用OpenSSL库来执行Base64编码和解码。要使用 OpenSSL，请将其安装在您的系统上，并在编译程序时链接相应的库。",
    "gU1O2": "已触发",
    "generic-NI-UFPTe0": "美化通用代码",
    "generic-code-beautify.desc.2b3c": "此操作格式化各种编程语言的代码，通过应用一致的缩进、换行符和遵守特定于语言的样式指南来提高可读性。",
    "gkC8t": "Base64",
    "gkdqqC8t": "Base45",
    "gkqC8t": "Base32",
    "gms7_9n5v": "将十六进制字节字符串转换回其原始值。",
    "gnKMZ": "已刷新。",
    "h4e1b": "对于区分大小写的字母数字字符串比十六进制或 base64 更容易处理的情况也很有用，因为十六进制或 base64 可能包含非字母数字字符，这些字符可能会在某些上下文（例如 URL 或文件名）中导致问题。",
    "h6AeI": "Websocket 连接于 {0} 关闭",
    "h7rUq": "在 Node.js 中，内置的 Buffer 类可以处理 Base64 编码和解码，而不需要任何外部库。此代码片段将字符串“TEST12345”编码为 Base64，然后将其解码回原始字符串。",
    "h9j3m": "Base32 中的填充",
    "hAH_IjzGN": "这是内部版本，这部分仍在开发中。",
    "hGA96yTG4": "该平台不支持某些功能。",
    "hJUMN": "目标语言",
    "hMvh1": "备份数据库",
    "hRFxV": "欲了解更多信息，请访问我们的网站",
    "hX1CWGAhl": "缩进和美化可扩展标记语言 (XML) 代码。",
    "hcnt1k": "马其顿语",
    "hhOT3": "按名称搜索",
    "hij90klm": "Base32 使用较小的字母表 (A-Z2-7)，从而产生更长但更易读的字符串。",
    "htTmvWjsS": "压缩层叠样式表 (CSS) 代码。",
    "htt1d2": "世界语",
    "hu-iz": "定时器",
    "huE6U": "多变的",
    "hyV-d": "完毕",
    "hyirc0": "瑞典",
    "i27qmr": "弗里斯兰语",
    "i6hMN": "图片验证码",
    "i7w2m": "流行的编程语言有内置的 Base45 库吗？",
    "i88tb": "将结果导出到文件",
    "i8q8tb": "配置输入工作流程",
    "i9o7k": "Base32 相对于 Base64 的优势",
    "iNQvo": "首先展示一个示例。",
    "iNqF1T": "管理云账户",
    "iOEjZ": "无可用代码",
    "iQL2c": "我们仍在探索此按钮的全部功能 - 如果您对我们如何改进它有任何反馈或建议，请告诉我们！",
    "i_lang_": "语言包",
    "iknTS": "密码管理器",
    "init_env": "加载系统资源",
    "ip2g1": "已复制",
    "ipOSQE": "专业版",
    "it8ths": "印度尼西亚",
    "ixyP0": "自动处理实时动作",
    "j1b5k": "涉及 Base32 的最常见操作包括将二进制数据编码为 Base32 字符串以及将 Base32 字符串解码回其原始二进制格式。",
    "j4s6r": "如何在 JavaScript 中使用 Base62 进行编码/解码？",
    "j5s7r": "如何在 JavaScript 中使用 Base85 进行编码/解码？",
    "j6s3r": "如何在 JavaScript 中使用 Base58 进行编码/解码？",
    "j7k2t": "要使用 Base45 编码数据，您需要一个实现 Base45 算法的库或函数。",
    "j8s6r": "对于 Kotlin，您可以使用包含 Base45 功能的“barcode-core”库。",
    "j9s5r": "对于 C#，使用“WarrenStranger.Base62”库来处理 Base62 编码和解码。",
    "jJuNz": "源语言",
    "jO5eP": "好的",
    "jPNCb": "重试了。",
    "jQXdi": "日间模式",
    "jR1zX": "AI实验室",
    "jRzgS": "Swift 的 Foundation 框架包含用于 Base64 编码和解码的内置方法。不需要外部库；只需导入“Foundation”即可使用这些功能。",
    "jZvLJ": "PHP 带有内置函数“base64_encode()”和“base64_decode()”用于处理 Base64 操作。这些功能随时可用，无需额外设置或安装。",
    "jaj7M": "版权所有",
    "jb392": "名称",
    "jfpqt": "笔记导航器",
    "jgDoEq": "没有常见问题解答数据",
    "jhDoE": "检索常见问题解答数据",
    "jlxvpk": "韩语",
    "json-beautify.desc.0912": "此操作通过添加适当的缩进、换行符和一致的排序键来格式化 JSON 数据以提高可读性。",
    "json-beautify.name.0912": "格式化 SQL",
    "json-beautify.text.93kq": "美化 JSON 数据",
    "k17PG": "Websocket 连接已关闭。",
    "k1m4e": "但是，它无法提供与 Base64 或 Base32 完全相同的空间效率，因为它在字母表中使用较少的字符。",
    "k2SVY": "关闭(off)",
    "k2em5e": "这会导致相同数量的输入数据的输出字符串更短，这在最小化大小至关重要的场景中非常有用。",
    "k2ku5p": "捷克语",
    "k3m2e": "将提供的模板复制到新的 Go 文件中，将占位符替换为实际编码值，然后使用“go run yourfile.go”运行该文件",
    "k41a5": "LafTools工具箱",
    "k4s5rx": "斯洛文尼亚语",
    "k7d9f": "Ruby 的内置“base32”库提供了 Base32 编码和解码的方法。",
    "k7d9r": "'go-base32' 包提供了 Go 中的 Base32 编码和解码功能。",
    "k7g0n": "在 Base32 中，输入数据的每 5 位都映射到“ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=”集合中的 32 个字符之一。",
    "k9em5e": "这使得它非常适合需要简洁、URL 友好的标识符而不牺牲可读性的场景。",
    "k9jtr": "“base32-encoding”npm 包用于 Node.js 中的 Base32 编码和解码。",
    "kLH79": "电子邮件",
    "kOi5A": "打印页面",
    "kPD22": "词典",
    "kPJ-A4": "刷新",
    "kZd9G": "Ruby 有一个内置的“base64”库，它提供了 Base64 编码和解码的方法。在脚本中包含带有“require \\”base64\\”的库。",
    "kcHxr": "请在此处提供管理员帐户用户名",
    "kjks1": "从本地服务器 API 检索 i18n 配置",
    "kqv5ht": "意第绪语",
    "krxSK": "AI智能助手",
    "ks12d": "网络安全",
    "kv4wag": "荷兰语",
    "l1p9z": "什么是 Base32？",
    "l3akoa": "阿姆哈拉语",
    "l6Djb": "选择以下选项之一作为您的首选主题：",
    "lIn3_": "管理员用户名",
    "lQFII": "重新触发初始化",
    "lRHDQ": "退出全屏模式",
    "lUh5c": "生成工具",
    "lkuulh": "法语",
    "lp0qmd0": "将此功能加入收藏夹",
    "lpKAz": "设置",
    "lpzg83": "萨摩亚人",
    "lzGS2": "扩展详细信息",
    "m0106": "转换工具",
    "m0107": "生成工具",
    "m0108": "格式化工具",
    "m6d8b": "每个 5 位值都由单个字符表示，从而可以为喜欢使用八位字节（8 位单元）的系统进行高效编码和解码。",
    "m6t1b": "Daniel R. Collins 的“base32”库提供了 C++ 中的 Base32 编码和解码功能。",
    "m7WZw": "系统 Websocket 损坏",
    "m8rTc1": "一旦实现了 shell 脚本管理器，您就可以使用它来管理您的 shell 命令。",
    "m9k1z": "但是，如果正在解码的数据包含特定的应用语义（例如特定的 QR 码格式），则解码后可能需要进行额外的处理。",
    "mBgF1": "鼠标操作",
    "mSFei": "GitHub 上的源代码",
    "mWXeh": "工作区 ID：{0}",
    "mabHq": "查找旧文件",
    "mbzCv": "发生错误：{0}，拒绝时间为 {1}",
    "md2.desc.1039": "此操作将数据散列到 {0} 散列中。",
    "md2.text.192d3": "生成 {0} 哈希值",
    "md2aO2NaJITm": "缩进和美化层叠样式表 (CSS) 代码，使其更易于阅读和理解。",
    "md4.desc.1039": "此操作将数据散列到 {0} 散列中。",
    "md4.text.192d3": "生成 {0} 哈希值",
    "md5-cpp-install-openssl-0002": "在您的系统上安装 OpenSSL，并在构建 C++ 应用程序时链接“libssl”和“libcrypto”库。",
    "md5-cpp-openssl-0001": "C++ 使用 OpenSSL 库生成 MD5 哈希值。您需要安装 OpenSSL 并在项目中链接它。",
    "md5-cpp-use-openssl-0003": "该代码片段创建一个函数“getMD5”，该函数接受输入字符串，使用 OpenSSL 的 MD5 API 计算其 MD5 哈希值，并将哈希值作为十六进制字符串返回。将此代码粘贴到您的 C++ 程序中，并使用所需的输入调用“getMD5”函数。",
    "md5-csharp-built-in-0001": "在 C# 中，“System.Security.Cryptography.MD5”类用于生成 MD5 哈希值。",
    "md5-csharp-no-install-0002": "不需要安装外部库，因为它是 .NET Framework/Core 的一部分。",
    "md5-csharp-use-0003": "此代码片段创建一个 MD5 实例，将输入字符串转换为字节，计算哈希值，最后以 Base64 格式对哈希值进行编码。将此代码放入 C# 应用程序的入口点并运行它以获取 Base64 编码的 MD5 哈希值。",
    "md5-java-built-in-0001": "Java 使用“java.security.MessageDigest”类来生成 MD5 哈希值。",
    "md5-java-imports-0002": "您需要导入“java.security.MessageDigest”和“java.util.Base64”以对结果进行哈希和编码。",
    "md5-java-use-0003": "该代码片段获取 MD5 摘要算法的实例，使用输入字符串的字节更新它，然后将生成的哈希值编码为 Base64 字符串。将此代码复制到 Java 类中并执行其 main 方法以获取 Base64 编码的 MD5 哈希值。",
    "md5-nodejs-built-in-0001": "在 Node.js 中，内置的“crypto”模块用于生成 MD5 哈希值。",
    "md5-nodejs-no-install-0002": "无需安装外部库，因为“crypto”已随 Node.js 预装。",
    "md5-nodejs-use-0003": "该代码片段使用 createHash('md5') 创建一个哈希对象，使用输入字符串更新它，然后通过 .digest('hex') 将摘要转换为十六进制格式。将此代码粘贴到 Node.js 脚本中并执行它以获取输入值的 MD5 哈希值。",
    "md5-php-built-in-0001": "PHP 有一个内置函数“md5()”用于生成 MD5 哈希值。",
    "md5-php-no-install-0002": "无需安装外部库，因为 PHP 中已预安装“md5()”。",
    "md5-php-use-0003": "这个简单的示例定义了一个“getMD5”函数，该函数对提供的输入字符串调用 PHP“md5()”函数。将此代码复制到 PHP 文件中，使用 .php 扩展名保存，然后在 Web 服务器中或通过命令行运行它以查看输入值的 MD5 哈希值。",
    "md5-python-built-in-0001": "Python 使用内置的“hashlib”库来生成 MD5 哈希值。",
    "md5-python-no-install-0002": "无需额外安装，因为“hashlib”是 Python 的标准配置。",
    "md5-python-use-0003": "提供的模板在创建 MD5 哈希对象之前将输入字符串编码为字节。然后对哈希对象调用“.hexdigest()”方法以检索十六进制形式的 MD5 哈希值。将此代码复制到 Python 脚本中并运行它以获取 MD5 哈希值。",
    "md5.desc.rxsHq": "此操作将数据散列到 {0} 散列中。",
    "md5.textiDjMIo": "生成 {0} 哈希值",
    "md6.desc.1039": "此操作将数据散列到 {0} 散列中。",
    "md6.text.192d3": "生成 {0} 哈希值",
    "meeMC1Uk7.text.93kq": "压缩{0}",
    "mihc3": "完成本次操作",
    "mjHoR": "另外，从技术上讲，没有人可以读取此令牌，否则他/她已经攻击并控制了您的计算机。",
    "mnb19i": "德语",
    "mno34567": "Base64的优点",
    "mnoijklm": "还有其他 BaseXX 编码吗？",
    "mslw4o": "希腊语",
    "mwn7iv": "祖鲁语",
    "myxedr": "蒙",
    "n0pqrstu": "Base64 的使用示例",
    "n1jA9": "确认",
    "n3e7r": "Base32 的历史",
    "n98EW": "交换输入区域和输出区域的文本。",
    "nSeIq8-": "最重要的是，它是免费且开源的。您可以将其用于个人或商业目的。",
    "nTvw4": "为了保护并单独保存您的数据和设置，您可以使用您的本地帐户来实现这一目的。此外，LafTools将来还将支持用户之间的即时消息小部件。",
    "nmb1wx": "约鲁巴语",
    "nodBw": "此操作将原始数据编码为 ASCII {0} 字符串。",
    "nopqrs01": "虽然 Base64 针对紧凑性进行了优化，但当最小化输入错误（例如手动输入）至关重要时，会选择 Base32。",
    "nrix6l": "奇切瓦语",
    "nxJC7": "执行转换器时要执行的默认操作。",
    "o52xW": "导出",
    "o8xyzu": "卢森堡语",
    "oBz8D": "加载中",
    "oNLxH": "用户名",
    "oNg3f": "官方网站",
    "ocxsw3": "爱尔兰语",
    "of_ox": "总而言之，LafTools是满足您所有需求的一站式解决方案。",
    "oj23X": "恢复数据库",
    "ojCWEFdVe": "压缩 JavaScript 代码，删除所有不必要的字符。",
    "ooiFU": "重启Java服务",
    "oqHqVq": "排序方式",
    "oqHqqV": "总计：{0} 个命令",
    "oqHqqVq": "复制次数",
    "oqjbcj": "老挝",
    "os8h6u": "丹麦语",
    "p5e9n": "将库添加为 Gradle 构建脚本中的依赖项。例如，在应用程序级 build.gradle 文件中，添加带有最新版本号的“implementation 'com.bottlerocketstudios:barcode-core:...'”。",
    "p6e3n": "通过在程序包管理器控制台中运行“Install-Package WarrenStranger.Base62”来通过 NuGet 安装程序包，或者通过 NuGet 程序包管理器添加它。",
    "p8Exxc1s": "人工智能实验室中有各种利用人工智能技术更有效地执行任务的工具。",
    "p8eq9n": "您可以使用“base85”或“ascii85”等库在 JavaScript 中进行 Base85 编码和解码。",
    "p9e1n": "您可以使用“base-x”或“base62”等库在 JavaScript 中进行 Base62 编码和解码。",
    "p9s5t": "Base32 由因其对 JavaScript 的贡献而闻名的 Douglas Crockford 于 2001 年开发。它是作为 Base64 等现有编码的更可靠的替代方案而创建的，特别是对于需要基于文本的二进制数据表示的情况。",
    "pANmj": "可以根据服务器类型、脚本用法或您喜欢的任何其他标准来定义标签。",
    "pA_deJ": "导出到剪贴板",
    "pA_feeJ": "重连终端",
    "pA_qweJ": "清除缓冲区",
    "pDBSWq": "右侧面板没有可用内容",
    "pEk1kk": "LafTools在这里为您提供有用的功能。",
    "pEk1qkk": "列出所有打开的选项卡",
    "pHZDB": "实时动作",
    "pJoOz": "打开文件",
    "pKHRT": "转到工具",
    "pKqHRq": "搜索笔记",
    "pL6qH": "完全的。",
    "pZ4d616m-": "格式化{0}",
    "ph5jH": "处理这部分",
    "piih4x": "塔吉克",
    "pmAee": "阅读有关此工具的更多信息。",
    "pmnp4b": "乌克兰",
    "ppmz8e": "海地克里奥尔语",
    "pq5e9n": "您可以使用“bs58”等库在 JavaScript 中执行 Base58 编码和解码。",
    "pqrs890t": "通用兼容性：Base64 得到所有主要编程语言的广泛认可和支持。",
    "pqs7y3": "请考虑将此网页注册为 PWA 以获得完整的键盘映射支持。",
    "psA_eJ": "导出为文件",
    "psZoP": "将文件拖放到此处进行处理",
    "psqqpq_o": "好的，结果已复制到您的剪贴板 {0} 次。",
    "pzn2IpkDo": "缩进和漂亮的打印 JavaScript 对象表示法 (JSON) 代码。<br><br>标签：json 查看器、美化、语法突出显示",
    "q12beqwR": "没有可用的工具",
    "q29t31": "波兰语",
    "q2n3r": "如今，它被用于空间效率和可读性至关重要的各种应用中，例如 PDF 文档和某些网络协议。",
    "q2n9r": "添加后，将提供的模板复制到 Swift 文件中。请注意，在此示例中，我们使用假设场景，其中您拥有 Base45 字符串的 Base64 表示形式；在运行代码之前将其替换为实际的编码值。",
    "q2w5m": "使用Base32的目的？",
    "q2x8k": "它的用途已扩展到其他加密货币和需要人类可读、防错字符串的场景。",
    "q5h8n": "主要优点是在相同数量的编码数据下减少了字符串长度，使其适合空间效率至关重要的应用。",
    "q6n1r": "安装库后，将模板代码复制到 Java 类中，并在运行代码之前将占位符替换为实际的 Base85 编码值。",
    "q7n3r": "它还避免了诸如“O”和“0”、“I”和“l”等不明确的字符，这些字符可能会导致人工转录错误。",
    "q9iuti": "威尔士语",
    "qDrbEr": "您提供的用户名为空，请检查并重试。",
    "qF4uS2": "创建工作区",
    "qF4uS23": "新建窗口",
    "qHoktx": "谢谢您！",
    "qN1LdZ2": "上一次更改",
    "qQmBr": "文本翻译",
    "qTqyvWdY": "还没有完成",
    "qWemXE4": "2024 年 1 月 1 日",
    "qWw3eTH": "此部分有助于维护本地磁盘或云盘上的文件。",
    "qdeFXx": "目前，您正在寻找的此页面尚未完全实现。",
    "qpDBSW": "没有可用的面板",
    "qpDBSWe1": "没有可用的面板",
    "qqK_x_": "登入",
    "qqqwYoz": "帮助",
    "qqwYoz": "选项卡组",
    "qqwYqwe": "工作区",
    "qrstuvwx": "是的，除了Base64和Base32之外，还有Base16（十六进制）、Base58和Base85，每种都是针对不同的场景而设计的。",
    "qtpmvP": "确认本地密码",
    "qubSJ": "扩展 VM 不是 ID。 （参考：IQnMH）。",
    "qv1p5n": "例如，在 Java 中，您可以使用“org.iso.base45”库对数据进行编码。",
    "qzshys": "乌尔都语",
    "r1GLS": "标签",
    "r2n7v": "主要优点是由于排除外观相似的字符而提高了可读性，减少了手动输入期间的错误。",
    "r4n6v": "通过运行“go get github.com/xyproto/base62”将依赖项添加到您的项目中。这将下载并安装该软件包。",
    "r6nq2v": "Base62 的主要优点是由于字符集比 Base32 更大，但没有 Base64 中的非字母数字字符，因此提高了空间效率。",
    "r8c6z": "将“TEST12345”替换为您自己的字符串，并将此类作为 Java 程序执行以查看结果。",
    "r8y2w": "此处使用“Base32”PHP 库进行 Base32 编码和解码。",
    "r9a3t": "Base45 是一种基于文本的编码方案，它将二进制数据编码为 ASCII 字符。",
    "r9qn8v": "Base85 的主要优点是由于更大的字符集（85 vs. Base64 中的 64 或 Base32 中的 32）而提高了空间效率。",
    "rE6fUsSGl": "缩进和美化结构化查询语言 (SQL) 代码。",
    "rK6cx": "{0}，由 LafTools团队设计和开发",
    "rLXJN": "在 Kotlin 中，Android 内置的 'android.util.Base64' 类可用于 Base64 编码和解码。本示例假设Android环境；对于非 Android Kotlin 项目，请考虑使用“java.util.Base64”。",
    "rQkas": "欢迎来到LafTools",
    "rR1vd": "从文件加载输入",
    "rT34qnO": "输入要处理的文本。结果将显示在输出编辑器中。",
    "rVqlu": "解码{0}",
    "rYSpwq": "MD2（Message-Digest 2）算法是 Ronald Rivest 于 1989 年开发的一种加密哈希函数。该算法针对 8 位计算机进行了优化。尽管 MD2 不再被认为是安全的，即使截至 2014 年，它仍然在公共场合使用密钥基础设施作为使用 MD2 和 RSA 生成的证书的一部分。默认情况下，消息摘要算法由 18 轮组成。",
    "r_n6h": "浅色或深色模式",
    "rf0mql3": "日间或者夜间模式",
    "rpG0G": "我们重视您的反馈，并很乐意听到您对如何改进我们的产品的想法 - 请随时与我们分享您的反馈！",
    "rub76Z8zx": "尝试漂亮地打印 C 风格的语言，例如 C、C++、C#、Java、PHP、JavaScript 等。这不会完成完美的工作，并且生成的代码可能不再工作。此操作纯粹是为了使混淆或精简的代码更易于阅读和理解而设计的。无法正常工作的内容：For 循环格式化、Do-While 循环格式化、Switch/Case 缩进、某些位移运算符",
    "run_text": "在进入您的工作台之前，我们希望首先预加载所需的系统资源。请稍等片刻，即将完工，详情如下",
    "rycJy": "LafTools是为程序员设计的下一代全能工具箱。它代表了CodeGen工具箱的第二个版本，采用Golang和新的UI语言进行了全新的重构。",
    "ryhkqb": "保加利亚语",
    "s-fxP80Dd": "LafTools IDE",
    "s0vrf9": "希伯来语",
    "s1b3m": "与 Base64 或 Base32 不同，它排除了容易混淆的“0”、“O”、“I”和“l”字符，使其适用于 URL 和 QR 码。",
    "s3e6r": "如何使用 Base45 编码数据？",
    "s4OeX": "登录系统成功",
    "s5b8m": "将“TEST12345”替换为自己的数据，并在PHP环境中执行此脚本以进行Base32操作。",
    "s5e8r": "将“TEST12345”替换为您的实际数据，并在 Swift 应用程序上下文中运行此代码段以执行 Base32 操作。",
    "s5t0n": "Base32 中的填充涉及添加“=”字符，以确保编码数据的最终块仍包含 8 位的倍数。然而，与 Base64 不同的是，Base32 填充很少，因为每个 Base32 字符已经编码了 5 位。",
    "s7e9r": "不需要外部库。只需将“b'TEST12345”替换为实际的类似字节的对象即可进行编码/解码。",
    "sBxHr": "Scala 使用 Java 的内置“java.util.Base64”类进行 Base64 操作。确保您在 Java 8 或更高版本的 JVM 平台上运行。",
    "sHoxxW": "历史",
    "sKx5t": "Java 的内置“java.util.Base64”类自 Java 8 起可用，提供 Base64 编码和解码的方法。使用 UTF-8 编码将输入字符串转换为字节，然后根据需要进行编码和解码。",
    "sO0MOe": "每次您在窗口停留超过 5 秒，都会显示在此处。",
    "sR8yc": "关闭",
    "sc49my": "信德语",
    "sdfk1": "将选项卡向左滚动",
    "sdfk13": "将选项卡向右滚动",
    "sglMS": "创建时间",
    "sk123": "尚未完成",
    "slqcWD": "该逻辑部分尚不支持，敬请期待。",
    "sojBI": "转换",
    "spCqEa": "待办",
    "ssDaOq": "是LafTools新用户吗？",
    "ssm80i": "巴斯克",
    "svqh06": "阿塞拜疆语",
    "sys_updates": "最新系统更新",
    "t63Qw": "解除此信息",
    "t6wczq": "科萨语",
    "t7m4g": "“base32”包用于 Rust 中的 Base32 编码和解码。",
    "t84q1z": "亚美尼亚语",
    "t8c6xc": "索马里",
    "t8z1v": "当末尾没有足够的位来填充完整的 5 位组时，将添加填充字符“=”。例如，一个字节需要两个 Base32 字符，一个 3 字节序列需要四个 Base32 字符。",
    "t9m3g": "CryptoSwift 是一个流行的 Swift 包，包含 Base32 编码和解码功能。",
    "tBIX-d": "视窗",
    "tEiv_": "检索扩展详细信息",
    "tIy3Q": "遇到错误",
    "tIyq3Q": "遇到错误",
    "tR8pY": "Go 提供了一个标准库包“encoding/base64”，其中包含用于 Base64 编码和解码的函数。不需要外部依赖；只需将此包导入到您的 Go 程序中并调用适当的函数即可。",
    "tWe1yF": "没有可用的 shell 命令。",
    "tY3p1": "更多信息",
    "tiaiB": "取消",
    "tn7duf": "克罗地亚语",
    "trywithclassicalwebui": "切换至传统Web风格",
    "ttAre": "在此输入您的明文密码",
    "tuv23456": "Base64 URL 安全变体",
    "twamg": "AI助手，赋能您的创造力",
    "tyhgpr": "爪哇语",
    "u1i2b": "与 Base64 或 Base32 相比，使用 Base85 有何优点？",
    "u2l8s": "Base45是什么？",
    "u3i8b": "与 Base64 或 Base32 相比，使用 Base62 有何优点？",
    "u3j9p": "当您需要可以键入或打印而不会丢失信息的二进制数据的紧凑文本表示形式时，通常会使用 Base32，例如文件完整性检查、地理缓存和安全密码生成。",
    "u7i9b": "对于 Go，请使用 GitHub 上提供的“base62”包。",
    "u7vwx8yz": "常见的 Base64 操作",
    "u8i5b": "与 Base64 或 Base32 相比，使用 Base58 有何优点？",
    "u9g6t": "对于 JavaScript，您需要安装“base85”包来进行 Base85 编码和解码。",
    "uCEe8": "实时转换",
    "uFcDQ": "正在初始化状态数据...",
    "uV5Bi": "无法加载扩展",
    "uVseB": "按{0}显示热键列表",
    "uW7eZ": "在 C 中，没有本机 Base64 实现。此示例使用 OpenSSL 库进行 Base64 编码和解码。要使用此代码片段，请在系统上安装 OpenSSL，并在使用类似于“gcc -o base64_example base64_example.c -lssl -lcrypto”的命令编译程序时链接到相应的库。",
    "ucDLv": "您已复制此记录 {0} 次",
    "ui5pZ": "命令解析器",
    "ulah0q": "日语",
    "unc9E": "随机文本",
    "usr_defined": "系统偏好设置",
    "uvwxyza1": "无数据丢失：由于这是一个可逆过程，因此 Base64 编码不会导致任何信息丢失。",
    "uwqGE": "转到工具",
    "v3k5r": "该字符集包括所有大写和小写字母（A-Z、a-z）和数字（0-9），与 Base64 或 Base32 相比，提供更紧凑的表示形式。",
    "v4k6r": "与 Base64 或 Base32 相比，它通过使用更大的字符集将数据编码为更紧凑的形式。",
    "v4n9t": "Base58 是一种将二进制数据表示为字母数字字符序列的编码方案。",
    "v5k3r": "安装后，将解码部分中的占位符替换为实际的 Base85 编码字符串并运行脚本。该库处理缓冲区和 Base85 字符串之间的转换。",
    "v6qkl": "BouncyCastle NuGet 包提供 C# 中的 Base32 编码和解码。",
    "v7q3db": "泰国",
    "v9b7t": "将“TEST12345”替换为您自己的字符串，然后运行此控制台应用程序以执行 Base32 编码和解码操作。",
    "vOjNC": "输入密码或安全密钥",
    "vTsQU": "请提供您管理员的邀请码",
    "vU17B": "无法发送请求",
    "vWqac": "在进入您的工作台之前，我们首先要预加载所需的系统资源。请稍等，很快就会完成，详情如下。",
    "vaP0vq": "本地密码设置成功。",
    "vh9j4": "输入",
    "vo1prl": "西班牙语",
    "vr93oi": "芬兰",
    "vwx1yza2": "一个示例是对图像文件进行编码以将其嵌入 HTML <img> 标记中：",
    "w1ANqKoBf": "隐藏侧边栏中的文本",
    "w1x4k": "是的，存在多种变体，包括 Ascii85（用于 PostScript 和 PDF）、Z85 (ZeroMQ) 和 UUencode（较旧的格式）。每个都有稍微不同的字符集和规则。",
    "w2x9qk": "虽然 Base62 本身没有显着的变体，但某些实现在字符集的选择上可能略有不同，例如排除 Base64 中常用的“+”或“/”。",
    "w3x7k": "是的，一些流行的变体包括 Base58Check，它添加了比特币中常用的用于错误检测的校验和。",
    "w6otqn": "科西嘉岛",
    "w9qudj": "旁遮普语",
    "wAxtg": "最初，我们生成了一个 UUID 作为授权令牌，供您执行此设置。根据 LafTools收到的信息，您提供的令牌是 {0}，LafTools已成功验证，因此您可以继续设置此表单。",
    "wI1eh": "下一步",
    "wQYoz": "文件",
    "wQdYoz": "编辑",
    "wQdqwYoz": "查看",
    "wcl1K": "用法",
    "wgkk6y": "马耳他语",
    "wj3VS": "此操作将数据从 ASCII {0} 字符串解码回其原始格式。",
    "wsWcXd": "通知",
    "wxyzabcd": "Base64 有一个 URL 安全版本，它将“+”替换为“-”，将“/”替换为“_”，并省略填充“=”，使其适合 Web URL。",
    "x009": "访问我们的使用文档",
    "x2c5e": "Python有一个内置的'base85'模块，支持Base85编码和解码。",
    "x2z6r": "什么是Base58？",
    "x5alzu": "库尔德语（库尔曼吉语）",
    "x5tHV": "系统总览",
    "x5z1b": "Base45 主要是为了在数字 COVID 证书的背景下使用 QR 码而开发的。",
    "x6v2w": "C 语言中没有标准的 Base32 库，因此我们在这里使用假设的“libbase32”库。",
    "x7n1m": "Base62 是一种编码方案，将二进制数据表示为 62 个字母数字字符的序列。",
    "x8mdg": "Python 的内置“base64”模块通过“b32encode”和“b32decode”函数提供 Base32 编码和解码。",
    "x9g7e": "从 GitHub (https://github.com/dankamongmen/libbase32) 下载源代码，或者将其安装为包（如果适用于您的平台）。",
    "x9n1b": "Base85 是一种使用一组 85 个可打印 ASCII 字符表示二进制数据的编码方案。",
    "xMBv0": "正在加载相关资源...",
    "xOJqG1": "常见问题",
    "xPHqP": "描述尚未定义。",
    "xQ_ls": "备份Redis",
    "xbz0B": "关闭所有选项卡",
    "xbz0B2": "关闭选项卡",
    "xdqwe": "欢迎使用LafTools！",
    "xeP4zV": "快速查看您的 TODO 项目",
    "xeP4zVd": "快速查找英语词汇。",
    "xlqtA": "反馈",
    "xml-bdeautify.desc.2a5f9": "缩小 XML 代码",
    "xml-beautify.desc.2a5f9": "此操作通过添加适当的缩进、换行符并确保格式良好的结构来格式化 XML 数据以提高可读性。",
    "xs22XLF": "该商品 ID 没有可用数据，请考虑选择其他商品。",
    "y3b6n": "是的，只要编码字符串是根据 Base45 规范生成的，任何兼容的解码器都应该能够对其进行解码。",
    "y3m7k": "对于 Java，请使用“commons-codec”库，其中包括对 Base85 编码和解码的支持。",
    "y3m9k": "为什么要创建 Base62？",
    "y3qjdd": "您的本地密码已成功验证。",
    "y5nne": "此代码可以直接在 Node.js 环境中运行，也可以作为需要 Base32 功能的大型项目的一部分运行。",
    "y6m8k": "为什么要创建 Base85？",
    "y6t1n": "Base32的缺点",
    "y8Ir5": "这部分用于初始化您的管理员帐户，但是，目前，这里不需要创建或调整任何内容，因为它是您的管理员之前设置的，请忽略这部分并继续其余步骤。",
    "y8b1m": "将“TEST12345”替换为您自己的数据，并确保正确实现和链接库函数以编译和执行该程序以进行 Base32 操作。",
    "y9m1n": "为什么要创建 Base58？",
    "y9m3k": "对于 Swift，您可以使用 GitHub 上提供的“Base45”库。",
    "y9z2e": "将“TEST12345”替换为您的实际字节片，并运行此 Go 程序以使用 Base32 标准编码进行编码和解码。",
    "y9z2t": "在 Ruby 环境（例如 IRB）中执行此脚本，或将其保存为 .rb 文件并使用“ruby filename.rb”运行。",
    "yMZW-GEgf": "格式化XML",
    "ySVf-": "重试此请求",
    "yTsqFO": "MD4（Message-Digest 4）算法是Ronald Rivest于1990年开发的一种加密哈希函数。摘要长度为128位。该算法影响了后来的设计，如MD5、SHA-1和RIPEMD算法。MD4的安全性已受到严重损害。",
    "yVprb": "这部分仍在开发中。",
    "y_2Q1": "编码和解码",
    "y_2Q2": "对称加密算法",
    "y_2Q3": "非对称加密算法",
    "y_2Q4": "国密算法(SM)",
    "y_2Q5": "网络认证工具",
    "y_2Q5dqw": "翻译助手",
    "y_9YM": "输出将显示在这里。",
    "y_9YqM": "正在加载静态资源...",
    "y_BN6": "摘要算法",
    "ya0cwu": "马来语",
    "yc7dqiu": "简体中文",
    "yfYeg": "文本模板",
    "yiRso": "云笔记",
    "yqiRso": "本地笔记",
    "yqrxl4": "塞尔维亚",
    "yt7kX2fPQ": "捕获意外异常",
    "yznU9": "空树数据",
    "z-o28we": "流程控制面板",
    "z0j2nf": "印地语",
    "z1m2t": "用法示例：`const编码= bs58.encode('your-data'); const 解码 = bs58.decode(编码);`",
    "z1n5qr": "示例包括用于 JavaScript 的 base45 npm 包和用于 .NET 的 dotnet-base45。",
    "z1oFn": "转义与反转义",
    "z2jzej": "马拉地语",
    "z2m7t": "用法示例：`const base62 = require('base62'); const 编码 = base62.encode('your-data'); const 解码 = base62.decode(编码);`",
    "z2t7m": "什么是Base85？",
    "z2x8c": "Base32 的视觉歧义较少，因为它仅使用大写字母和数字，与包含“+”、“/”和小写字母的 Base64 相比，更容易手动或通过电话阅读和转录。",
    "z3m1t": "添加依赖项并同步项目后，将提供的模板复制到 Kotlin 类中，在运行代码之前将占位符替换为实际编码值。",
    "z4t9b": "什么是 Base62？",
    "z5b7m": "与 Base64 或 Base32 相比，它使用更大的字母表（0-9、A-Z、a-z、-、.、$、/、+、% 和 *），从而导致相同输入数据的编码字符串更短。",
    "z5bvb": "通过运行“npm install base32-encoding”来安装它。将代码片段中的“TEST12345”替换为您所需的输入数据。",
    "z5m6t": "用法示例：`const base85 = require('base85'); const 编码 = base85.encode('your-data'); const 解码 = base85.decode(编码);`",
    "z6m1c": "后来引入了 z-base-32 等变体来提高可用性，用其他字符替换了一些不太容易记住的字符，但 Crockford 的原始规范至今仍被广泛使用。",
    "z79b1a": "阿拉伯",
    "z7n1m": "通过运行“npm install base85”或“yarn add base85”使用 npm 安装它。",
    "z7t1p": "Base62 是否有任何特定变体？",
    "z8em2t": "安装后，将提供的模板复制到 C# 控制台应用程序中，并在运行程序之前将占位符替换为实际编码值。",
    "z8m2t": "与 Base64 或 Base32 相比，使用 Base45 有何优点？",
    "z8n6k": "将“TEST12345”替换为您想要的字符串，编译并运行该程序即可查看 Base32 编码和解码结果。",
    "z8qm2t": "该库提供用于 Base45 操作的编码器和解码器类。将模板代码复制到 C# 控制台应用程序中，并在安装包后执行它。",
    "z8qqm2t": "安装后，将提供的模板复制到 C# 控制台应用程序中，并在运行程序之前将占位符替换为实际编码值。",
    "z9b6n": "通过 Swift Package Manager ('https://github.com/krzyzanowskim/CryptoSwift') 将依赖项添加到您的 Xcode 项目。",
    "z9kVv": "Python 有一个内置的“base64”模块，它提供了 Base64 编码和解码的方法。输入字符串首先使用 UTF-8 编码转换为字节，然后编码为 Base64，然后解码回其原始形式。",
    "z9t2p": "Base58 是否有特定的变体？",
    "z9t7p": "Base85 有特定的变体吗？",
    "zN2ES": "工作区",
    "zaSKh": "刷新",
    "zc3Hf": "密码",
    "zjDJk": "请提供工作区目录路径",
    "zkqUFa": "{0} 尚未配置",
    "zkv375": "高棉语",
    "zmDWx": "联系我们",
    "znVRwq": "文件",
    "zpyd34": "英语",
    "zqiIoqXw": "执行计算中......",
    "zwd4v": "扩展详细信息",
    "zyx98765": "Base64可以用来压缩吗？",
    "zzcepr": "宿务语"
}
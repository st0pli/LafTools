{
    "Diff-XML-JSON-Article": "Różnica między XML i JSON",
    "MDN-XML-Syntax": "Dokumenty internetowe MDN — składnia XML",
    "W3Schools-XML-Validation": "W3Schools - Walidacja XML",
    "XML-Advantage-Readable-018": "Jego czytelny dla człowieka charakter pozwala na łatwą kontrolę i debugowanie, a możliwość definiowania niestandardowych struktur sprawia, że ​​jest elastyczny w wielu przypadkach użycia.",
    "XML-Advantage-Standardized-017": "XML to powszechnie przyjęty standard, dzięki czemu jest kompatybilny z różnymi platformami i systemami, promując interoperacyjność i wymianę danych.",
    "XML-Advantages-016": "Jakie są zalety używania XML?",
    "XML-Attributes-006": "Elementy mogą mieć atrybuty, które dostarczają dodatkowych informacji o elemencie w tagu otwierającym, np. {0}",
    "XML-Basics-001": "Co to jest XML?",
    "XML-Def-002": "XML (eXtensible Markup Language) to język znaczników, który definiuje zestaw reguł kodowania dokumentów w formacie czytelnym zarówno dla człowieka, jak i komputera.",
    "XML-Disadvantage-Size-020": "XML może być stosunkowo szczegółowy, co skutkuje większymi rozmiarami plików w porównaniu z alternatywami takimi jak JSON, co wpływa na szybkość transmisji i wymagania dotyczące przechowywania.",
    "XML-Disadvantages-019": "Jakie są wady używania XML?",
    "XML-JSON-Diff-Structure-014": "XML wykorzystuje szczegółowe, hierarchiczne znaczniki dla struktury, podczas gdy JSON opiera się na parach klucz-wartość i tablicach. Przykład: XML {0} kontra JSON {1}.",
    "XML-JSON-Diff-Syntax-015": "XML ma bardziej rygorystyczną składnię z zamykającymi znacznikami i atrybutami, podczas gdy składnia JSON jest lżejsza i bliższa notacji obiektowej JavaScript. Ogólnie uważa się, że format JSON jest łatwiejszy do analizowania i przesyłania przez Internet.",
    "XML-JSON-Difference-013": "Jaka jest różnica między XML i JSON?",
    "XML-Nesting-007": "Jak działa zagnieżdżanie w formacie XML?",
    "XML-Nesting-Example-009": "Na przykład `<book><title>Tytuł mojej książki</title><author>John Doe</author></book>` reprezentuje książkę z jej tytułem i autorem jako elementami zagnieżdżonymi.",
    "XML-Nesting-Explanation-008": "W formacie XML elementy można zagnieżdżać jeden w drugim, aby reprezentować relacje hierarchiczne. Elementy podrzędne są umieszczane pomiędzy znacznikami otwierającymi i zamykającymi elementu nadrzędnego.",
    "XML-Processing-Speed-021": "Analizowanie i generowanie kodu XML może być wolniejsze ze względu na ścisłą składnię i potrzebę sprawdzania poprawności, szczególnie w przypadku złożonych dokumentów.",
    "XML-Purpose-003": "Został zaprojektowany do przenoszenia danych, a nie do wyświetlania danych, takich jak HTML, dzięki czemu można go używać jako wspólnego formatu udostępniania uporządkowanych informacji na różnych platformach i aplikacjach.",
    "XML-Syntax-004": "Jaka jest podstawowa składnia XML?",
    "XML-Syntax-Example-005": "Prosty dokument XML składa się z elementów o strukturze przypominającej drzewo. Każdy element zaczyna się od znacznika w nawiasach ostrych (<element>) i kończy się znacznikiem zamykającym (</element>).",
    "XML-Validation-010": "Co to jest walidacja XML i jak działa?",
    "XML-Validation-Def-011": "Walidacja XML gwarantuje, że dokument XML jest zgodny z określonym zestawem reguł zdefiniowanych w definicji typu dokumentu (DTD) lub schemacie XML (XSD).",
    "XML-Validation-Process-012": "Walidatory sprawdzają, czy obecne są wszystkie wymagane elementy i atrybuty, weryfikują typy danych i egzekwują wszelkie ograniczenia określone w schemacie przed przetworzeniem dokumentu."
}